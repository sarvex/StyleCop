/****************************************************************************
*  The TEXTMGR120 Interfaces
*  Copyright (c) Microsoft Corporation, All Rights Reserved
****************************************************************************/

#ifndef INTEROPLIB

import "IVsQueryEditQuerySave2.idl";
import "IVsQueryEditQuerySave80.idl";
import "msxml.idl";
import "context.idl";
import "textmgr.idl";
import "textmgr2.idl";
import "textmgr100.idl";
import "textmgr110.idl";

#endif

/****************************************************************************
********    IMPORTANT!!   *********

All guids for interfaces and co-creatable objects in this file should be defined
in textmgruuids.h

****************************************************************************/

#include "textmgruuids.h"
#include "vsshelluuids.h"

#ifndef INTEROPLIB

[
    uuid(uuid_lib_TextManager120),
    version(1.0)
]
library TextMgr120
{

#endif

    #define MAX_FILE_TYPE 24
    typedef struct _LANGPREFERENCES3
    {
        //---------------------------------------------------------------------------------------------
        // The following members are copied from the original LANGPREFERENCES struct.  To maintain
        // compatibility, their size, meaning, and order must not be modified.

        CHAR szFileType[MAX_FILE_TYPE];         // file type: "HTML"

        // Things some language services don't support
        unsigned fShowCompletion;               // set statement completion through UI?
        unsigned fShowSmartIndent;              // set smart indent option through UI?

        // advanced statement builder setting
        unsigned fHideAdvancedAutoListMembers;  // hide advanced members (irrelevant if !fAutoListMembers)

        // tab settings
        unsigned uTabSize;                      // limit of MAX_EDITOR_TAB_SIZE
        unsigned uIndentSize;                   // limit of MAX_EDITOR_TAB_SIZE
        unsigned fInsertTabs;                   // insert tab chars or just spaces?

        // indent settings
        vsIndentStyle IndentStyle;              // none/block/smart

        // statement builder settings
        unsigned fAutoListMembers;              // bring up a proposed list of members on the fly?
        unsigned fAutoListParams;               // bring up a proposed list of params on the fly?

        // selection settings
        unsigned fVirtualSpace;                 // virtual space navigation/selection?

        // display settings
        unsigned fWordWrap;                     // Word wrap
        unsigned fTwoWayTreeview;               // show tree view?
        unsigned fHotURLs;                      // Single click URL navigation?
        unsigned fDropdownBar;                  // Should language services support the dropdown/nav bar?
        unsigned fLineNumbers;                  // Show line numbers in the selection margin?

        GUID guidLang;                          // language service

        //---------------------------------------------------------------------------------------------
        // End of copy of original LANGPREFERENCES struct.  New members must be added below this point.

        unsigned fWordWrapGlyphs;               // Should a glyph be shown to indicate a wrapped line?
        unsigned fCutCopyBlanks;               // cut/copy blanks on blank line

        
        //---------------------------------------------------------------------------------------------
        // End of copy of original LANGPREFERENCES2 struct.  New members must be added below this point.

        unsigned fShowHorizontalScrollBar;             // Show the horizontal scroll bar
        unsigned fShowVerticalScrollBar;               // Show the vertical scroll bar

        unsigned fShowAnnotations;                     // Show any annotations over the vertical scroll bar
        unsigned fShowChanges;                         // show changes over the vertical scroll bar
        unsigned fShowMarks;                           // show marks (bookmarks, find, etc.) over the vertical scroll bar
        unsigned fShowErrors;                          // show errors/warnings over the vertical scroll bar
        unsigned fShowCaretPosition;                   // show caret position over the vertical scroll bar

        unsigned fUseMapMode;                          // use map mode for vertical scroll bar
        unsigned fShowPreview;                         // show preview tip when moving over vertical scroll bar
        unsigned uOverviewWidth;                       // width of the overview margin

        unsigned fBraceCompletion;                     // Brace Completion

    } LANGPREFERENCES3;

    ////////////////////////////////////////////////////////////////////////////
    // IVsTextManager4 interface
    ////////////////////////////////////////////////////////////////////////////
    [
        uuid(uuid_IVsTextManager4),
        version(1.0)
    ]
    // Preserve signature for method 
    [custom(uuid_VsPreserveSigAttribute, "preservesig")]
    interface IVsTextManager4 : IUnknown
    {
        // For the LANGPREFERENCES member, specify the language in question by setting 
        // pLangPrefs->guidLang to the language SID.
        [local]  HRESULT GetUserPreferences4(
            [out]     VIEWPREFERENCES3      * pViewPrefs,  // struct is caller-allocated
            [in, out] LANGPREFERENCES3      * pLangPrefs,  // struct is caller-allocated
            [in, out] FONTCOLORPREFERENCES2 * pColorPrefs);// struct is caller-allocated

        [local]  HRESULT SetUserPreferences4(
            [in] const VIEWPREFERENCES3      * pViewPrefs,
            [in] const LANGPREFERENCES3      * pLangPrefs,
            [in] const FONTCOLORPREFERENCES2 * pColorPrefs);
    };

    ////////////////////////////////////////////////////////////////////////////
    // IVsTextManagerEvents4 interface
    ////////////////////////////////////////////////////////////////////////////
    [
        uuid(uuid_IVsTextManagerEvents4 ),
        version(1.0)
    ]
    // Preserve signature for method 
    [custom(uuid_VsPreserveSigAttribute, "preservesig")]
    interface IVsTextManagerEvents4 : IUnknown
    {

        // Fired when the user's global preferences have changed
        [local]  HRESULT OnUserPreferencesChanged4([in] const VIEWPREFERENCES3  * pViewPrefs,
            [in] const LANGPREFERENCES3  * pLangPrefs,
            [in] const FONTCOLORPREFERENCES2 * pColorPrefs);
    };

    ////////////////////////////////////////////////////////////////////////////
    // IVsCodeWindow2 interface
    ////////////////////////////////////////////////////////////////////////////
    [
        uuid(uuid_IVsCodeWindow2)
    ]
    // Preserve signature for method 
    [custom(uuid_VsPreserveSigAttribute, "preservesig")]
    interface IVsCodeWindow2 : IUnknown
    {
        [local] HRESULT GetEmbeddedCodeWindowCount ([out] long* piCount);
        [local] HRESULT GetEmbeddedCodeWindow ([in] long iIndex, [out] IVsCodeWindow **ppCodeWindow);
        [local] HRESULT GetContainingCodeWindow ([out] IVsCodeWindow **ppCodeWindow);
    };

    ////////////////////////////////////////////////////////////////////////////
    // IVsCodeWindowEvents2 interface
    ////////////////////////////////////////////////////////////////////////////
    [
        uuid(uuid_IVsCodeWindowEvents2)
    ]
    // Preserve signature for method 
    [custom(uuid_VsPreserveSigAttribute, "preservesig")]
    interface IVsCodeWindowEvents2 : IUnknown
    {
        [local] HRESULT OnNewEmbeddedCodeWindow([in] IVsCodeWindow *pCodeWindow);
        [local] HRESULT OnCloseEmbeddedCodeWindow([in] IVsCodeWindow *pCodeWindow);
    }

#ifndef INTEROPLIB

};

#endif

