/****************************************************************************
* vslangproj90.idl
*
* Sources the typelib that needs to be exposed to clients.
* Exposes the CATID's of the extensibility Project & ProjectItem object.
* Exposes the diff CATID's for the diff packages for the browse objects.
* Exposes the browse object interfaces
* Exposes the interfaces of the package specific extensibility project object.
*****************************************************************************/
#ifndef INTEROPLIB
import "oaidl.idl";


// Interface definitions
cpp_quote("#define VSLANGPROJ90_VER_MAJ    9")
cpp_quote("#define VSLANGPROJ90_VER_MIN    0")

#define VSLANGPROJ_VER        9.0

[
    uuid(dcbf68c6-da4b-44f5-b9e0-1563ec000392),
    helpstring("Microsoft Visual Studio Project Model (9.0)"),
    version(VSLANGPROJ_VER)
]
library VSLangProj90
{
#endif // INTEROPLIB


    importlib("stdole32.tlb");
    importlib("stdole2.tlb");
    importlib("vslangproj.tlb");
    importlib("vslangproj2.tlb");
    importlib("vslangproj80.tlb");

    // this list includes config and project properties.
    // if you add new properties, please add config props in the config section and
    // project props in the project section.
    enum VsProjPropId90
    {
        /********************************************** defined in vslangproj.idl
        VBPROJPROPID__First = 10000,
        // = 10001
        VBPROJPROPID_DebugSymbols,
        VBPROJPROPID_StartArguments,
        VBPROJPROPID_StartAction,
        VBPROJPROPID_OutputPath,
        VBPROJPROPID_DefineConstants,
        VBPROJPROPID_StartProgram,
        VBPROJPROPID_StartWorkingDirectory,
        VBPROJPROPID_StartURL,
        VBPROJPROPID_OutputFileName,
        VBPROJPROPID_IntermediatePath,
        // = 10011
        VBPROJPROPID_ApplicationIcon,
        VBPROJPROPID_WebServer,
        VBPROJPROPID_AssemblyName,
        VBPROJPROPID_Unused1,
        VBPROJPROPID_StartupObject,
        VBPROJPROPID_OutputType,
        VBPROJPROPID_WebServerVersion,
        VBPROJPROPID_ServerExtensionsVersion,
        VBPROJPROPID_LinkRepair,
        VBPROJPROPID_OfflineURL,
        // = 10021
        VBPROJPROPID_DefaultClientScript,
        VBPROJPROPID_DefaultTargetSchema,
        VBPROJPROPID_DefaultHTMLPageLayout,
        VBPROJPROPID_ProjectFolder,
        VBPROJPROPID_ProjectURL,
        VBPROJPROPID_FileName,
        VBPROJPROPID_FullPath,
        VBPROJPROPID_LocalPath,
        VBPROJPROPID_URL,
        VBPROJPROPID_Extender,
        // = 10031
        VBPROJPROPID_ExtenderNames,
        VBPROJPROPID_ExtenderCATID,
        VBPROJPROPID_ActiveConfigurationSettings,
        VBPROJPROPID_AbsoluteProjectDirectory,
        VBPROJPROPID__Project,
        VBPROJPROPID_DefineDebug,
        VBPROJPROPID_DefineTrace,
        VBPROJPROPID_StartPage,
        VBPROJPROPID_StartWithIE,
        VBPROJPROPID_EnableASPDebugging,
        // = 10041
        VBPROJPROPID_EnableASPXDebugging,
        VBPROJPROPID_RootNamespace,
        VBPROJPROPID_AssemblyOriginatorKeyMode,
        VBPROJPROPID_AssemblyOriginatorKeyFile,
        VBPROJPROPID_AssemblyKeyContainerName,
        VBPROJPROPID_DelaySign,
        VBPROJPROPID_FileSharePath,
        VBPROJPROPID_ActiveFileSharePath,
        VBPROJPROPID_WebAccessMethod,
        VBPROJPROPID_ActiveWebAccessMethod,
        // = 10051
        VBPROJPROPID_OptionStrict,
        VBPROJPROPID_WarningLevel,
        VBPROJPROPID_TreatWarningsAsErrors,
        VBPROJPROPID_RemoveIntegerChecks,
        VBPROJPROPID_BaseAddress,
        VBPROJPROPID_ReferencePath,
        VBPROJPROPID_EnableUnmanagedDebugging,
        VBPROJPROPID_EnableSQLServerDebugging,
        VBPROJPROPID_OptionExplicit,
        VBPROJPROPID_OptionCompare,
        // = 10061
        //C# only, except VBPROJPROPID_Optimize
        VBPROJPROPID_AllowUnsafeBlocks,
        VBPROJPROPID_CheckForOverflowUnderflow,
        VBPROJPROPID_DocumentationFile,
        VBPROJPROPID_Optimize,
        VBPROJPROPID_IncrementalBuild,
        VBPROJPROPID_NoStandardLibraries,
        VBPROJPROPID_ProjectType,
        VBPROJPROPID_DefaultNamespace,
        VBPROJPROPID_FileAlignment,
        VBPROJPROPID_DisableWarnings,
        // = 10071
        VBAPROJPROPID_ProjectName,   // VBA only property
        VBPROJPROPID_RegisterForComInterop,
        VBPROJPROPID_ConfigurationOverrideFile,
        VBPROJPROPID_RemoteDebugEnabled,
        VBPROJPROPID_RemoteDebugMachine,
        ********************************************** defined in vslangproj2.idl
        VBPROJPROPID_NoStdLib      = 10066,
        VBPROJPROPID_PreBuildEvent = 10076,
        VBPROJPROPID_PostBuildEvent,
        VBPROJPROPID_RunPostBuildEvent,
        VBPROJPROPID_NoWarn,
        VBPROJPROPID_AspnetVersion
        ********************************************** defined in vslangproj80.idl
        VBPROJPROPID_DebugInfo                      =  10106,
        VBPROJPROPID_PlatformTarget                 =  10109,
        VBPROJPROPID_UseVSHostingProcess            =  10110,
        VBPROJPROPID_GenerateSerializationAssemblies=  10111,
        // Property IDs used for CodeAnalysis integration.  Intentionally leaving a hole
        // in the numbering scheme here to avoid having to change the numbers
        // every time we integrate from Main to Lab26
        VBPROJPROPID_RunCodeAnalysis                       =  12200,
        VBPROJPROPID_CodeAnalysisLogFile                   =  12201,
        VBPROJPROPID_CodeAnalysisRuleAssemblies            =  12202,
        VBPROJPROPID_CodeAnalysisRules                     =  12203,
        VBPROJPROPID_CodeAnalysisInputAssembly             =  12204,
        VBPROJPROPID_CodeAnalysisSpellCheckLanguages       =  12205,
        VBPROJPROPID_CodeAnalysisUseTypeNameInSuppression  =  12206,
        VBPROJPROPID_CodeAnalysisModuleSuppressionsFile    =  12207,
        // This lists project properties
        VBPROJPROPID_InstanceType                   =  12100,
        VBPROJPROPID_ShutdownMode                   =  12101,
        VBPROJPROPID_AssemblyTitle                  =  12102,
        VBPROJPROPID_AssemblyDescription            =  12103,
        VBPROJPROPID_AssemblyCompany                =  12104,
        VBPROJPROPID_AssemblyProduct                =  12105,
        VBPROJPROPID_AssemblyCopyright              =  12106,
        VBPROJPROPID_AssemblyTrademark              =  12107,
        VBPROJPROPID_AssemblyType                   =  12108,
        VBPROJPROPID_TypeComplianceDiagnostics      =  12109,
        VBPROJPROPID_CompatibilityChecks            =  12110,
        VBPROJPROPID_CompatibleAssembly             =  12111,
        VBPROJPROPID_Win32ResourceFile              =  12112,
        VBPROJPROPID_AssemblyOriginatorKeyFileType  =  12114,
        VBPROJPROPID_AssemblyKeyProviderName        =  12115,
        VBPROJPROPID_AssemblyVersion                =  12116,
        VBPROJPROPID_AssemblyFileVersion            =  12117,
        VBPROJPROPID_SecureDebugURL                 =  12118,
        VBPROJPROPID_GenerateManifests              =  12119,
        VBPROJPROPID_EnableSecurityDebugging        =  12120,
        VBPROJPROPID_TreatSpecificWarningsAsErrors  =  12121,
        VBPROJPROPID_Publish                        =  12122,
        VBPROJPROPID_ComVisible                     =  12123,
        VBPROJPROPID_AssemblyGuid                   =  12124,
        VBPROJPROPID_NeutralResourcesLanguage       =  12125,
        VBPROJPROPID_SignAssembly                   =  12126,
        VBPROJPROPID_TargetZone                     =  12127,
        VBPROJPROPID_ExcludedPermissions            =  12128,
        VBPROJPROPID_ManifestCertificateThumbprint  =  12129,
        VBPROJPROPID_ManifestKeyFile                =  12130,
        VBPROJPROPID_ManifestTimestampUrl           =  12131,
        VBPROJPROPID_SignManifests                  =  12132

        **********************************************/

        VBPROJPROPID_TargetFramework                =  12200,
        VBPROJPROPID_ApplicationManifest            =  12201,
    };


    // VB specific properties
    enum  VBProjPropId90
    {
        VBPROJPROPID_OptionInfer                  =  15101,
        VBPROJPROPID_CodeAnalysisIgnoreGeneratedCode       =  15208,
        VBPROJPROPID_CodeAnalysisOverrideRuleVisibilities  =  15209,
        VBPROJPROPID_CodeAnalysisCulture                   =  15210,
        VBPROJPROPID_CodeAnalysisDictionaries              =  15211,
    };

    [ uuid(179C6298-97C7-4249-B3C3-4986C6924991), dllname(""), helpstring("Application Manifest values.") ]
    module prjApplicationManifestValues
    {
        const LPWSTR prjApplicationManifest_Default         = L"DefaultManifest";
        const LPWSTR prjApplicationManifest_NoManifest      = L"NoManifest";
    }

    typedef [uuid(39d4f2ae-776e-4948-bda3-8dee4c5d4abd)]
    enum pkgOptionInfer
    {
        pkgOptionInferOff,
        pkgOptionInferOn,
    } pkgOptionInfer;

    cpp_quote("#define pkgOptionInferMin  pkgOptionInferOff")
    cpp_quote("#define pkgOptionInferMax  pkgOptionInferOn")

    typedef [uuid(e629a10f-3e9c-4f54-a281-fab74b25ad7c)]
    enum prjOptionInfer
    {
        prjOptionInferOff,
        prjOptionInferOn,
    } prjOptionInfer;

    cpp_quote("#define prjOptionInferMin  prjOptionInferOff")
    cpp_quote("#define prjOptionInferMax  prjOptionInferOn")

    // VBProjectProperties4.  Note, properties which are retrieved through language code model
    // are marked as NonBrowsable for performance reasons.
    [
        uuid(c530b098-acc9-434e-9671-124eaa73fa00),
        helpstring("VB Project properties 4"),
        pointer_default(unique),
        dual
    ]
    interface VBProjectProperties4 : VBProjectProperties3
    {
        [propget, nonbrowsable, id(VBPROJPROPID_TargetFramework), helpstring("Target Framework Version")]
        HRESULT TargetFramework([out, retval] DWORD *pdwTargetFramework);
        [propput, nonbrowsable, id(VBPROJPROPID_TargetFramework), helpstring("Target Framework Version")]
        HRESULT TargetFramework([in] DWORD dwTargetFramework);
        [propget, id(VBPROJPROPID_ApplicationManifest), helpstring("Assembly Manifest")]
        HRESULT ApplicationManifest([out, retval] BSTR *pbstrApplicationManifest);
        [propput, id(VBPROJPROPID_ApplicationManifest), helpstring("Assembly Manifest")]
        HRESULT ApplicationManifest([in] BSTR ApplicationManifest);

        // VB only. Property to get/set the project setting for Option Infer.
        // Option Infer controls whether Type Inferencing is allowed in the project
        [propget, id(VBPROJPROPID_OptionInfer), helpstring("Option Infer Off by default")]
        HRESULT OptionInfer([out, retval]prjOptionInfer *pOptionInfer);
        [propput, id(VBPROJPROPID_OptionInfer), helpstring("Option Infer Off by default")]
        HRESULT OptionInfer([in]prjOptionInfer optionInfer);
    }

    // VB specific package settings
    [
        uuid(471f93fa-0d7a-44fe-ac48-190cbb8b84c7),
        helpstring("VB Project properties 4"),
        pointer_default(unique),
        dual
    ]
    interface VBPackageSettings2 : VBPackageSettings
    {
        // VB only. Property to get/set the default setting for Option Infer.
        // Option Infer controls whether Type Inferencing is allowed in the project
        [propget, id(4), helpstring("Option Infer Off by default")]
        HRESULT OptionInfer([out, retval]pkgOptionInfer *pOptionInfer);
        [propput, id(4), helpstring("Option Infer Off by default")]
        HRESULT OptionInfer([in]pkgOptionInfer optionInfer); 
    }

    //
    // CSProjectProperties4.  Note, properties which are retrieved through language code model
    // are marked as NonBrowsable for performance reasons.
    //
    [
        uuid(9C52F596-60FB-4144-BE49-ADCA8F044790),
        helpstring("CSharp Project properties 4"),
        pointer_default(unique),
        dual
    ]
    interface CSharpProjectProperties4 : ProjectProperties3
    {
        [propget, nonbrowsable, id(VBPROJPROPID_TargetFramework), helpstring("Target Framework Version")]
        HRESULT TargetFramework([out, retval] DWORD *pdwTargetFramework);
        [propput, nonbrowsable, id(VBPROJPROPID_TargetFramework), helpstring("Target Framework Version")]
        HRESULT TargetFramework([in] DWORD dwTargetFramework);
        [propget, id(VBPROJPROPID_ApplicationManifest), helpstring("Assembly Manifest")]
        HRESULT ApplicationManifest([out, retval] BSTR *pbstrApplicationManifest);
        [propput, id(VBPROJPROPID_ApplicationManifest), helpstring("Assembly Manifest")]
        HRESULT ApplicationManifest([in] BSTR ApplicationManifest);
    }


    //
    // CSharpProjectConfigurationProperties4
    //
    [
        uuid(dd47c0d5-5095-4a44-ac96-105b2f194f11),
        helpstring("Project configuration properties 4"),
        pointer_default(unique),
        dual
    ]
    interface CSharpProjectConfigurationProperties4 : CsharpProjectConfigurationProperties3
    {

        // Suppress Code Analysis Results on Generated Code
        [propget, id(VBPROJPROPID_CodeAnalysisIgnoreGeneratedCode), helpstring("Suppress Code Analysis Results on Generated Code")]
        HRESULT CodeAnalysisIgnoreGeneratedCode([out, retval] VARIANT_BOOL* pbIgnoreGeneratedCode);
        [propput, id(VBPROJPROPID_CodeAnalysisIgnoreGeneratedCode), helpstring("Suppress Code Analysis results on generated code")]
        HRESULT CodeAnalysisIgnoreGeneratedCode([in] VARIANT_BOOL IgnoreGeneratedCode);

        // Run overridable rules against all targets
        [propget, id(VBPROJPROPID_CodeAnalysisOverrideRuleVisibilities), helpstring("Run overridable rules against all targets")]
        HRESULT CodeAnalysisOverrideRuleVisibilities([out, retval] VARIANT_BOOL* pbOverrideRuleVisibilities);
        [propput, id(VBPROJPROPID_CodeAnalysisOverrideRuleVisibilities), helpstring("Run overridable rules against all targets")]
        HRESULT CodeAnalysisOverrideRuleVisibilities([in] VARIANT_BOOL OverrideRuleVisibilities);

        // The paths to the Code Analysis custom dictionaries
        [propget, id(VBPROJPROPID_CodeAnalysisDictionaries), helpstring("The paths to the Code Analysis custom dictionaries")]
        HRESULT CodeAnalysisDictionaries([out, retval] BSTR* pbstrDictionaries);
        [propput, id(VBPROJPROPID_CodeAnalysisDictionaries), helpstring("The paths to the Code Analysis custom dictionaries")]
        HRESULT CodeAnalysisDictionaries([in] BSTR Dictionaries);

        // Culture to be used by Code Analysis's spelling rules 
        [propget, id(VBPROJPROPID_CodeAnalysisCulture), helpstring("The culture to use for the Code Analysis spelling rules.")]
        HRESULT CodeAnalysisCulture([out, retval] BSTR* pbstrCodeAnalysisCulture);
        [propput, id(VBPROJPROPID_CodeAnalysisCulture), helpstring("The culture to use for the Code Analysis spelling rules.")]
        HRESULT CodeAnalysisCulture([in] BSTR pbstrCodeAnalysisCulture);	
    }

    //
    // VBProjectConfigurationProperties4
    //
    [
        uuid(189a5eb4-4b8d-4083-9400-77cf9633783a),
        helpstring("Project configuration properties 4"),
        pointer_default(unique),
        dual
    ]
    interface VBProjectConfigurationProperties4 : ProjectConfigurationProperties3
    {

        // Suppress Code Analysis Results on Generated Code
        [propget, id(VBPROJPROPID_CodeAnalysisIgnoreGeneratedCode), helpstring("Suppress Code Analysis Results on Generated Code")]
        HRESULT CodeAnalysisIgnoreGeneratedCode([out, retval] VARIANT_BOOL* pbIgnoreGeneratedCode);
        [propput, id(VBPROJPROPID_CodeAnalysisIgnoreGeneratedCode), helpstring("Suppress Code Analysis results on generated code")]
        HRESULT CodeAnalysisIgnoreGeneratedCode([in] VARIANT_BOOL IgnoreGeneratedCode);

        // Run overridable rules against all targets
        [propget, id(VBPROJPROPID_CodeAnalysisOverrideRuleVisibilities), helpstring("Run overridable rules against all targets")]
        HRESULT CodeAnalysisOverrideRuleVisibilities([out, retval] VARIANT_BOOL* pbOverrideRuleVisibilities);
        [propput, id(VBPROJPROPID_CodeAnalysisOverrideRuleVisibilities), helpstring("Run overridable rules against all targets")]
        HRESULT CodeAnalysisOverrideRuleVisibilities([in] VARIANT_BOOL OverrideRuleVisibilities);

        // The paths to the Code Analysis custom dictionaries
        [propget, id(VBPROJPROPID_CodeAnalysisDictionaries), helpstring("The paths to the Code Analysis custom dictionaries")]
        HRESULT CodeAnalysisDictionaries([out, retval] BSTR* pbstrDictionaries);
        [propput, id(VBPROJPROPID_CodeAnalysisDictionaries), helpstring("The paths to the Code Analysis custom dictionaries")]
        HRESULT CodeAnalysisDictionaries([in] BSTR Dictionaries);

        // Culture to be used by Code Analysis's spelling rules 
        [propget, id(VBPROJPROPID_CodeAnalysisCulture), helpstring("The culture to use for the Code Analysis spelling rules.")]
        HRESULT CodeAnalysisCulture([out, retval] BSTR* pbstrCodeAnalysisCulture);
        [propput, id(VBPROJPROPID_CodeAnalysisCulture), helpstring("The culture to use for the Code Analysis spelling rules.")]
        HRESULT CodeAnalysisCulture([in] BSTR pbstrCodeAnalysisCulture);	
    }

#ifndef INTEROPLIB
}
#endif
