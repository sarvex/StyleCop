<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.TeamFoundation.VersionControl.Common</name>
	</assembly>
	<members>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.DiffOptionFlags.EnablePreambleHandling">
			<summary>If a code page has an optional byte preamble and this flag is set then if both files include the preamble then do not include the preamble in the first line.  However, if one file does not have the preamble then the preamble bytes are included in the first line. If this bit is not set then the preamble (if any) is always included in the first line.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.DiffOptionFlags.IgnoreNonSpace">
			<summary>Ignores non-spacing characters and Japanese Accents.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.DiffOptionFlags.IgnoreWidth">
			<summary>Used to differentiate between Single-Byte Character System (SBCS) and Double-Byte Character System (DBCS).</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.DiffOptions.SetTargetEncodingToConsole">
			<summary>Sets the target encoding to the encoding of the Console.</summary>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Common.DiffOptions.CodePageOverride">
			<summary>Gets or sets the code page override from the command-line.</summary>
			<returns>A non-zero value indicates the override will be provided.</returns>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Common.DiffOutputType">
			<summary>The various difference output types that are possible.</summary>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Common.LabelSpec">
			<summary>Helper class for handling Label specifications.</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.LabelSpec.Combine(System.String,System.String)">
			<summary>Builds the qualified Label name from the label name and scope parts.</summary>
			<param name="labelScope">Label owner.</param>
			<param name="labelName">Label name.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.LabelSpec.IsLegalName(System.String)">
			<summary>true if labelName is a valid label specification; otherwise false.</summary>
			<param name="labelName">Label specification to validate.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.LabelSpec.IsLegalName(System.String,System.Boolean)">
			<summary>true if labelName is a valid label specification; otherwise false.</summary>
			<param name="permitWildcards">true to allow wildcard characters in label names; otherwise false.</param>
			<param name="labelName">Label specification to validate.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.LabelSpec.IsLegalSpec(System.String)">
			<summary>Returns true if labelSpec is a valid label specification; otherwise false.</summary>
			<param name="labelSpec">Label specification to validate.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.LabelSpec.IsLegalSpec(System.String,System.Boolean)">
			<summary>true if labelSpec is a valid label specification; otherwise false.</summary>
			<param name="labelSpec">Label specification to validate.</param>
			<param name="permitWildcardNames">true to allow wildcard characters in label names; otherwise false.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.LabelSpec.Parse(System.String,System.String,System.Boolean,System.String@,System.String@)">
			<summary>Parses a Label spec of the form name@scope and returns the two parts.</summary>
			<param name="spec">The Label spec to parse.</param>
			<param name="labelScope">The returned Label scope.</param>
			<param name="defaultScope">Default value for labelScope, which may be null.</param>
			<param name="permitWildcardNames">true to allow wildcard characters in label names; otherwise false.</param>
			<param name="labelName">The returned Label name.</param>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Common.MergeSummary">
			<summary>The merge summary information provides the total number of changes in the different change classifications.</summary>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants">
			<summary>A set of constants for the repository.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.AuthenticatedUser">
			<summary>A string that the server interprets to mean "the currently authenticated user."</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.EncodingBinary">
			<summary>Encoding constant for binary.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.EncodingUnchanged">
			<summary>Encoding constant for binary.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.ExceptionHeader">
			<summary>Used to return the exception name to the client in non-SOAP HTTP responses.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.IndeterminateChangeset">
			<summary>When an item is in an indeterminate state, the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see> for the version in the workspace will be represented with this number.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxChangesetCommentSize">
			<summary>Maximum number of characters in a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset"></see> comment, not counting the '\0' terminator.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxCommentSize">
			<summary>Maximum number of characters in a comment.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxComputerNameSize">
			<summary>Maximum length for a computer name.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxIdentityNameSize">
			<summary>Maximum length of a user's display name.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxLocalPathSize">
			<summary>Maximum length of a local path including drive letter and separators.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxServerPathSize">
			<summary>Maximum length of a repository path. Includes $/ at the start of the path.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxShelvesetNameSize">
			<summary>Maximum length of a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset"></see> name.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize">
			<summary>Maximum length of a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace"></see> name. Does not include the user name or terminator.</summary>
		</member>
		<member name="T:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath">
			<summary>A utility class for manipulating Team Foundation source control items specifications. This class contains routines for parsing, formatting, and validating.</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.RootFolder">
			<summary>Specifies the root folder characters, which are a dollar-sign followed by a forward slash ($/).</summary>
		</member>
		<member name="F:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.Separator">
			<summary>Specifies the source control path separator, which is a forward slash (/).</summary>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.CheckForIllegalDollarInPath(System.String)">
			<summary>Throws an InvalidPathException if there is a dollar sign ($) that follows a path separator (/). No part of a path may start with a dollar sign.</summary>
			<param name="path">A string that specifies the item path to check. The path must be canonical.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.Combine(System.String,System.String)">
			<summary>Returns a fully-qualified path constructed from the parent and one of its relatives in canonical form.</summary>
			<returns>Returns the combined path in canonical form.</returns>
			<param name="parent">A string that specifies the parent path to append to the relative path (if the relative path is not fully qualified).</param>
			<param name="relative">A string that specifies the potentially partial path to qualify the relative to the parent path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.Combine(System.String,System.String,System.String)">
			<summary>Given a base local path, a base server path, and a target local path, this method computes the target server path. </summary>
			<returns>A string that contains the target server path.</returns>
			<param name="baseLocalPath">A string that specifies the source item local path.</param>
			<param name="targetLocalPath">A string that specifies the target item local path.</param>
			<param name="baseServerPath">A string that specifies the source item server path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.Compare(System.String,System.String)">
			<summary>Compares two source control item paths.</summary>
			<returns>Returns 0 (zero) if the item paths are equal; returns greater than 0 if the first item path is greater; and returns less than 0 if the second item path is greater.</returns>
			<param name="item2">A string that specifies the second item path to compare.</param>
			<param name="item1">A string that specifies the first item path to compare.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.CompareCaseSensitive(System.String,System.String)">
			<summary>This method compares two Version Control item paths in a case-insensitive fashion on every portion of the path, with the exception of the last item in the path. This method compares the last item in the path in a case-sensitive fashion.</summary>
			<returns>Returns 0 if the items are equal; returns greater than 0 if the first item is greater; and returns less than 0 if the second item is greater.</returns>
			<param name="item2">A string that specifies the second item path to compare.</param>
			<param name="item1">A string that specifies the first item path to compare.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.CompareTopDown(System.String,System.String)">
			<summary>Compares two source control paths and returns their relative ordering. This is similar to <see cref="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.Compare(System.String,System.String)"></see> except that children who are not immediate of a parent are sorted after the children.</summary>
			<returns>Returns 0 if the items are equal; returns greater than 0 if the first item is greater; and returns less than 0 if the second item is greater.</returns>
			<param name="item2">A string that specifies the second item path to compare.</param>
			<param name="item1">A string that specifies the first item path to compare.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.CompareTopDownUI(System.String,System.String)">
			<summary>Compares two source control paths and returns their relative ordering for display (culture and case insensitive). This is similar to <see cref="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.CompareUI(System.String,System.String)"></see> except that children who are not immediate of a parent are sorted after the children.</summary>
			<returns>Returns 0 if the items are equal; returns greater than 0 if the first item is greater; and returns less than 0 if the second item is greater.</returns>
			<param name="item2">A string that specifies the name of the second item path to compare.</param>
			<param name="item1">A string that specifies the first item path to compare.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.CompareUI(System.String,System.String)">
			<summary>Compares two source control item paths for display. This method is culture sensitive and case insensitive.</summary>
			<returns>Returns 0 if the items are equal; returns greater than 0 if the first item is greater; and returns less than 0 if the second item is greater.</returns>
			<param name="item2">A string that specifies the second item path to compare.</param>
			<param name="item1">A string that specifies the first item path to compare.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.Equals(System.String,System.String)">
			<summary>Compares two source-controlled items for equality.</summary>
			<returns>Returns true if the items match.</returns>
			<param name="item2">A string that specifies the second item path to compare.</param>
			<param name="item1">A string that specifies the first item path to compare.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.EqualsCaseSensitive(System.String,System.String)">
			<summary>Checks two file paths for equality. This method determines whether the two items are equal in a case-insensitive fashion on every portion of the path, with the exception of the last item in the path. This method compares the last item in the path in a case-sensitive fashion.</summary>
			<returns>Returns true if the items are equal in a case-sensitive comparison.</returns>
			<param name="item2">A string that specifies the second item path to compare.</param>
			<param name="item1">A string that specifies the first item path to compare.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.GetExtension(System.String)">
			<summary>Gets the filename extension from a filename.</summary>
			<returns>Returns the file-extension without the beginning period.</returns>
			<param name="item">A string that specifies the filename from which to get the extension.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.GetFileName(System.String)">
			<summary>Returns the file name or the last component of the path from a specified item path.</summary>
			<param name="item">A canonical string that specifies the item path. </param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.GetFolderDepth(System.String)">
			<summary>Returns the number of levels of path elements in the specified item.</summary>
			<returns>Returns an integer that specifies the folder depth.</returns>
			<param name="item">A string that specifies the item path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.GetFolderName(System.String)">
			<summary>Returns the folder name from the item path. </summary>
			<returns>Returns a string containing the parent folder.</returns>
			<param name="I tem">A string that specifies a server path to a file.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.GetFullPath(System.String)">
			<summary>Returns the specified item path in canonical form.</summary>
			<param name="item">A string that specifies the item path to get to canonical form.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.GetTeamProjectName(System.String)">
			<summary>Returns the team project from a given item path. </summary>
			<returns>Returns a string containing the team project name.</returns>
			<param name="item">A string that specifies the server item path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.IsImmediateChild(System.String,System.String)">
			<summary>Returns true if the source-controlled item is an immediate child of a parent.</summary>
			<returns>Returns true if the item is an immediate child of a parent.</returns>
			<param name="item">A string that specifies the item path to check.</param>
			<param name="parent">A string that specifies the parent path to check against.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.IsServerItem(System.String)">
			<summary>Checks whether the specified path conforms to the Team Foundation Server path syntax. For example, it checks whether the path contains a "/" or "\" delimiter.</summary>
			<returns>Returns true if the string is a server item.</returns>
			<param name="path">A string that specifies a server path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.IsSubItem(System.String,System.String)">
			<summary>Returns true if the source controlled item is equal to or is under (in the hierarchy) the parent.</summary>
			<returns>Returns true if item is equal to or under the parent in source-control hierarchy.</returns>
			<param name="item">A string that contains the item path to check.</param>
			<param name="parent">A string that contains the parent path to check against.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.IsValidFolderName(System.String,System.String@)">
			<summary>Checks whether the specified folder name is valid. In this method, the folder name refers to a single folder, not the full path.</summary>
			<returns>Returns true if the folder name is valid.</returns>
			<param name="error">An output string that specifies the error string if the folder name is not valid. Otherwise null.</param>
			<param name="name">A string that specifies the folder name to validate.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.IsValidPath(System.String)">
			<summary>Returns true if the specified path is valid.</summary>
			<returns>Returns true if the path is valid.</returns>
			<param name="serverItem">A string that specifies the item path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.IsWildcard(System.String)">
			<summary>Determines whether the last component of the specified path contains a wildcard character. The path may or may not be fully qualified.</summary>
			<returns>Returns true if the path contains a wildcard character.</returns>
			<param name="path">A string that specifies the path to check.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.MakeRelative(System.String,System.String)">
			<summary>Given a path and folder, returns the path relative to the folder. </summary>
			<returns>Returns the relative path.</returns>
			<param name="item">Path to make relative.</param>
			<param name="folder">Folder to make the path relative to.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.MakeRelative(System.String,System.String,System.Boolean)">
			<summary>Given a path and folder, returns the path relative to the folder.</summary>
			<returns>Returns the relative path.</returns>
			<param name="recursive">A boolean flag to indicate whether the item should be made relative to folder's parents.</param>
			<param name="item">A string that specifies the path that you want to make a relative path.</param>
			<param name="folder">A string that specifies the folder that you want to make a relative folder.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.Match(System.String,System.String,System.String,System.Boolean)">
			<summary>Compare an item to see if it matches a folder and a name that may be a wildcard character. </summary>
			<returns>Returns true if the item matches; otherwise, false.</returns>
			<param name="recursive">A boolean that specifies whether the match is a recursive match.</param>
			<param name="item">A string that specifies the item to match.</param>
			<param name="matchPattern">A string that specifies the wildcard character to match.</param>
			<param name="matchFolder">A string that specifies the folder to match.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.MatchFileName(System.String,System.String)">
			<summary>Matches the final component of the specified item to the specified wildcard characters.</summary>
			<returns>Returns true if the item matches the wildcard character.</returns>
			<param name="item">A string that specifies the fully-qualified path to match.</param>
			<param name="matchPattern">A string that specifies the wildcard character to match the item to.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.Parse(System.String,System.String@,System.String@)">
			<summary>Parses the specified item path and returns the folder and file item paths.</summary>
			<param name="item">A string that specifies the item path.</param>
			<param name="name">An output string that specifies the file path.</param>
			<param name="parent">An output string that specifies the folder path.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.PrependRootIfNeeded(System.String)">
			<summary>Appends a root character ($) to the beginning of a server path, if a root character is necessary.</summary>
			<returns>Returns a folder path that includes the root.</returns>
			<param name="folder">A string that specifies a server path to a folder. This path may start with a $/ already.</param>
		</member>
		<member name="M:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.ValidatePath(System.String)">
			<summary>Validates the specified server path.</summary>
			<param name="serverItem">A string that specifies the server item to validate.</param>
		</member>
		<member name="P:Microsoft.TeamFoundation.VersionControl.Common.VersionControlPath.StringComparer">
			<summary>Returns a string comparer for fully-specified server paths.</summary>
			<returns>Returns a StringComparer.</returns>
		</member>
	</members>
</doc>