<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Net">
      <assemblydata version="3.5.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Net.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Net.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Net.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>3.5.21009.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>3.5.21009.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>3.5.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="Execution">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="SkipVerification">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="T:System.Net.IPEndPointCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.IPEndPointCollection" />
      <apidata name="IPEndPointCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.IPEndPoint" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net" />
      </containers>
      <file name="T_System_Net_IPEndPointCollection" />
    </api>
    <api id="AllMembers.T:System.Net.IPEndPointCollection">
      <topicdata name="IPEndPointCollection" group="list" subgroup="members" typeTopicId="T:System.Net.IPEndPointCollection" />
      <apidata name="IPEndPointCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{`0}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.IPEndPointCollection.#ctor" />
        <element api="M:System.Net.IPEndPointCollection.InsertItem(System.Int32,System.Net.IPEndPoint)" />
        <element api="M:System.Net.IPEndPointCollection.SetItem(System.Int32,System.Net.IPEndPoint)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net" />
      </containers>
      <file name="AllMembers_T_System_Net_IPEndPointCollection" />
    </api>
    <api id="Methods.T:System.Net.IPEndPointCollection">
      <topicdata name="IPEndPointCollection" group="list" subgroup="Methods" typeTopicId="T:System.Net.IPEndPointCollection" />
      <apidata name="IPEndPointCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.IPEndPointCollection.InsertItem(System.Int32,System.Net.IPEndPoint)" />
        <element api="M:System.Net.IPEndPointCollection.SetItem(System.Int32,System.Net.IPEndPoint)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net" />
      </containers>
      <file name="Methods_T_System_Net_IPEndPointCollection" />
    </api>
    <api id="M:System.Net.IPEndPointCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPointCollection" ref="true" />
      </containers>
      <file name="C_System_Net_IPEndPointCollection_ctor" />
    </api>
    <api id="M:System.Net.IPEndPointCollection.InsertItem(System.Int32,System.Net.IPEndPoint)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.IPEndPoint" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.IPEndPoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPointCollection" ref="true" />
      </containers>
      <file name="M_System_Net_IPEndPointCollection_InsertItem_2_a3f079c1" />
    </api>
    <api id="M:System.Net.IPEndPointCollection.SetItem(System.Int32,System.Net.IPEndPoint)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.IPEndPoint" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.IPEndPoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net" />
        <type api="T:System.Net.IPEndPointCollection" ref="true" />
      </containers>
      <file name="M_System_Net_IPEndPointCollection_SetItem_2_a3f079c1" />
    </api>
    <api id="T:System.Net.PeerToPeer.Cloud">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Cloud" />
      <apidata name="Cloud" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Cloud" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Cloud">
      <topicdata name="Cloud" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Cloud" />
      <apidata name="Cloud" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.PeerToPeer.Cloud.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="F:System.Net.PeerToPeer.Cloud.AllLinkLocal" />
        <element api="F:System.Net.PeerToPeer.Cloud.Available" />
        <element api="Overload:System.Net.PeerToPeer.Cloud.Equals">
          <element api="M:System.Net.PeerToPeer.Cloud.Equals(System.Net.PeerToPeer.Cloud)" />
          <element api="M:System.Net.PeerToPeer.Cloud.Equals(System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Cloud.GetAvailableClouds" />
        <element api="M:System.Net.PeerToPeer.Cloud.GetCloudByName(System.String)" />
        <element api="M:System.Net.PeerToPeer.Cloud.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.Cloud.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Net.PeerToPeer.Cloud.Global" />
        <element api="P:System.Net.PeerToPeer.Cloud.Name" />
        <element api="P:System.Net.PeerToPeer.Cloud.Scope" />
        <element api="P:System.Net.PeerToPeer.Cloud.ScopeId" />
        <element api="M:System.Net.PeerToPeer.Cloud.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Cloud.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Cloud" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Cloud">
      <topicdata name="Cloud" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Cloud" />
      <apidata name="Cloud" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.Cloud.Equals">
          <element api="M:System.Net.PeerToPeer.Cloud.Equals(System.Net.PeerToPeer.Cloud)" />
          <element api="M:System.Net.PeerToPeer.Cloud.Equals(System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Cloud.GetAvailableClouds" />
        <element api="M:System.Net.PeerToPeer.Cloud.GetCloudByName(System.String)" />
        <element api="M:System.Net.PeerToPeer.Cloud.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.Cloud.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Cloud.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Cloud.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_Cloud" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Cloud">
      <topicdata name="Cloud" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Cloud" />
      <apidata name="Cloud" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Cloud.Global" />
        <element api="P:System.Net.PeerToPeer.Cloud.Name" />
        <element api="P:System.Net.PeerToPeer.Cloud.Scope" />
        <element api="P:System.Net.PeerToPeer.Cloud.ScopeId" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Cloud" />
    </api>
    <api id="Fields.T:System.Net.PeerToPeer.Cloud">
      <topicdata name="Cloud" group="list" subgroup="Fields" typeTopicId="T:System.Net.PeerToPeer.Cloud" />
      <apidata name="Cloud" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Net.PeerToPeer.Cloud.AllLinkLocal" />
        <element api="F:System.Net.PeerToPeer.Cloud.Available" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Fields_T_System_Net_PeerToPeer_Cloud" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Cloud.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Cloud" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Cloud.Equals(System.Net.PeerToPeer.Cloud)" />
        <element api="M:System.Net.PeerToPeer.Cloud.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Cloud_Equals" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Cloud_ctor_2_4075724f" />
    </api>
    <api id="F:System.Net.PeerToPeer.Cloud.AllLinkLocal">
      <topicdata group="api" />
      <apidata name="AllLinkLocal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Cloud_AllLinkLocal" />
    </api>
    <api id="F:System.Net.PeerToPeer.Cloud.Available">
      <topicdata group="api" />
      <apidata name="Available" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Cloud_Available" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.Equals(System.Net.PeerToPeer.Cloud)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Cloud.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Cloud_Equals_1_377d34e7" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Cloud.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Cloud_Equals_1_2572741a" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.GetAvailableClouds">
      <topicdata group="api" />
      <apidata name="GetAvailableClouds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.PeerToPeer.CloudCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Cloud_GetAvailableClouds" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.GetCloudByName(System.String)">
      <topicdata group="api" />
      <apidata name="GetCloudByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cloudName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Cloud_GetCloudByName_1_72eac341" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Cloud_GetHashCode" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_Cloud_GetObjectData_2_af75a6ab" />
    </api>
    <api id="P:System.Net.PeerToPeer.Cloud.Global">
      <topicdata group="api" />
      <apidata name="Global" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Cloud_Global" />
    </api>
    <api id="P:System.Net.PeerToPeer.Cloud.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Cloud_Name" />
    </api>
    <api id="P:System.Net.PeerToPeer.Cloud.Scope">
      <topicdata group="api" />
      <apidata name="Scope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Cloud_Scope" />
    </api>
    <api id="P:System.Net.PeerToPeer.Cloud.ScopeId">
      <topicdata group="api" />
      <apidata name="ScopeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Cloud_ScopeId" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_Cloud_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Cloud_ToString" />
    </api>
    <api id="T:System.Net.PeerToPeer.CloudCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.CloudCollection" />
      <apidata name="CloudCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="T_System_Net_PeerToPeer_CloudCollection" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.CloudCollection">
      <topicdata name="CloudCollection" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.CloudCollection" />
      <apidata name="CloudCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{`0}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.CloudCollection.#ctor" />
        <element api="M:System.Net.PeerToPeer.CloudCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Cloud)" />
        <element api="M:System.Net.PeerToPeer.CloudCollection.SetItem(System.Int32,System.Net.PeerToPeer.Cloud)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_CloudCollection" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.CloudCollection">
      <topicdata name="CloudCollection" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.CloudCollection" />
      <apidata name="CloudCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.CloudCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Cloud)" />
        <element api="M:System.Net.PeerToPeer.CloudCollection.SetItem(System.Int32,System.Net.PeerToPeer.Cloud)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_CloudCollection" />
    </api>
    <api id="M:System.Net.PeerToPeer.CloudCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.CloudCollection" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_CloudCollection_ctor" />
    </api>
    <api id="M:System.Net.PeerToPeer.CloudCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Cloud)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.CloudCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_CloudCollection_InsertItem_2_80a39da2" />
    </api>
    <api id="M:System.Net.PeerToPeer.CloudCollection.SetItem(System.Int32,System.Net.PeerToPeer.Cloud)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.CloudCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_CloudCollection_SetItem_2_80a39da2" />
    </api>
    <api id="T:System.Net.PeerToPeer.PeerName">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerName" />
      <apidata name="PeerName" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="T_System_Net_PeerToPeer_PeerName" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.PeerName">
      <topicdata name="PeerName" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.PeerName" />
      <apidata name="PeerName" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.PeerName.#ctor">
          <element api="M:System.Net.PeerToPeer.PeerName.#ctor(System.String)" />
          <element api="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)" />
        </element>
        <element api="P:System.Net.PeerToPeer.PeerName.Authority" />
        <element api="P:System.Net.PeerToPeer.PeerName.Classifier" />
        <element api="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <element api="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <element api="Overload:System.Net.PeerToPeer.PeerName.Equals">
          <element api="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)" />
        </element>
        <element api="M:System.Net.PeerToPeer.PeerName.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Net.PeerToPeer.PeerName.IsSecured" />
        <element api="P:System.Net.PeerToPeer.PeerName.PeerHostName" />
        <element api="M:System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerName.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_PeerName" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.PeerName">
      <topicdata name="PeerName" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.PeerName" />
      <apidata name="PeerName" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <element api="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <element api="Overload:System.Net.PeerToPeer.PeerName.Equals">
          <element api="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)" />
        </element>
        <element api="M:System.Net.PeerToPeer.PeerName.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerName.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_PeerName" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.PeerName">
      <topicdata name="PeerName" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.PeerName" />
      <apidata name="PeerName" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.PeerName.Authority" />
        <element api="P:System.Net.PeerToPeer.PeerName.Classifier" />
        <element api="P:System.Net.PeerToPeer.PeerName.IsSecured" />
        <element api="P:System.Net.PeerToPeer.PeerName.PeerHostName" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_PeerName" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.PeerName.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerName" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.PeerToPeer.PeerName.#ctor(System.String)" />
        <element api="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_PeerName_ctor" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.PeerName.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerName" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)" />
        <element api="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_PeerName_Equals" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.PeerToPeer.PeerName.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PeerName_ctor_2_4075724f" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerName.#ctor" />
      <parameters>
        <parameter name="remotePeerName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PeerName_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerName.#ctor" />
      <parameters>
        <parameter name="classifier">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="peerNameType">
          <type api="T:System.Net.PeerToPeer.PeerNameType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PeerName_ctor_2_9b9241ea" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerName.Authority">
      <topicdata group="api" />
      <apidata name="Authority" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_PeerName_Authority" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerName.Classifier">
      <topicdata group="api" />
      <apidata name="Classifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_PeerName_Classifier" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)">
      <topicdata group="api" />
      <apidata name="CreateFromPeerHostName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerHostName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerName_CreateFromPeerHostName_1_72eac341" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)">
      <topicdata group="api" />
      <apidata name="CreateRelativePeerName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="classifier">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerName_CreateRelativePeerName_2_3fe6f463" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerName.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerName_Equals_1_6adc1c43" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerName.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerName_Equals_1_2572741a" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerName_GetHashCode" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_PeerName_GetObjectData_2_af75a6ab" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerName.IsSecured">
      <topicdata group="api" />
      <apidata name="IsSecured" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_PeerName_IsSecured" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerName.PeerHostName">
      <topicdata group="api" />
      <apidata name="PeerHostName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_PeerName_PeerHostName" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_PeerName_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerName_ToString" />
    </api>
    <api id="T:System.Net.PeerToPeer.PeerNameRecord">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameRecord" />
      <apidata name="PeerNameRecord" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="T_System_Net_PeerToPeer_PeerNameRecord" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.PeerNameRecord">
      <topicdata name="PeerNameRecord" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.PeerNameRecord" />
      <apidata name="PeerNameRecord" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.PeerToPeer.PeerNameRecord.#ctor">
          <element api="M:System.Net.PeerToPeer.PeerNameRecord.#ctor" />
          <element api="M:System.Net.PeerToPeer.PeerNameRecord.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="P:System.Net.PeerToPeer.PeerNameRecord.Comment" />
        <element api="P:System.Net.PeerToPeer.PeerNameRecord.Data" />
        <element api="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecord.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecord.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_PeerNameRecord" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.PeerNameRecord">
      <topicdata name="PeerNameRecord" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.PeerNameRecord" />
      <apidata name="PeerNameRecord" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecord.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecord.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_PeerNameRecord" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.PeerNameRecord">
      <topicdata name="PeerNameRecord" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.PeerNameRecord" />
      <apidata name="PeerNameRecord" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.PeerNameRecord.Comment" />
        <element api="P:System.Net.PeerToPeer.PeerNameRecord.Data" />
        <element api="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" />
        <element api="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_PeerNameRecord" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.PeerNameRecord.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameRecord" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.PeerToPeer.PeerNameRecord.#ctor" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecord.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_PeerNameRecord_ctor" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRecord.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerNameRecord.#ctor" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PeerNameRecord_ctor" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRecord.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.PeerToPeer.PeerNameRecord.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PeerNameRecord_ctor_2_4075724f" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRecord.Comment">
      <topicdata group="api" />
      <apidata name="Comment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_PeerNameRecord_Comment" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRecord.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_PeerNameRecord_Data" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection">
      <topicdata group="api" />
      <apidata name="EndPointCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.IPEndPointCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_PeerNameRecord_EndPointCollection" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRecord.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_PeerNameRecord_GetObjectData_2_af75a6ab" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRecord.PeerName">
      <topicdata group="api" />
      <apidata name="PeerName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_PeerNameRecord_PeerName" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRecord.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_PeerNameRecord_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="T:System.Net.PeerToPeer.PeerNameRecordCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameRecordCollection" />
      <apidata name="PeerNameRecordCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="T_System_Net_PeerToPeer_PeerNameRecordCollection" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.PeerNameRecordCollection">
      <topicdata name="PeerNameRecordCollection" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.PeerNameRecordCollection" />
      <apidata name="PeerNameRecordCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{`0}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecordCollection.#ctor" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecordCollection.InsertItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecordCollection.SetItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_PeerNameRecordCollection" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.PeerNameRecordCollection">
      <topicdata name="PeerNameRecordCollection" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.PeerNameRecordCollection" />
      <apidata name="PeerNameRecordCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecordCollection.InsertItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecordCollection.SetItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_PeerNameRecordCollection" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRecordCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PeerNameRecordCollection_ctor" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRecordCollection.InsertItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerNameRecordCollection_InsertItem_2_93e44ba0" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRecordCollection.SetItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerNameRecordCollection_SetItem_2_93e44ba0" />
    </api>
    <api id="T:System.Net.PeerToPeer.PeerNameRegistration">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameRegistration" />
      <apidata name="PeerNameRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="T_System_Net_PeerToPeer_PeerNameRegistration" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.PeerNameRegistration">
      <topicdata name="PeerNameRegistration" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.PeerNameRegistration" />
      <apidata name="PeerNameRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <element api="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
          <element api="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
          <element api="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
        </element>
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
        <element api="Overload:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
          <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
          <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_PeerNameRegistration" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.PeerNameRegistration">
      <topicdata name="PeerNameRegistration" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.PeerNameRegistration" />
      <apidata name="PeerNameRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
          <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
          <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_PeerNameRegistration" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.PeerNameRegistration">
      <topicdata name="PeerNameRegistration" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.PeerNameRegistration" />
      <apidata name="PeerNameRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_PeerNameRegistration" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameRegistration" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_PeerNameRegistration_ctor" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameRegistration" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_PeerNameRegistration_Dispose" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PeerNameRegistration_ctor" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PeerNameRegistration_ctor_2_76d2a4cf" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cloud">
          <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PeerNameRegistration_ctor_3_1d1f4a0f" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PeerNameRegistration_ctor_2_4075724f" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
      <topicdata group="api" />
      <apidata name="Cloud" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_PeerNameRegistration_Cloud" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
      <topicdata group="api" />
      <apidata name="Comment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_PeerNameRegistration_Comment" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_PeerNameRegistration_Data" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerNameRegistration_Dispose" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerNameRegistration_Dispose_1_36d384f7" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
      <topicdata group="api" />
      <apidata name="EndPointCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.IPEndPointCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_PeerNameRegistration_EndPointCollection" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_PeerNameRegistration_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
      <topicdata group="api" />
      <apidata name="IsRegistered" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerNameRegistration_IsRegistered" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
      <topicdata group="api" />
      <apidata name="PeerName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_PeerNameRegistration_PeerName" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
      <topicdata group="api" />
      <apidata name="Port" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_PeerNameRegistration_Port" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerNameRegistration_Start" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerNameRegistration_Stop" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_PeerNameRegistration_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerNameRegistration_Update" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
      <topicdata group="api" />
      <apidata name="UseAutoEndPointSelection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_PeerNameRegistration_UseAutoEndPointSelection" />
    </api>
    <api id="T:System.Net.PeerToPeer.PeerNameResolver">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameResolver" />
      <apidata name="PeerNameResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="T_System_Net_PeerToPeer_PeerNameResolver" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.PeerNameResolver">
      <topicdata name="PeerNameResolver" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.PeerNameResolver" />
      <apidata name="PeerNameResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
        <element api="Overload:System.Net.PeerToPeer.PeerNameResolver.Resolve">
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync">
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
        <element api="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
        <element api="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_PeerNameResolver" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.PeerNameResolver">
      <topicdata name="PeerNameResolver" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.PeerNameResolver" />
      <apidata name="PeerNameResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
        <element api="Overload:System.Net.PeerToPeer.PeerNameResolver.Resolve">
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync">
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_PeerNameResolver" />
    </api>
    <api id="Events.T:System.Net.PeerToPeer.PeerNameResolver">
      <topicdata name="PeerNameResolver" group="list" subgroup="Events" typeTopicId="T:System.Net.PeerToPeer.PeerNameResolver" />
      <apidata name="PeerNameResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
        <element api="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Events_T_System_Net_PeerToPeer_PeerNameResolver" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.PeerNameResolver.Resolve">
      <topicdata name="Resolve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameResolver" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_PeerNameResolver_Resolve" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync">
      <topicdata name="ResolveAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameResolver" />
      <apidata name="ResolveAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_PeerNameResolver_ResolveAsync" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PeerNameResolver_ctor" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnResolveCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerNameResolver_OnResolveCompleted_1_658d6992" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnResolveProgressChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerNameResolver_OnResolveProgressChanged_1_82b58b3c" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameResolver.Resolve" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerNameResolver_Resolve_1_6adc1c43" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameResolver.Resolve" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="maxRecords">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerNameResolver_Resolve_2_c3ee3cb9" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameResolver.Resolve" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="cloud">
          <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerNameResolver_Resolve_2_3ca4e151" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameResolver.Resolve" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="cloud">
          <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
        </parameter>
        <parameter name="maxRecords">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerNameResolver_Resolve_3_6a6b7ad7" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="ResolveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="maxRecords">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_PeerNameResolver_ResolveAsync_3_9f41402a" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="ResolveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="cloud">
          <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
        </parameter>
        <parameter name="maxRecords">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_PeerNameResolver_ResolveAsync_4_50829c8c" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
      <topicdata group="api" />
      <apidata name="ResolveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="cloud">
          <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_PeerNameResolver_ResolveAsync_3_81d32fe4" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
      <topicdata group="api" />
      <apidata name="ResolveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_PeerNameResolver_ResolveAsync_2_a0e36a14" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
      <topicdata group="api" />
      <apidata name="ResolveAsyncCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PeerNameResolver_ResolveAsyncCancel_1_2572741a" />
    </api>
    <api id="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted">
      <topicdata group="api" />
      <apidata name="ResolveCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_PeerNameResolver_ResolveCompleted" />
    </api>
    <api id="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged">
      <topicdata group="api" />
      <apidata name="ResolveProgressChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_PeerNameResolver_ResolveProgressChanged" />
    </api>
    <api id="T:System.Net.PeerToPeer.PeerNameType">
      <topicdata group="api" />
      <apidata name="PeerNameType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Net.PeerToPeer.PeerNameType.Secured" />
        <element api="F:System.Net.PeerToPeer.PeerNameType.Unsecured" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="T_System_Net_PeerToPeer_PeerNameType" />
    </api>
    <api id="F:System.Net.PeerToPeer.PeerNameType.Secured">
      <topicdata group="api" notopic="" />
      <apidata name="Secured" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerNameType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameType" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_PeerNameType_Secured" />
    </api>
    <api id="F:System.Net.PeerToPeer.PeerNameType.Unsecured">
      <topicdata group="api" notopic="" />
      <apidata name="Unsecured" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerNameType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameType" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_PeerNameType_Unsecured" />
    </api>
    <api id="T:System.Net.PeerToPeer.PeerToPeerException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerToPeerException" />
      <apidata name="PeerToPeerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="T_System_Net_PeerToPeer_PeerToPeerException" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.PeerToPeerException">
      <topicdata name="PeerToPeerException" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.PeerToPeerException" />
      <apidata name="PeerToPeerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.PeerToPeerException.#ctor">
          <element api="M:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
          <element api="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String)" />
          <element api="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Net.PeerToPeer.PeerToPeerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerToPeerException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_PeerToPeerException" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.PeerToPeerException">
      <topicdata name="PeerToPeerException" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.PeerToPeerException" />
      <apidata name="PeerToPeerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.PeerToPeer.PeerToPeerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerToPeerException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_PeerToPeerException" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.PeerToPeerException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerToPeerException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
        <element api="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String)" />
        <element api="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_PeerToPeerException_ctor" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerToPeerException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PeerToPeerException_ctor" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PeerToPeerException_ctor_2_4075724f" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PeerToPeerException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PeerToPeerException_ctor_2_3ec47892" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerToPeerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_PeerToPeerException_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerToPeerException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_PeerToPeerException_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="T:System.Net.PeerToPeer.PnrpPermission">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PnrpPermission" />
      <apidata name="PnrpPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Security.Permissions.IUnrestrictedPermission" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="T_System_Net_PeerToPeer_PnrpPermission" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.PnrpPermission">
      <topicdata name="PnrpPermission" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.PnrpPermission" />
      <apidata name="PnrpPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_PnrpPermission" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.PnrpPermission">
      <topicdata name="PnrpPermission" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.PnrpPermission" />
      <apidata name="PnrpPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_PnrpPermission" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Security.Permissions.PermissionState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PnrpPermission_ctor_1_330c5d6d" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermission.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Copy">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Copy">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PnrpPermission_Copy" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
      <topicdata group="api" />
      <apidata name="FromXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:System.Security.SecurityElement" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
          <type api="T:System.Security.ISecurityEncodable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PnrpPermission_FromXml_1_6a8c1f6a" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="Intersect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PnrpPermission_Intersect_1_fa52404f" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="IsSubsetOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PnrpPermission_IsSubsetOf_1_fa52404f" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted">
      <topicdata group="api" />
      <apidata name="IsUnrestricted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted">
          <type api="T:System.Security.Permissions.IUnrestrictedPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PnrpPermission_IsUnrestricted" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermission.ToXml">
      <topicdata group="api" />
      <apidata name="ToXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.ToXml">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.SecurityElement" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.ISecurityEncodable.ToXml">
          <type api="T:System.Security.ISecurityEncodable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PnrpPermission_ToXml" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PnrpPermission_Union_1_fa52404f" />
    </api>
    <api id="T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      <apidata name="PnrpPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.CodeAccessSecurityAttribute" ref="true" />
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Struct" />
              <field name="Constructor" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Net_PeerToPeer_PnrpPermissionAttribute" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <topicdata name="PnrpPermissionAttribute" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      <apidata name="PnrpPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
        <element api="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_PnrpPermissionAttribute" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <topicdata name="PnrpPermissionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      <apidata name="PnrpPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_PnrpPermissionAttribute" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermissionAttribute" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_PnrpPermissionAttribute_ctor_1_0fdf6e88" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission">
      <topicdata group="api" />
      <apidata name="CreatePermission" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermissionAttribute" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_PnrpPermissionAttribute_CreatePermission" />
    </api>
    <api id="T:System.Net.PeerToPeer.PnrpScope">
      <topicdata group="api" />
      <apidata name="PnrpScope" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Net.PeerToPeer.PnrpScope.All" />
        <element api="F:System.Net.PeerToPeer.PnrpScope.Global" />
        <element api="F:System.Net.PeerToPeer.PnrpScope.SiteLocal" />
        <element api="F:System.Net.PeerToPeer.PnrpScope.LinkLocal" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="T_System_Net_PeerToPeer_PnrpScope" />
    </api>
    <api id="F:System.Net.PeerToPeer.PnrpScope.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_PnrpScope_All" />
    </api>
    <api id="F:System.Net.PeerToPeer.PnrpScope.Global">
      <topicdata group="api" notopic="" />
      <apidata name="Global" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_PnrpScope_Global" />
    </api>
    <api id="F:System.Net.PeerToPeer.PnrpScope.LinkLocal">
      <topicdata group="api" notopic="" />
      <apidata name="LinkLocal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_PnrpScope_LinkLocal" />
    </api>
    <api id="F:System.Net.PeerToPeer.PnrpScope.SiteLocal">
      <topicdata group="api" notopic="" />
      <apidata name="SiteLocal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_PnrpScope_SiteLocal" />
    </api>
    <api id="T:System.Net.PeerToPeer.ResolveCompletedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      <apidata name="ResolveCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="T_System_Net_PeerToPeer_ResolveCompletedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.ResolveCompletedEventArgs">
      <topicdata name="ResolveCompletedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      <apidata name="ResolveCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="M:System.Net.PeerToPeer.ResolveCompletedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecordCollection,System.Exception,System.Boolean,System.Object)" />
        <element api="P:System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_ResolveCompletedEventArgs" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.ResolveCompletedEventArgs">
      <topicdata name="ResolveCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      <apidata name="ResolveCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_ResolveCompletedEventArgs" />
    </api>
    <api id="M:System.Net.PeerToPeer.ResolveCompletedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecordCollection,System.Exception,System.Boolean,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="peerNameRecordCollection">
          <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
        </parameter>
        <parameter name="error">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="canceled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_ResolveCompletedEventArgs_ctor_4_52491056" />
    </api>
    <api id="P:System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection">
      <topicdata group="api" />
      <apidata name="PeerNameRecordCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_ResolveCompletedEventArgs_PeerNameRecordCollection" />
    </api>
    <api id="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      <apidata name="ResolveProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.ProgressChangedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="T_System_Net_PeerToPeer_ResolveProgressChangedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
      <topicdata name="ResolveProgressChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      <apidata name="ResolveProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />
        <element api="M:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)" />
        <element api="P:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_ResolveProgressChangedEventArgs" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
      <topicdata name="ResolveProgressChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      <apidata name="ResolveProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />
        <element api="P:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_ResolveProgressChangedEventArgs" />
    </api>
    <api id="M:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="peerNameRecord">
          <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_ResolveProgressChangedEventArgs_ctor_2_84fcc750" />
    </api>
    <api id="P:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord">
      <topicdata group="api" />
      <apidata name="PeerNameRecord" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_ResolveProgressChangedEventArgs_PeerNameRecord" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
      <apidata name="ApplicationChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_ApplicationChangedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs">
      <topicdata name="ApplicationChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
      <apidata name="ApplicationChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerApplication" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerChangeType" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerContact" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerEndPoint" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_ApplicationChangedEventArgs" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs">
      <topicdata name="ApplicationChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
      <apidata name="ApplicationChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerApplication" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerChangeType" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerContact" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerEndPoint" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_ApplicationChangedEventArgs" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerApplication">
      <topicdata group="api" />
      <apidata name="PeerApplication" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_ApplicationChangedEventArgs_PeerApplication" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerChangeType">
      <topicdata group="api" />
      <apidata name="PeerChangeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_ApplicationChangedEventArgs_PeerChangeType" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerContact">
      <topicdata group="api" />
      <apidata name="PeerContact" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_ApplicationChangedEventArgs_PeerContact" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerEndPoint">
      <topicdata group="api" />
      <apidata name="PeerEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_ApplicationChangedEventArgs_PeerEndPoint" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.ContactManager">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      <apidata name="ContactManager" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_ContactManager" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.ContactManager">
      <topicdata name="ContactManager" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      <apidata name="ContactManager" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <element api="E:System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged" />
        <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" />
        <element api="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact">
          <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" />
        <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact" />
        <element api="E:System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged" />
        <element api="E:System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged" />
        <element api="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged" />
        <element api="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject" />
        <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_ContactManager" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Collaboration.ContactManager">
      <topicdata name="ContactManager" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      <apidata name="ContactManager" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact">
          <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" />
        <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
        <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_Collaboration_ContactManager" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.ContactManager">
      <topicdata name="ContactManager" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      <apidata name="ContactManager" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_ContactManager" />
    </api>
    <api id="Events.T:System.Net.PeerToPeer.Collaboration.ContactManager">
      <topicdata name="ContactManager" group="list" subgroup="Events" typeTopicId="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      <apidata name="ContactManager" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged" />
        <element api="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted" />
        <element api="E:System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged" />
        <element api="E:System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged" />
        <element api="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged" />
        <element api="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Events_T_System_Net_PeerToPeer_Collaboration_ContactManager" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact">
      <topicdata name="DeleteContact" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      <apidata name="DeleteContact" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_ContactManager_DeleteContact" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
      <topicdata group="api" />
      <apidata name="AddContact" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerContact">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_ContactManager_AddContact_1_8fc6d0dc" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged">
      <topicdata group="api" />
      <apidata name="ApplicationChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_ContactManager_ApplicationChanged" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)">
      <topicdata group="api" />
      <apidata name="CreateContact" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerNearMe">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_ContactManager_CreateContact_1_1cf02b59" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)">
      <topicdata group="api" />
      <apidata name="CreateContactAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerNearMe">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_ContactManager_CreateContactAsync_2_5c4d1177" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted">
      <topicdata group="api" />
      <apidata name="CreateContactCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_ContactManager_CreateContactCompleted" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
      <topicdata group="api" />
      <apidata name="DeleteContact" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerContact">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_ContactManager_DeleteContact_1_8fc6d0dc" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)">
      <topicdata group="api" />
      <apidata name="DeleteContact" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_ContactManager_DeleteContact_1_6adc1c43" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_ContactManager_Dispose" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)">
      <topicdata group="api" />
      <apidata name="GetContact" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_ContactManager_GetContact_1_6adc1c43" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts">
      <topicdata group="api" />
      <apidata name="GetContacts" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_ContactManager_GetContacts" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact">
      <topicdata group="api" />
      <apidata name="LocalContact" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_ContactManager_LocalContact" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged">
      <topicdata group="api" />
      <apidata name="NameChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_ContactManager_NameChanged" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged">
      <topicdata group="api" />
      <apidata name="ObjectChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_ContactManager_ObjectChanged" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged">
      <topicdata group="api" />
      <apidata name="PresenceChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_ContactManager_PresenceChanged" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged">
      <topicdata group="api" />
      <apidata name="SubscriptionListChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_ContactManager_SubscriptionListChanged" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject">
      <topicdata group="api" />
      <apidata name="SynchronizingObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.ComponentModel.ISynchronizeInvoke" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_ContactManager_SynchronizingObject" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
      <topicdata group="api" />
      <apidata name="UpdateContact" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerContact">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_ContactManager_UpdateContact_1_8fc6d0dc" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs" />
      <apidata name="CreateContactCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_CreateContactCompletedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs">
      <topicdata name="CreateContactCompletedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs" />
      <apidata name="CreateContactCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs.PeerContact" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_CreateContactCompletedEventArgs" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs">
      <topicdata name="CreateContactCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs" />
      <apidata name="CreateContactCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs.PeerContact" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_CreateContactCompletedEventArgs" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs.PeerContact">
      <topicdata group="api" />
      <apidata name="PeerContact" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_CreateContactCompletedEventArgs_PeerContact" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      <apidata name="InviteCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_InviteCompletedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs">
      <topicdata name="InviteCompletedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      <apidata name="InviteCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs.InviteResponse" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_InviteCompletedEventArgs" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs">
      <topicdata name="InviteCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      <apidata name="InviteCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs.InviteResponse" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_InviteCompletedEventArgs" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs.InviteResponse">
      <topicdata group="api" />
      <apidata name="InviteResponse" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_InviteCompletedEventArgs_InviteResponse" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" />
      <apidata name="NameChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_NameChangedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs">
      <topicdata name="NameChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" />
      <apidata name="NameChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.Name" />
        <element api="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.PeerContact" />
        <element api="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.PeerEndPoint" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_NameChangedEventArgs" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs">
      <topicdata name="NameChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" />
      <apidata name="NameChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.Name" />
        <element api="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.PeerContact" />
        <element api="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.PeerEndPoint" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_NameChangedEventArgs" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_NameChangedEventArgs_Name" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.PeerContact">
      <topicdata group="api" />
      <apidata name="PeerContact" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_NameChangedEventArgs_PeerContact" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.PeerEndPoint">
      <topicdata group="api" />
      <apidata name="PeerEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_NameChangedEventArgs_PeerEndPoint" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      <apidata name="ObjectChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_ObjectChangedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs">
      <topicdata name="ObjectChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      <apidata name="ObjectChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerChangeType" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerContact" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerEndPoint" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerObject" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_ObjectChangedEventArgs" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs">
      <topicdata name="ObjectChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      <apidata name="ObjectChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerChangeType" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerContact" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerEndPoint" />
        <element api="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerObject" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_ObjectChangedEventArgs" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerChangeType">
      <topicdata group="api" />
      <apidata name="PeerChangeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_ObjectChangedEventArgs_PeerChangeType" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerContact">
      <topicdata group="api" />
      <apidata name="PeerContact" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_ObjectChangedEventArgs_PeerContact" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerEndPoint">
      <topicdata group="api" />
      <apidata name="PeerEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_ObjectChangedEventArgs_PeerEndPoint" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerObject">
      <topicdata group="api" />
      <apidata name="PeerObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_ObjectChangedEventArgs_PeerObject" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.Peer">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.Peer" />
      <apidata name="Peer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_Peer" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.Peer">
      <topicdata name="Peer" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.Peer" />
      <apidata name="Peer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.Peer.Equals">
          <element api="M:System.Object.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.Peer.Dispose">
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.Peer.GetObjects">
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.Peer.Invite">
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync">
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <element api="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <element api="P:System.Net.PeerToPeer.Collaboration.Peer.IsOnline" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <element api="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" />
        <element api="P:System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_Peer" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Collaboration.Peer">
      <topicdata name="Peer" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Collaboration.Peer" />
      <apidata name="Peer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.Peer.Equals">
          <element api="M:System.Object.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.Peer.Dispose">
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.Peer.GetObjects">
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.Peer.Invite">
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync">
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_Collaboration_Peer" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.Peer">
      <topicdata name="Peer" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.Peer" />
      <apidata name="Peer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.Peer.IsOnline" />
        <element api="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" />
        <element api="P:System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_Peer" />
    </api>
    <api id="Events.T:System.Net.PeerToPeer.Collaboration.Peer">
      <topicdata name="Peer" group="list" subgroup="Events" typeTopicId="T:System.Net.PeerToPeer.Collaboration.Peer" />
      <apidata name="Peer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Events_T_System_Net_PeerToPeer_Collaboration_Peer" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.Peer.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.Peer" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_Peer_Equals" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.Peer.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.Peer" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_Peer_Dispose" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.Peer.GetObjects">
      <topicdata name="GetObjects" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.Peer" />
      <apidata name="GetObjects" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_Peer_GetObjects" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.Peer.Invite">
      <topicdata name="Invite" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.Peer" />
      <apidata name="Invite" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_Peer_Invite" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync">
      <topicdata name="InviteAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.Peer" />
      <apidata name="InviteAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_Peer_InviteAsync" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_Peer_ctor_2_4075724f" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.Peer.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_Peer_Dispose" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.PeerToPeer.Collaboration.Peer.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_Peer_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.Peer.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_Peer_Equals_1_d208e3bd" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_Collaboration_Peer_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects">
      <topicdata group="api" />
      <apidata name="GetObjects" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_Peer_GetObjects" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)">
      <topicdata group="api" />
      <apidata name="GetObjects" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objectId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_Peer_GetObjects_1_a685c619" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <topicdata group="api" />
      <apidata name="GetPresenceInfo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerEndPoint">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_Peer_GetPresenceInfo_1_37351176" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.Peer.Invite">
      <topicdata group="api" />
      <apidata name="Invite" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_Peer_Invite" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="Invite" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="applicationToInvite">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="invitationData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_Peer_Invite_3_ad806a24" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)">
      <topicdata group="api" />
      <apidata name="InviteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="applicationToInvite">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="invitationData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_Peer_InviteAsync_4_f26496db" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)">
      <topicdata group="api" />
      <apidata name="InviteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_Peer_InviteAsync_1_2572741a" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)">
      <topicdata group="api" />
      <apidata name="InviteAsyncCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_Peer_InviteAsyncCancel_1_2572741a" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted">
      <topicdata group="api" />
      <apidata name="InviteCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_Peer_InviteCompleted" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.Peer.IsOnline">
      <topicdata group="api" />
      <apidata name="IsOnline" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_Peer_IsOnline" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnInviteCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_Peer_OnInviteCompleted_1_548926a5" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints">
      <topicdata group="api" />
      <apidata name="PeerEndPoints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_Peer_PeerEndPoints" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject">
      <topicdata group="api" />
      <apidata name="SynchronizingObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.ComponentModel.ISynchronizeInvoke" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_Peer_SynchronizingObject" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_Collaboration_Peer_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.Peer.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_Peer_ToString" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerApplication">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
      <apidata name="PeerApplication" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerApplication" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerApplication">
      <topicdata name="PeerApplication" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
      <apidata name="PeerApplication" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Guid,System.String,System.Byte[],System.String,System.String,System.Net.PeerToPeer.Collaboration.PeerScope)" />
        </element>
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Data" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Net.PeerToPeer.Collaboration.PeerApplication)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object,System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Path" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplication.PeerScope" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplication.SynchronizingObject" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerApplication" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Collaboration.PeerApplication">
      <topicdata name="PeerApplication" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
      <apidata name="PeerApplication" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Net.PeerToPeer.Collaboration.PeerApplication)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object,System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_Collaboration_PeerApplication" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.PeerApplication">
      <topicdata name="PeerApplication" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
      <apidata name="PeerApplication" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Data" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Path" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplication.PeerScope" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplication.SynchronizingObject" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_PeerApplication" />
    </api>
    <api id="Events.T:System.Net.PeerToPeer.Collaboration.PeerApplication">
      <topicdata name="PeerApplication" group="list" subgroup="Events" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
      <apidata name="PeerApplication" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Events_T_System_Net_PeerToPeer_Collaboration_PeerApplication" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Guid,System.String,System.Byte[],System.String,System.String,System.Net.PeerToPeer.Collaboration.PeerScope)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerApplication_ctor" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerApplication_Dispose" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Net.PeerToPeer.Collaboration.PeerApplication)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerApplication_Equals" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerApplication_ctor" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Guid,System.String,System.Byte[],System.String,System.String,System.Net.PeerToPeer.Collaboration.PeerScope)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="commandLineArgs">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="peerScope">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerScope" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerApplication_ctor_6_61153487" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerApplication_ctor_2_4075724f" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged">
      <topicdata group="api" />
      <apidata name="ApplicationChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_PeerApplication_ApplicationChanged" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs">
      <topicdata group="api" />
      <apidata name="CommandLineArgs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerApplication_CommandLineArgs" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerApplication_Data" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerApplication_Description" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerApplication_Dispose" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerApplication_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Net.PeerToPeer.Collaboration.PeerApplication)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerApplication_Equals_1_b8efb2c4" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerApplication_Equals_1_2572741a" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objA">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="objB">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerApplication_Equals_2_3fcf08df" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerApplication.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerApplication_GetHashCode" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerApplication.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerApplication_GetObjectData_2_af75a6ab" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerApplication_Id" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnApplicationChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="appChangedArgs">
          <type api="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerApplication_OnApplicationChanged_1_f781867e" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerApplication_Path" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerApplication.PeerScope">
      <topicdata group="api" />
      <apidata name="PeerScope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerScope" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerApplication_PeerScope" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerApplication.SynchronizingObject">
      <topicdata group="api" />
      <apidata name="SynchronizingObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.ComponentModel.ISynchronizeInvoke" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerApplication_SynchronizingObject" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerApplication.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerApplication_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerApplication.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerApplication_ToString" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />
      <apidata name="PeerApplicationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerApplicationCollection" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection">
      <topicdata name="PeerApplicationCollection" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />
      <apidata name="PeerApplicationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{`0}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerApplication)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerApplication)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerApplicationCollection" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection">
      <topicdata name="PeerApplicationCollection" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />
      <apidata name="PeerApplicationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerApplication)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerApplication)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_Collaboration_PeerApplicationCollection" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerApplication)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerApplicationCollection_InsertItem_2_3b732e85" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerApplication)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerApplicationCollection_SetItem_2_3b732e85" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerApplicationCollection_ToString" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      <apidata name="PeerApplicationLaunchInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerApplicationLaunchInfo" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo">
      <topicdata name="PeerApplicationLaunchInfo" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      <apidata name="PeerApplicationLaunchInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Data" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Message" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerApplication" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerContact" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerEndPoint" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerApplicationLaunchInfo" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo">
      <topicdata name="PeerApplicationLaunchInfo" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      <apidata name="PeerApplicationLaunchInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Data" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Message" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerApplication" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerContact" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerEndPoint" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_PeerApplicationLaunchInfo" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerApplicationLaunchInfo_Data" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerApplicationLaunchInfo_Message" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerApplication">
      <topicdata group="api" />
      <apidata name="PeerApplication" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerApplicationLaunchInfo_PeerApplication" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerContact">
      <topicdata group="api" />
      <apidata name="PeerContact" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerApplicationLaunchInfo_PeerContact" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerEndPoint">
      <topicdata group="api" />
      <apidata name="PeerEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerApplicationLaunchInfo_PeerEndPoint" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType">
      <topicdata group="api" />
      <apidata name="PeerApplicationRegistrationType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType.CurrentUser" />
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType.AllUsers" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerApplicationRegistrationType" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType.AllUsers">
      <topicdata group="api" notopic="" />
      <apidata name="AllUsers" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerApplicationRegistrationType_AllUsers" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType.CurrentUser">
      <topicdata group="api" notopic="" />
      <apidata name="CurrentUser" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerApplicationRegistrationType_CurrentUser" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerChangeType">
      <topicdata group="api" />
      <apidata name="PeerChangeType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerChangeType.Added" />
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerChangeType.Deleted" />
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerChangeType.Updated" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerChangeType" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerChangeType.Added">
      <topicdata group="api" notopic="" />
      <apidata name="Added" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerChangeType_Added" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerChangeType.Deleted">
      <topicdata group="api" notopic="" />
      <apidata name="Deleted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerChangeType_Deleted" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerChangeType.Updated">
      <topicdata group="api" notopic="" />
      <apidata name="Updated" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerChangeType_Updated" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />
      <apidata name="PeerCollaboration" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerCollaboration" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerCollaboration">
      <topicdata name="PeerCollaboration" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />
      <apidata name="PeerCollaboration" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerCollaboration" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Collaboration.PeerCollaboration">
      <topicdata name="PeerCollaboration" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />
      <apidata name="PeerCollaboration" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_Collaboration_PeerCollaboration" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.PeerCollaboration">
      <topicdata name="PeerCollaboration" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />
      <apidata name="PeerCollaboration" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_PeerCollaboration" />
    </api>
    <api id="Events.T:System.Net.PeerToPeer.Collaboration.PeerCollaboration">
      <topicdata name="PeerCollaboration" group="list" subgroup="Events" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />
      <apidata name="PeerCollaboration" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Events_T_System_Net_PeerToPeer_Collaboration_PeerCollaboration" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications">
      <topicdata name="GetLocalRegisteredApplications" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />
      <apidata name="GetLocalRegisteredApplications" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerCollaboration_GetLocalRegisteredApplications" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo">
      <topicdata group="api" />
      <apidata name="ApplicationLaunchInfo" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerCollaboration_ApplicationLaunchInfo" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager">
      <topicdata group="api" />
      <apidata name="ContactManager" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.ContactManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerCollaboration_ContactManager" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)">
      <topicdata group="api" />
      <apidata name="DeleteObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerObject">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaboration_DeleteObject_1_d90643b4" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications">
      <topicdata group="api" />
      <apidata name="GetLocalRegisteredApplications" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaboration_GetLocalRegisteredApplications" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)">
      <topicdata group="api" />
      <apidata name="GetLocalRegisteredApplications" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaboration_GetLocalRegisteredApplications_1_279eab09" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects">
      <topicdata group="api" />
      <apidata name="GetLocalSetObjects" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaboration_GetLocalSetObjects" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe">
      <topicdata group="api" />
      <apidata name="GetPeersNearMe" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaboration_GetPeersNearMe" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged">
      <topicdata group="api" />
      <apidata name="LocalApplicationChanged" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_PeerCollaboration_LocalApplicationChanged" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName">
      <topicdata group="api" />
      <apidata name="LocalEndPointName" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerCollaboration_LocalEndPointName" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged">
      <topicdata group="api" />
      <apidata name="LocalNameChanged" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_PeerCollaboration_LocalNameChanged" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged">
      <topicdata group="api" />
      <apidata name="LocalObjectChanged" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_PeerCollaboration_LocalObjectChanged" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged">
      <topicdata group="api" />
      <apidata name="LocalPresenceChanged" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_PeerCollaboration_LocalPresenceChanged" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo">
      <topicdata group="api" />
      <apidata name="LocalPresenceInfo" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerCollaboration_LocalPresenceInfo" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)">
      <topicdata group="api" />
      <apidata name="RegisterApplication" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="application">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaboration_RegisterApplication_2_5cf18475" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)">
      <topicdata group="api" />
      <apidata name="SetObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerObject">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaboration_SetObject_1_d90643b4" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)">
      <topicdata group="api" />
      <apidata name="SignIn" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerScope">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerScope" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaboration_SignIn_1_0f25aaf5" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope">
      <topicdata group="api" />
      <apidata name="SignInScope" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerScope" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerCollaboration_SignInScope" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)">
      <topicdata group="api" />
      <apidata name="SignOut" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerScope">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerScope" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaboration_SignOut_1_0f25aaf5" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject">
      <topicdata group="api" />
      <apidata name="SynchronizingObject" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.ComponentModel.ISynchronizeInvoke" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerCollaboration_SynchronizingObject" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)">
      <topicdata group="api" />
      <apidata name="UnregisterApplication" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="application">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaboration_UnregisterApplication_2_5cf18475" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />
      <apidata name="PeerCollaborationPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Security.Permissions.IUnrestrictedPermission" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerCollaborationPermission" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
      <topicdata name="PeerCollaborationPermission" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />
      <apidata name="PeerCollaborationPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerCollaborationPermission" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
      <topicdata name="PeerCollaborationPermission" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />
      <apidata name="PeerCollaborationPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_Collaboration_PeerCollaborationPermission" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Security.Permissions.PermissionState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerCollaborationPermission_ctor_1_330c5d6d" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Copy">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Copy">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaborationPermission_Copy" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)">
      <topicdata group="api" />
      <apidata name="FromXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:System.Security.SecurityElement" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
          <type api="T:System.Security.ISecurityEncodable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaborationPermission_FromXml_1_6a8c1f6a" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="Intersect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaborationPermission_Intersect_1_fa52404f" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="IsSubsetOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaborationPermission_IsSubsetOf_1_fa52404f" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted">
      <topicdata group="api" />
      <apidata name="IsUnrestricted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted">
          <type api="T:System.Security.Permissions.IUnrestrictedPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaborationPermission_IsUnrestricted" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml">
      <topicdata group="api" />
      <apidata name="ToXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.ToXml">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.SecurityElement" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.ISecurityEncodable.ToXml">
          <type api="T:System.Security.ISecurityEncodable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaborationPermission_ToXml" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaborationPermission_Union_1_fa52404f" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      <apidata name="PeerCollaborationPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.CodeAccessSecurityAttribute" ref="true" />
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Struct" />
              <field name="Constructor" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerCollaborationPermissionAttribute" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute">
      <topicdata name="PeerCollaborationPermissionAttribute" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      <apidata name="PeerCollaborationPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerCollaborationPermissionAttribute" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute">
      <topicdata name="PeerCollaborationPermissionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      <apidata name="PeerCollaborationPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_Collaboration_PeerCollaborationPermissionAttribute" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerCollaborationPermissionAttribute_ctor_1_0fdf6e88" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission">
      <topicdata group="api" />
      <apidata name="CreatePermission" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerCollaborationPermissionAttribute_CreatePermission" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerContact">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      <apidata name="PeerContact" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerContact" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerContact">
      <topicdata name="PeerContact" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      <apidata name="PeerContact" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose">
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Equals">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Net.PeerToPeer.Collaboration.PeerContact)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object,System.Object)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects">
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <element api="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <element api="P:System.Net.PeerToPeer.Collaboration.Peer.IsOnline" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <element api="P:System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerContact.Credentials" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Guid)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Invite">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.String,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerApplication,System.Object)" />
        </element>
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerContact.Nickname" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerContact" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Collaboration.PeerContact">
      <topicdata name="PeerContact" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      <apidata name="PeerContact" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose">
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Equals">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Net.PeerToPeer.Collaboration.PeerContact)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object,System.Object)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects">
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Guid)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Invite">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.String,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerApplication,System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_Collaboration_PeerContact" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.PeerContact">
      <topicdata name="PeerContact" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      <apidata name="PeerContact" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.Peer.IsOnline" />
        <element api="P:System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerContact.Credentials" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerContact.Nickname" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_PeerContact" />
    </api>
    <api id="Events.T:System.Net.PeerToPeer.Collaboration.PeerContact">
      <topicdata name="PeerContact" group="list" subgroup="Events" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      <apidata name="PeerContact" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Events_T_System_Net_PeerToPeer_Collaboration_PeerContact" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerContact_Dispose" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerContact_Equals" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects">
      <topicdata name="GetObjects" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      <apidata name="GetObjects" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerContact_GetObjects" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications">
      <topicdata name="GetApplications" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      <apidata name="GetApplications" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Guid)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerContact_GetApplications" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Invite">
      <topicdata name="Invite" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      <apidata name="Invite" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerContact_Invite" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync">
      <topicdata name="InviteAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      <apidata name="InviteAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.String,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerApplication,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerContact_InviteAsync" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerContact_ctor_2_4075724f" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged">
      <topicdata group="api" />
      <apidata name="ApplicationChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_PeerContact_ApplicationChanged" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerContact.Credentials">
      <topicdata group="api" />
      <apidata name="Credentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerContact_Credentials" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerContact_DisplayName" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)">
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_Dispose_1_36d384f7" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress">
      <topicdata group="api" />
      <apidata name="EmailAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Net.Mail.MailAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerContact_EmailAddress" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Net.PeerToPeer.Collaboration.PeerContact)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_Equals_1_8fc6d0dc" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_Equals_1_2572741a" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objA">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="objB">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_Equals_2_3fcf08df" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)">
      <topicdata group="api" />
      <apidata name="FromXml" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerContactXml">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_FromXml_1_72eac341" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications">
      <topicdata group="api" />
      <apidata name="GetApplications" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_GetApplications" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Guid)">
      <topicdata group="api" />
      <apidata name="GetApplications" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="applicationId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_GetApplications_1_a685c619" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <topicdata group="api" />
      <apidata name="GetApplications" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerEndPoint">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_GetApplications_1_37351176" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)">
      <topicdata group="api" />
      <apidata name="GetApplications" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerEndPoint">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
        </parameter>
        <parameter name="applicationId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_GetApplications_2_942b495d" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_GetHashCode" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <topicdata group="api" />
      <apidata name="GetObjects" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerEndPoint">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_GetObjects_1_37351176" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)">
      <topicdata group="api" />
      <apidata name="GetObjects" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerEndPoint">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
        </parameter>
        <parameter name="objectId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_GetObjects_2_942b495d" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite">
      <topicdata group="api" />
      <apidata name="Invite" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.PeerToPeer.Collaboration.Peer.Invite">
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_Invite" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="Invite" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="applicationToInvite">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="invitationData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_Invite_3_ad806a24" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <topicdata group="api" />
      <apidata name="Invite" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerEndPoint">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_Invite_1_37351176" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="Invite" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerEndPoint">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
        </parameter>
        <parameter name="applicationToInvite">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="invitationData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_Invite_4_e0971e48" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)">
      <topicdata group="api" />
      <apidata name="InviteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)">
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="applicationToInvite">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="invitationData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_InviteAsync_4_f26496db" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Object)">
      <topicdata group="api" />
      <apidata name="InviteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerEndPoint">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_InviteAsync_2_b35a6e71" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.String,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerApplication,System.Object)">
      <topicdata group="api" />
      <apidata name="InviteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerEndPoint">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="invitationData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="applicationToInvite">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_InviteAsync_5_b5d3e71f" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Object)">
      <topicdata group="api" />
      <apidata name="InviteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)">
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_InviteAsync_1_2572741a" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed">
      <topicdata group="api" />
      <apidata name="IsSubscribed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerContact_IsSubscribed" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerContact.Nickname">
      <topicdata group="api" />
      <apidata name="Nickname" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerContact_Nickname" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged">
      <topicdata group="api" />
      <apidata name="ObjectChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_PeerContact_ObjectChanged" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnApplicationChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="appChangedArgs">
          <type api="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_OnApplicationChanged_1_f781867e" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnObjectChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="objChangedArgs">
          <type api="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_OnObjectChanged_1_9446806e" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPresenceChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="presenceChangedArgs">
          <type api="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_OnPresenceChanged_1_52d9593f" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnSubscribeCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_OnSubscribeCompleted_1_3c138b0c" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints">
      <topicdata group="api" />
      <apidata name="PeerEndPoints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints">
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerContact_PeerEndPoints" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName">
      <topicdata group="api" />
      <apidata name="PeerName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerContact_PeerName" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged">
      <topicdata group="api" />
      <apidata name="PresenceChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_PeerContact_PresenceChanged" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe">
      <topicdata group="api" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_Subscribe" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed">
      <topicdata group="api" />
      <apidata name="SubscribeAllowed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerContact_SubscribeAllowed" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)">
      <topicdata group="api" />
      <apidata name="SubscribeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_SubscribeAsync_1_2572741a" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted">
      <topicdata group="api" />
      <apidata name="SubscribeCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_PeerContact_SubscribeCompleted" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.PeerToPeer.Collaboration.Peer.ToString">
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_ToString" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml">
      <topicdata group="api" />
      <apidata name="ToXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_ToXml" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe">
      <topicdata group="api" />
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContact_Unsubscribe" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
      <apidata name="PeerContactCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerContactCollection" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerContactCollection">
      <topicdata name="PeerContactCollection" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
      <apidata name="PeerContactCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{`0}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerContactCollection" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Collaboration.PeerContactCollection">
      <topicdata name="PeerContactCollection" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
      <apidata name="PeerContactCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_Collaboration_PeerContactCollection" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContactCollection_InsertItem_2_dfaa36bf" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContactCollection_SetItem_2_dfaa36bf" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerContactCollection_ToString" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      <apidata name="PeerEndPoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerEndPoint" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerEndPoint">
      <topicdata name="PeerEndPoint" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      <apidata name="PeerEndPoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Net.IPEndPoint)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Net.IPEndPoint,System.String)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Object,System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.OnNameChanged(System.Net.PeerToPeer.Collaboration.NameChangedEventArgs)" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerEndPoint" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Collaboration.PeerEndPoint">
      <topicdata name="PeerEndPoint" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      <apidata name="PeerEndPoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Object,System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.OnNameChanged(System.Net.PeerToPeer.Collaboration.NameChangedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_Collaboration_PeerEndPoint" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.PeerEndPoint">
      <topicdata name="PeerEndPoint" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      <apidata name="PeerEndPoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_PeerEndPoint" />
    </api>
    <api id="Events.T:System.Net.PeerToPeer.Collaboration.PeerEndPoint">
      <topicdata name="PeerEndPoint" group="list" subgroup="Events" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      <apidata name="PeerEndPoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Events_T_System_Net_PeerToPeer_Collaboration_PeerEndPoint" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Net.IPEndPoint)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Net.IPEndPoint,System.String)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerEndPoint_ctor" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerEndPoint_Dispose" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerEndPoint_Equals" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerEndPoint_ctor" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Net.IPEndPoint)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor" />
      <parameters>
        <parameter name="endPoint">
          <type api="T:System.Net.IPEndPoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerEndPoint_ctor_1_2599c3a6" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Net.IPEndPoint,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor" />
      <parameters>
        <parameter name="endPoint">
          <type api="T:System.Net.IPEndPoint" ref="true" />
        </parameter>
        <parameter name="endPointName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerEndPoint_ctor_2_d3a9178c" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerEndPoint_ctor_2_4075724f" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerEndPoint_Dispose" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerEndPoint_Dispose_1_36d384f7" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint">
      <topicdata group="api" />
      <apidata name="EndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerEndPoint_EndPoint" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerEndPoint_Equals_1_37351176" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerEndPoint_Equals_1_2572741a" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objA">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="objB">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerEndPoint_Equals_2_3fcf08df" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerEndPoint_GetHashCode" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerEndPoint_GetObjectData_2_af75a6ab" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerEndPoint_Name" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged">
      <topicdata group="api" />
      <apidata name="NameChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_PeerEndPoint_NameChanged" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.OnNameChanged(System.Net.PeerToPeer.Collaboration.NameChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnNameChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nameChangedArgs">
          <type api="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerEndPoint_OnNameChanged_1_98419c98" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject">
      <topicdata group="api" />
      <apidata name="SynchronizingObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.ComponentModel.ISynchronizeInvoke" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerEndPoint_SynchronizingObject" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerEndPoint_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerEndPoint_ToString" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />
      <apidata name="PeerEndPointCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerEndPointCollection" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection">
      <topicdata name="PeerEndPointCollection" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />
      <apidata name="PeerEndPointCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.Equals">
          <element api="M:System.Object.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.Equals(System.Net.PeerToPeer.Collaboration.PeerEndPointCollection)" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{`0}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerEndPointCollection" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection">
      <topicdata name="PeerEndPointCollection" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />
      <apidata name="PeerEndPointCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.Equals">
          <element api="M:System.Object.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.Equals(System.Net.PeerToPeer.Collaboration.PeerEndPointCollection)" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_Collaboration_PeerEndPointCollection" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.Equals(System.Net.PeerToPeer.Collaboration.PeerEndPointCollection)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerEndPointCollection_Equals" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.Equals(System.Net.PeerToPeer.Collaboration.PeerEndPointCollection)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerEndPointCollection_Equals_1_7575ff96" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerEndPointCollection_InsertItem_2_baba11f2" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerEndPointCollection_SetItem_2_baba11f2" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerEndPointCollection_ToString" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />
      <apidata name="PeerInvitationResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerInvitationResponse" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse">
      <topicdata name="PeerInvitationResponse" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />
      <apidata name="PeerInvitationResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse.PeerInvitationResponseType" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerInvitationResponse" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse">
      <topicdata name="PeerInvitationResponse" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />
      <apidata name="PeerInvitationResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse.PeerInvitationResponseType" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_PeerInvitationResponse" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse.PeerInvitationResponseType">
      <topicdata group="api" />
      <apidata name="PeerInvitationResponseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerInvitationResponse_PeerInvitationResponseType" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType">
      <topicdata group="api" />
      <apidata name="PeerInvitationResponseType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType.Declined" />
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType.Accepted" />
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType.Expired" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerInvitationResponseType" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType.Accepted">
      <topicdata group="api" notopic="" />
      <apidata name="Accepted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerInvitationResponseType_Accepted" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType.Declined">
      <topicdata group="api" notopic="" />
      <apidata name="Declined" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerInvitationResponseType_Declined" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType.Expired">
      <topicdata group="api" notopic="" />
      <apidata name="Expired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerInvitationResponseType_Expired" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerNearMe">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      <apidata name="PeerNearMe" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerNearMe" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerNearMe">
      <topicdata name="PeerNearMe" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      <apidata name="PeerNearMe" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose">
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object,System.Object)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjects">
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <element api="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <element api="P:System.Net.PeerToPeer.Collaboration.Peer.IsOnline" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <element api="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" />
        <element api="P:System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(System.String,System.String,System.Net.Mail.MailAddress)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData(System.Object)" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
        </element>
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerNearMe" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Collaboration.PeerNearMe">
      <topicdata name="PeerNearMe" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      <apidata name="PeerNearMe" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose">
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object,System.Object)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjects">
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
          <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(System.String,System.String,System.Net.Mail.MailAddress)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData(System.Object)" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_Collaboration_PeerNearMe" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.PeerNearMe">
      <topicdata name="PeerNearMe" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      <apidata name="PeerNearMe" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.Peer.IsOnline" />
        <element api="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" />
        <element api="P:System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_PeerNearMe" />
    </api>
    <api id="Events.T:System.Net.PeerToPeer.Collaboration.PeerNearMe">
      <topicdata name="PeerNearMe" group="list" subgroup="Events" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      <apidata name="PeerNearMe" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Events_T_System_Net_PeerToPeer_Collaboration_PeerNearMe" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerNearMe_Dispose" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerNearMe_Equals" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjects">
      <topicdata name="GetObjects" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerNearMe" allInherited="true" />
      <apidata name="GetObjects" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
        <element api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerNearMe_GetObjects" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerNearMe_ctor" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager">
      <topicdata name="AddToContactManager" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      <apidata name="AddToContactManager" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(System.String,System.String,System.Net.Mail.MailAddress)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerNearMe_AddToContactManager" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite">
      <topicdata name="Invite" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      <apidata name="Invite" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerNearMe_Invite" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync">
      <topicdata name="InviteAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      <apidata name="InviteAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerNearMe_InviteAsync" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerNearMe_ctor" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerNearMe_ctor_2_4075724f" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager">
      <topicdata group="api" />
      <apidata name="AddToContactManager" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_AddToContactManager" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(System.String,System.String,System.Net.Mail.MailAddress)">
      <topicdata group="api" />
      <apidata name="AddToContactManager" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nickname">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="emailAddress">
          <type api="T:System.Net.Mail.MailAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_AddToContactManager_3_c73618a3" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <topicdata group="api" />
      <apidata name="CreateFromPeerEndPoint" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerEndPoint">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_CreateFromPeerEndPoint_1_37351176" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)">
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Net.PeerToPeer.Collaboration.PeerNearMe)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_Equals_1_1cf02b59" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_Equals_1_2572741a" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objA">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="objB">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_Equals_2_3fcf08df" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_GetHashCode" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData(System.Object)">
      <topicdata group="api" />
      <apidata name="InternalRefreshData" group="member" subgroup="method" />
      <memberdata visibility="family or assembly" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_InternalRefreshData_1_2572741a" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite">
      <topicdata group="api" />
      <apidata name="Invite" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.PeerToPeer.Collaboration.Peer.Invite">
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_Invite" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="Invite" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="applicationToInvite">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="invitationData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_Invite_3_ad806a24" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)">
      <topicdata group="api" />
      <apidata name="InviteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)">
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="applicationToInvite">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerApplication" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="invitationData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_InviteAsync_4_f26496db" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Object)">
      <topicdata group="api" />
      <apidata name="InviteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)">
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_InviteAsync_1_2572741a" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname">
      <topicdata group="api" />
      <apidata name="Nickname" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerNearMe_Nickname" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnRefreshDataCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_OnRefreshDataCompleted_1_3b2d4d53" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged">
      <topicdata group="api" />
      <apidata name="PeerNearMeChanged" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_PeerNearMe_PeerNearMeChanged" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData">
      <topicdata group="api" />
      <apidata name="RefreshData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_RefreshData" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)">
      <topicdata group="api" />
      <apidata name="RefreshDataAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_RefreshDataAsync_1_2572741a" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted">
      <topicdata group="api" />
      <apidata name="RefreshDataCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_PeerNearMe_RefreshDataCompleted" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.PeerToPeer.Collaboration.Peer.ToString">
          <type api="T:System.Net.PeerToPeer.Collaboration.Peer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMe_ToString" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs" />
      <apidata name="PeerNearMeChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerNearMeChangedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs">
      <topicdata name="PeerNearMeChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs" />
      <apidata name="PeerNearMeChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs.PeerChangeType" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs.PeerNearMe" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerNearMeChangedEventArgs" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs">
      <topicdata name="PeerNearMeChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs" />
      <apidata name="PeerNearMeChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs.PeerChangeType" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs.PeerNearMe" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_PeerNearMeChangedEventArgs" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs.PeerChangeType">
      <topicdata group="api" />
      <apidata name="PeerChangeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerNearMeChangedEventArgs_PeerChangeType" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs.PeerNearMe">
      <topicdata group="api" />
      <apidata name="PeerNearMe" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerNearMeChangedEventArgs_PeerNearMe" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" />
      <apidata name="PeerNearMeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerNearMeCollection" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection">
      <topicdata name="PeerNearMeCollection" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" />
      <apidata name="PeerNearMeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{`0}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerNearMeCollection" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection">
      <topicdata name="PeerNearMeCollection" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" />
      <apidata name="PeerNearMeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_Collaboration_PeerNearMeCollection" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerNearMe)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMeCollection_InsertItem_2_08b2969a" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerNearMe)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMeCollection_SetItem_2_08b2969a" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerNearMeCollection_ToString" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerObject">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      <apidata name="PeerObject" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerObject" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerObject">
      <topicdata name="PeerObject" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      <apidata name="PeerObject" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor(System.Guid,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerScope)" />
        </element>
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerObject.Data" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerObject.Equals">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Net.PeerToPeer.Collaboration.PeerObject)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Object,System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerObject.Id" />
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerObject.ObjectChanged" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerObject.PeerScope" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerObject.SynchronizingObject" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerObject" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Collaboration.PeerObject">
      <topicdata name="PeerObject" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      <apidata name="PeerObject" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerObject.Equals">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Net.PeerToPeer.Collaboration.PeerObject)" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Object,System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_Collaboration_PeerObject" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.PeerObject">
      <topicdata name="PeerObject" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      <apidata name="PeerObject" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerObject.Data" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerObject.Id" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerObject.PeerScope" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerObject.SynchronizingObject" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_PeerObject" />
    </api>
    <api id="Events.T:System.Net.PeerToPeer.Collaboration.PeerObject">
      <topicdata name="PeerObject" group="list" subgroup="Events" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      <apidata name="PeerObject" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Net.PeerToPeer.Collaboration.PeerObject.ObjectChanged" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Events_T_System_Net_PeerToPeer_Collaboration_PeerObject" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor(System.Guid,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerScope)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerObject_ctor" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerObject_Dispose" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerObject.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Net.PeerToPeer.Collaboration.PeerObject)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerObject_Equals" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerObject_ctor" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor(System.Guid,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerScope)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor" />
      <parameters>
        <parameter name="Id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="peerScope">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerScope" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerObject_ctor_3_e8fd99ef" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerObject_ctor_2_4075724f" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerObject.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerObject_Data" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerObject_Dispose" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerObject_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Net.PeerToPeer.Collaboration.PeerObject)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerObject.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerObject_Equals_1_d90643b4" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerObject.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerObject_Equals_1_2572741a" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerObject.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objA">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="objB">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerObject_Equals_2_3fcf08df" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerObject.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerObject_GetHashCode" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerObject_GetObjectData_2_af75a6ab" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerObject.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerObject_Id" />
    </api>
    <api id="E:System.Net.PeerToPeer.Collaboration.PeerObject.ObjectChanged">
      <topicdata group="api" />
      <apidata name="ObjectChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="E_System_Net_PeerToPeer_Collaboration_PeerObject_ObjectChanged" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerObject.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnObjectChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="objChangedArgs">
          <type api="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerObject_OnObjectChanged_1_9446806e" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerObject.PeerScope">
      <topicdata group="api" />
      <apidata name="PeerScope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerScope" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerObject_PeerScope" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerObject.SynchronizingObject">
      <topicdata group="api" />
      <apidata name="SynchronizingObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.ComponentModel.ISynchronizeInvoke" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerObject_SynchronizingObject" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerObject_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerObject.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerObject_ToString" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" />
      <apidata name="PeerObjectCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerObjectCollection" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection">
      <topicdata name="PeerObjectCollection" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" />
      <apidata name="PeerObjectCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{`0}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerObject)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerObject)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerObjectCollection" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection">
      <topicdata name="PeerObjectCollection" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" />
      <apidata name="PeerObjectCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerObject)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerObject)" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Methods_T_System_Net_PeerToPeer_Collaboration_PeerObjectCollection" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerObject)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerObjectCollection_InsertItem_2_356cc05a" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerObject)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerObjectCollection_SetItem_2_356cc05a" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" ref="true" />
      </containers>
      <file name="M_System_Net_PeerToPeer_Collaboration_PeerObjectCollection_ToString" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
      <apidata name="PeerPresenceInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerPresenceInfo" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo">
      <topicdata name="PeerPresenceInfo" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
      <apidata name="PeerPresenceInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.#ctor">
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.#ctor" />
          <element api="M:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.#ctor(System.Net.PeerToPeer.Collaboration.PeerPresenceStatus,System.String)" />
        </element>
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.DescriptiveText" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PeerPresenceInfo" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo">
      <topicdata name="PeerPresenceInfo" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
      <apidata name="PeerPresenceInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.DescriptiveText" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_PeerPresenceInfo" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.#ctor" />
        <element api="M:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.#ctor(System.Net.PeerToPeer.Collaboration.PeerPresenceStatus,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" ref="true" />
      </containers>
      <file name="O_T_System_Net_PeerToPeer_Collaboration_PeerPresenceInfo_ctor" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.#ctor" />
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerPresenceInfo_ctor" />
    </api>
    <api id="M:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.#ctor(System.Net.PeerToPeer.Collaboration.PeerPresenceStatus,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.#ctor" />
      <parameters>
        <parameter name="presenceStatus">
          <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" ref="true" />
      </containers>
      <file name="C_System_Net_PeerToPeer_Collaboration_PeerPresenceInfo_ctor_2_e3c48cf0" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.DescriptiveText">
      <topicdata group="api" />
      <apidata name="DescriptiveText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerPresenceInfo_DescriptiveText" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus">
      <topicdata group="api" />
      <apidata name="PresenceStatus" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PeerPresenceInfo_PresenceStatus" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus">
      <topicdata group="api" />
      <apidata name="PeerPresenceStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Offline" />
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.OutToLunch" />
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Away" />
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.BeRightBack" />
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Idle" />
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Busy" />
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.OnThePhone" />
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Online" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerPresenceStatus" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Away">
      <topicdata group="api" notopic="" />
      <apidata name="Away" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerPresenceStatus_Away" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.BeRightBack">
      <topicdata group="api" notopic="" />
      <apidata name="BeRightBack" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerPresenceStatus_BeRightBack" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Busy">
      <topicdata group="api" notopic="" />
      <apidata name="Busy" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerPresenceStatus_Busy" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Idle">
      <topicdata group="api" notopic="" />
      <apidata name="Idle" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerPresenceStatus_Idle" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Offline">
      <topicdata group="api" notopic="" />
      <apidata name="Offline" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerPresenceStatus_Offline" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Online">
      <topicdata group="api" notopic="" />
      <apidata name="Online" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerPresenceStatus_Online" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.OnThePhone">
      <topicdata group="api" notopic="" />
      <apidata name="OnThePhone" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerPresenceStatus_OnThePhone" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.OutToLunch">
      <topicdata group="api" notopic="" />
      <apidata name="OutToLunch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerPresenceStatus_OutToLunch" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PeerScope">
      <topicdata group="api" />
      <apidata name="PeerScope" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerScope.None" />
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerScope.NearMe" />
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerScope.Internet" />
        <element api="F:System.Net.PeerToPeer.Collaboration.PeerScope.All" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PeerScope" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerScope.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerScope" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerScope" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerScope_All" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerScope.Internet">
      <topicdata group="api" notopic="" />
      <apidata name="Internet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerScope" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerScope" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerScope_Internet" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerScope.NearMe">
      <topicdata group="api" notopic="" />
      <apidata name="NearMe" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerScope" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerScope" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerScope_NearMe" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.PeerScope.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerScope" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerScope" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_PeerScope_None" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      <apidata name="PresenceChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_PresenceChangedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs">
      <topicdata name="PresenceChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      <apidata name="PresenceChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerChangeType" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerContact" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerEndPoint" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerPresenceInfo" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_PresenceChangedEventArgs" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs">
      <topicdata name="PresenceChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      <apidata name="PresenceChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerChangeType" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerContact" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerEndPoint" />
        <element api="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerPresenceInfo" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_PresenceChangedEventArgs" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerChangeType">
      <topicdata group="api" />
      <apidata name="PeerChangeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PresenceChangedEventArgs_PeerChangeType" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerContact">
      <topicdata group="api" />
      <apidata name="PeerContact" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PresenceChangedEventArgs_PeerContact" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerEndPoint">
      <topicdata group="api" />
      <apidata name="PeerEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PresenceChangedEventArgs_PeerEndPoint" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerPresenceInfo">
      <topicdata group="api" />
      <apidata name="PeerPresenceInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_PresenceChangedEventArgs_PeerPresenceInfo" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs" />
      <apidata name="RefreshDataCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_RefreshDataCompletedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs">
      <topicdata name="RefreshDataCompletedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs" />
      <apidata name="RefreshDataCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs.PeerEndPoint" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_RefreshDataCompletedEventArgs" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs">
      <topicdata name="RefreshDataCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs" />
      <apidata name="RefreshDataCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs.PeerEndPoint" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_RefreshDataCompletedEventArgs" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs.PeerEndPoint">
      <topicdata group="api" />
      <apidata name="PeerEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_RefreshDataCompletedEventArgs_PeerEndPoint" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
      <apidata name="SubscribeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_SubscribeCompletedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs">
      <topicdata name="SubscribeCompletedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
      <apidata name="SubscribeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs.PeerContact" />
        <element api="P:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs.PeerNearMe" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_SubscribeCompletedEventArgs" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs">
      <topicdata name="SubscribeCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
      <apidata name="SubscribeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs.PeerContact" />
        <element api="P:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs.PeerNearMe" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_SubscribeCompletedEventArgs" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs.PeerContact">
      <topicdata group="api" />
      <apidata name="PeerContact" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_SubscribeCompletedEventArgs_PeerContact" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs.PeerNearMe">
      <topicdata group="api" />
      <apidata name="PeerNearMe" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_SubscribeCompletedEventArgs_PeerNearMe" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" />
      <apidata name="SubscriptionListChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_SubscriptionListChangedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs">
      <topicdata name="SubscriptionListChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" />
      <apidata name="SubscriptionListChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerChangeType" />
        <element api="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerContact" />
        <element api="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerEndPoint" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="AllMembers_T_System_Net_PeerToPeer_Collaboration_SubscriptionListChangedEventArgs" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs">
      <topicdata name="SubscriptionListChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" />
      <apidata name="SubscriptionListChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerChangeType" />
        <element api="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerContact" />
        <element api="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerEndPoint" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="Properties_T_System_Net_PeerToPeer_Collaboration_SubscriptionListChangedEventArgs" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerChangeType">
      <topicdata group="api" />
      <apidata name="PeerChangeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_SubscriptionListChangedEventArgs_PeerChangeType" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerContact">
      <topicdata group="api" />
      <apidata name="PeerContact" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerContact" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_SubscriptionListChangedEventArgs_PeerContact" />
    </api>
    <api id="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerEndPoint">
      <topicdata group="api" />
      <apidata name="PeerEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Net_PeerToPeer_Collaboration_SubscriptionListChangedEventArgs_PeerEndPoint" />
    </api>
    <api id="T:System.Net.PeerToPeer.Collaboration.SubscriptionType">
      <topicdata group="api" />
      <apidata name="SubscriptionType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Net.PeerToPeer.Collaboration.SubscriptionType.Blocked" />
        <element api="F:System.Net.PeerToPeer.Collaboration.SubscriptionType.Allowed" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
      </containers>
      <file name="T_System_Net_PeerToPeer_Collaboration_SubscriptionType" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.SubscriptionType.Allowed">
      <topicdata group="api" notopic="" />
      <apidata name="Allowed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_SubscriptionType_Allowed" />
    </api>
    <api id="F:System.Net.PeerToPeer.Collaboration.SubscriptionType.Blocked">
      <topicdata group="api" notopic="" />
      <apidata name="Blocked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Net" module="System.Net" />
        <namespace api="N:System.Net.PeerToPeer.Collaboration" />
        <type api="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" ref="false" />
      </containers>
      <file name="F_System_Net_PeerToPeer_Collaboration_SubscriptionType_Blocked" />
    </api>
  </apis>
</reflection>