<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Core">
      <assemblydata version="3.5.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>3.5.21009.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>3.5.21009.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>3.5.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="SkipVerification">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
      <apidata name="SafeNCryptHandle" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_Microsoft_Win32_SafeHandles_SafeNCryptHandle" />
    </api>
    <api id="AllMembers.T:Microsoft.Win32.SafeHandles.SafeNCryptHandle">
      <topicdata name="SafeNCryptHandle" group="list" subgroup="members" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
      <apidata name="SafeNCryptHandle" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="Overload:Microsoft.Win32.SafeHandles.SafeNCryptHandle.Dispose">
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Finalize" />
        <element api="F:System.Runtime.InteropServices.SafeHandle.handle" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <file name="AllMembers_T_Microsoft_Win32_SafeHandles_SafeNCryptHandle" />
    </api>
    <api id="Methods.T:Microsoft.Win32.SafeHandles.SafeNCryptHandle">
      <topicdata name="SafeNCryptHandle" group="list" subgroup="Methods" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
      <apidata name="SafeNCryptHandle" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="Overload:Microsoft.Win32.SafeHandles.SafeNCryptHandle.Dispose">
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Finalize" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <file name="Methods_T_Microsoft_Win32_SafeHandles_SafeNCryptHandle" />
    </api>
    <api id="Overload:Microsoft.Win32.SafeHandles.SafeNCryptHandle.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
      </containers>
      <file name="O_T_Microsoft_Win32_SafeHandles_SafeNCryptHandle_Dispose" />
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" ref="true" />
      </containers>
      <file name="C_Microsoft_Win32_SafeHandles_SafeNCryptHandle_ctor" />
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle">
      <topicdata group="api" />
      <apidata name="ReleaseHandle" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle">
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" ref="true" />
      </containers>
      <file name="M_Microsoft_Win32_SafeHandles_SafeNCryptHandle_ReleaseHandle" />
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle">
      <topicdata group="api" />
      <apidata name="ReleaseNativeHandle" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" ref="true" />
      </containers>
      <file name="M_Microsoft_Win32_SafeHandles_SafeNCryptHandle_ReleaseNativeHandle" />
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />
      <apidata name="SafeNCryptKeyHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_Microsoft_Win32_SafeHandles_SafeNCryptKeyHandle" />
    </api>
    <api id="AllMembers.T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle">
      <topicdata name="SafeNCryptKeyHandle" group="list" subgroup="members" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />
      <apidata name="SafeNCryptKeyHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="Overload:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.Dispose">
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Finalize" />
        <element api="F:System.Runtime.InteropServices.SafeHandle.handle" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <file name="AllMembers_T_Microsoft_Win32_SafeHandles_SafeNCryptKeyHandle" />
    </api>
    <api id="Overload:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />
      </containers>
      <file name="O_T_Microsoft_Win32_SafeHandles_SafeNCryptKeyHandle_Dispose" />
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" ref="true" />
      </containers>
      <file name="C_Microsoft_Win32_SafeHandles_SafeNCryptKeyHandle_ctor" />
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" />
      <apidata name="SafeNCryptProviderHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_Microsoft_Win32_SafeHandles_SafeNCryptProviderHandle" />
    </api>
    <api id="AllMembers.T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle">
      <topicdata name="SafeNCryptProviderHandle" group="list" subgroup="members" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" />
      <apidata name="SafeNCryptProviderHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="Overload:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.Dispose">
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Finalize" />
        <element api="F:System.Runtime.InteropServices.SafeHandle.handle" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <file name="AllMembers_T_Microsoft_Win32_SafeHandles_SafeNCryptProviderHandle" />
    </api>
    <api id="Overload:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" />
      </containers>
      <file name="O_T_Microsoft_Win32_SafeHandles_SafeNCryptProviderHandle_Dispose" />
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" ref="true" />
      </containers>
      <file name="C_Microsoft_Win32_SafeHandles_SafeNCryptProviderHandle_ctor" />
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" />
      <apidata name="SafeNCryptSecretHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" ref="true" />
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_Microsoft_Win32_SafeHandles_SafeNCryptSecretHandle" />
    </api>
    <api id="AllMembers.T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle">
      <topicdata name="SafeNCryptSecretHandle" group="list" subgroup="members" typeTopicId="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" />
      <apidata name="SafeNCryptSecretHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle" />
        <element api="M:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="Overload:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.Dispose">
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Finalize" />
        <element api="F:System.Runtime.InteropServices.SafeHandle.handle" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <file name="AllMembers_T_Microsoft_Win32_SafeHandles_SafeNCryptSecretHandle" />
    </api>
    <api id="Overload:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" />
      </containers>
      <file name="O_T_Microsoft_Win32_SafeHandles_SafeNCryptSecretHandle_Dispose" />
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" ref="true" />
      </containers>
      <file name="C_Microsoft_Win32_SafeHandles_SafeNCryptSecretHandle_ctor" />
    </api>
    <api id="T:Microsoft.Win32.SafeHandles.SafePipeHandle">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.Win32.SafeHandles.SafePipeHandle" />
      <apidata name="SafePipeHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" ref="true" />
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_Microsoft_Win32_SafeHandles_SafePipeHandle" />
    </api>
    <api id="AllMembers.T:Microsoft.Win32.SafeHandles.SafePipeHandle">
      <topicdata name="SafePipeHandle" group="list" subgroup="members" typeTopicId="T:Microsoft.Win32.SafeHandles.SafePipeHandle" />
      <apidata name="SafePipeHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid" />
        <element api="M:Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor(System.IntPtr,System.Boolean)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Close" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
        <element api="Overload:Microsoft.Win32.SafeHandles.SafePipeHandle.Dispose">
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
          <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Finalize" />
        <element api="F:System.Runtime.InteropServices.SafeHandle.handle" />
        <element api="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
      </containers>
      <file name="AllMembers_T_Microsoft_Win32_SafeHandles_SafePipeHandle" />
    </api>
    <api id="Overload:Microsoft.Win32.SafeHandles.SafePipeHandle.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.Win32.SafeHandles.SafePipeHandle" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
        <element api="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </containers>
      <file name="O_T_Microsoft_Win32_SafeHandles_SafePipeHandle_Dispose" />
    </api>
    <api id="M:Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor(System.IntPtr,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="preexistingHandle">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="ownsHandle">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:Microsoft.Win32.SafeHandles" />
        <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
      </containers>
      <file name="C_Microsoft_Win32_SafeHandles_SafePipeHandle_ctor_2_350ff0b4" />
    </api>
    <api id="T:System.Action">
      <topicdata group="api" />
      <apidata name="Action" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <file name="T_System_Action" />
    </api>
    <api id="T:System.Action`2">
      <topicdata group="api" />
      <apidata name="Action" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <template name="T1" index="0" api="T:System.Action`2" />
        </parameter>
        <parameter name="arg2">
          <template name="T2" index="1" api="T:System.Action`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <file name="T_System_Action`2" />
    </api>
    <api id="T:System.Action`3">
      <topicdata group="api" />
      <apidata name="Action" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <template name="T1" index="0" api="T:System.Action`3" />
        </parameter>
        <parameter name="arg2">
          <template name="T2" index="1" api="T:System.Action`3" />
        </parameter>
        <parameter name="arg3">
          <template name="T3" index="2" api="T:System.Action`3" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <file name="T_System_Action`3" />
    </api>
    <api id="T:System.Action`4">
      <topicdata group="api" />
      <apidata name="Action" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <template name="T1" index="0" api="T:System.Action`4" />
        </parameter>
        <parameter name="arg2">
          <template name="T2" index="1" api="T:System.Action`4" />
        </parameter>
        <parameter name="arg3">
          <template name="T3" index="2" api="T:System.Action`4" />
        </parameter>
        <parameter name="arg4">
          <template name="T4" index="3" api="T:System.Action`4" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <file name="T_System_Action`4" />
    </api>
    <api id="T:System.Func`1">
      <topicdata group="api" />
      <apidata name="Func" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TResult" />
      </templates>
      <returns>
        <template name="TResult" index="0" api="T:System.Func`1" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <file name="T_System_Func`1" />
    </api>
    <api id="T:System.Func`2">
      <topicdata group="api" />
      <apidata name="Func" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="arg">
          <template name="T" index="0" api="T:System.Func`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="1" api="T:System.Func`2" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <file name="T_System_Func`2" />
    </api>
    <api id="T:System.Func`3">
      <topicdata group="api" />
      <apidata name="Func" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <template name="T1" index="0" api="T:System.Func`3" />
        </parameter>
        <parameter name="arg2">
          <template name="T2" index="1" api="T:System.Func`3" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="2" api="T:System.Func`3" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <file name="T_System_Func`3" />
    </api>
    <api id="T:System.Func`4">
      <topicdata group="api" />
      <apidata name="Func" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <template name="T1" index="0" api="T:System.Func`4" />
        </parameter>
        <parameter name="arg2">
          <template name="T2" index="1" api="T:System.Func`4" />
        </parameter>
        <parameter name="arg3">
          <template name="T3" index="2" api="T:System.Func`4" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="3" api="T:System.Func`4" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <file name="T_System_Func`4" />
    </api>
    <api id="T:System.Func`5">
      <topicdata group="api" />
      <apidata name="Func" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <template name="T1" index="0" api="T:System.Func`5" />
        </parameter>
        <parameter name="arg2">
          <template name="T2" index="1" api="T:System.Func`5" />
        </parameter>
        <parameter name="arg3">
          <template name="T3" index="2" api="T:System.Func`5" />
        </parameter>
        <parameter name="arg4">
          <template name="T4" index="3" api="T:System.Func`5" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="4" api="T:System.Func`5" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <file name="T_System_Func`5" />
    </api>
    <api id="T:System.InvalidTimeZoneException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.InvalidTimeZoneException" />
      <apidata name="InvalidTimeZoneException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_InvalidTimeZoneException" />
    </api>
    <api id="AllMembers.T:System.InvalidTimeZoneException">
      <topicdata name="InvalidTimeZoneException" group="list" subgroup="members" typeTopicId="T:System.InvalidTimeZoneException" />
      <apidata name="InvalidTimeZoneException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.InvalidTimeZoneException.#ctor">
          <element api="M:System.InvalidTimeZoneException.#ctor" />
          <element api="M:System.InvalidTimeZoneException.#ctor(System.String)" />
          <element api="M:System.InvalidTimeZoneException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.InvalidTimeZoneException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <file name="AllMembers_T_System_InvalidTimeZoneException" />
    </api>
    <api id="Overload:System.InvalidTimeZoneException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.InvalidTimeZoneException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.InvalidTimeZoneException.#ctor" />
        <element api="M:System.InvalidTimeZoneException.#ctor(System.String)" />
        <element api="M:System.InvalidTimeZoneException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.InvalidTimeZoneException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.InvalidTimeZoneException" ref="true" />
      </containers>
      <file name="O_T_System_InvalidTimeZoneException_ctor" />
    </api>
    <api id="M:System.InvalidTimeZoneException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.InvalidTimeZoneException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.InvalidTimeZoneException" ref="true" />
      </containers>
      <file name="C_System_InvalidTimeZoneException_ctor" />
    </api>
    <api id="M:System.InvalidTimeZoneException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.InvalidTimeZoneException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.InvalidTimeZoneException" ref="true" />
      </containers>
      <file name="C_System_InvalidTimeZoneException_ctor_2_4075724f" />
    </api>
    <api id="M:System.InvalidTimeZoneException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.InvalidTimeZoneException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.InvalidTimeZoneException" ref="true" />
      </containers>
      <file name="C_System_InvalidTimeZoneException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.InvalidTimeZoneException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.InvalidTimeZoneException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.InvalidTimeZoneException" ref="true" />
      </containers>
      <file name="C_System_InvalidTimeZoneException_ctor_2_3ec47892" />
    </api>
    <api id="T:System.TimeZoneInfo">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.TimeZoneInfo" />
      <apidata name="TimeZoneInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.TimeZoneInfo" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_TimeZoneInfo" />
    </api>
    <api id="AllMembers.T:System.TimeZoneInfo">
      <topicdata name="TimeZoneInfo" group="list" subgroup="members" typeTopicId="T:System.TimeZoneInfo" />
      <apidata name="TimeZoneInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.TimeZoneInfo.Equals">
          <element api="M:System.Object.Equals(System.Object)" />
          <element api="M:System.TimeZoneInfo.Equals(System.TimeZoneInfo)" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.TimeZoneInfo.BaseUtcOffset" />
        <element api="M:System.TimeZoneInfo.ClearCachedData" />
        <element api="Overload:System.TimeZoneInfo.ConvertTime">
          <element api="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)" />
          <element api="M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)" />
          <element api="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)" />
        </element>
        <element api="Overload:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId">
          <element api="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String)" />
          <element api="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTimeOffset,System.String)" />
          <element api="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String,System.String)" />
        </element>
        <element api="M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)" />
        <element api="Overload:System.TimeZoneInfo.ConvertTimeToUtc">
          <element api="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)" />
          <element api="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" />
        </element>
        <element api="Overload:System.TimeZoneInfo.CreateCustomTimeZone">
          <element api="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)" />
          <element api="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[])" />
          <element api="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)" />
        </element>
        <element api="P:System.TimeZoneInfo.DaylightName" />
        <element api="P:System.TimeZoneInfo.DisplayName" />
        <element api="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" />
        <element api="M:System.TimeZoneInfo.FromSerializedString(System.String)" />
        <element api="M:System.TimeZoneInfo.GetAdjustmentRules" />
        <element api="Overload:System.TimeZoneInfo.GetAmbiguousTimeOffsets">
          <element api="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)" />
          <element api="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)" />
        </element>
        <element api="M:System.TimeZoneInfo.GetHashCode" />
        <element api="M:System.TimeZoneInfo.GetSystemTimeZones" />
        <element api="Overload:System.TimeZoneInfo.GetUtcOffset">
          <element api="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)" />
          <element api="M:System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)" />
        </element>
        <element api="M:System.TimeZoneInfo.HasSameRules(System.TimeZoneInfo)" />
        <element api="P:System.TimeZoneInfo.Id" />
        <element api="Overload:System.TimeZoneInfo.IsAmbiguousTime">
          <element api="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)" />
          <element api="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)" />
        </element>
        <element api="Overload:System.TimeZoneInfo.IsDaylightSavingTime">
          <element api="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
          <element api="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)" />
        </element>
        <element api="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />
        <element api="P:System.TimeZoneInfo.Local" />
        <element api="P:System.TimeZoneInfo.StandardName" />
        <element api="P:System.TimeZoneInfo.SupportsDaylightSavingTime" />
        <element api="M:System.TimeZoneInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
        <element api="M:System.TimeZoneInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.TimeZoneInfo.ToSerializedString" />
        <element api="M:System.TimeZoneInfo.ToString" />
        <element api="P:System.TimeZoneInfo.Utc" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <file name="AllMembers_T_System_TimeZoneInfo" />
    </api>
    <api id="Methods.T:System.TimeZoneInfo">
      <topicdata name="TimeZoneInfo" group="list" subgroup="Methods" typeTopicId="T:System.TimeZoneInfo" />
      <apidata name="TimeZoneInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.TimeZoneInfo.Equals">
          <element api="M:System.Object.Equals(System.Object)" />
          <element api="M:System.TimeZoneInfo.Equals(System.TimeZoneInfo)" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.TimeZoneInfo.ClearCachedData" />
        <element api="Overload:System.TimeZoneInfo.ConvertTime">
          <element api="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)" />
          <element api="M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)" />
          <element api="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)" />
        </element>
        <element api="Overload:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId">
          <element api="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String)" />
          <element api="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTimeOffset,System.String)" />
          <element api="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String,System.String)" />
        </element>
        <element api="M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)" />
        <element api="Overload:System.TimeZoneInfo.ConvertTimeToUtc">
          <element api="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)" />
          <element api="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" />
        </element>
        <element api="Overload:System.TimeZoneInfo.CreateCustomTimeZone">
          <element api="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)" />
          <element api="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[])" />
          <element api="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)" />
        </element>
        <element api="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" />
        <element api="M:System.TimeZoneInfo.FromSerializedString(System.String)" />
        <element api="M:System.TimeZoneInfo.GetAdjustmentRules" />
        <element api="Overload:System.TimeZoneInfo.GetAmbiguousTimeOffsets">
          <element api="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)" />
          <element api="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)" />
        </element>
        <element api="M:System.TimeZoneInfo.GetHashCode" />
        <element api="M:System.TimeZoneInfo.GetSystemTimeZones" />
        <element api="Overload:System.TimeZoneInfo.GetUtcOffset">
          <element api="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)" />
          <element api="M:System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)" />
        </element>
        <element api="M:System.TimeZoneInfo.HasSameRules(System.TimeZoneInfo)" />
        <element api="Overload:System.TimeZoneInfo.IsAmbiguousTime">
          <element api="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)" />
          <element api="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)" />
        </element>
        <element api="Overload:System.TimeZoneInfo.IsDaylightSavingTime">
          <element api="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
          <element api="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)" />
        </element>
        <element api="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />
        <element api="M:System.TimeZoneInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
        <element api="M:System.TimeZoneInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.TimeZoneInfo.ToSerializedString" />
        <element api="M:System.TimeZoneInfo.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <file name="Methods_T_System_TimeZoneInfo" />
    </api>
    <api id="Properties.T:System.TimeZoneInfo">
      <topicdata name="TimeZoneInfo" group="list" subgroup="Properties" typeTopicId="T:System.TimeZoneInfo" />
      <apidata name="TimeZoneInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.TimeZoneInfo.BaseUtcOffset" />
        <element api="P:System.TimeZoneInfo.DaylightName" />
        <element api="P:System.TimeZoneInfo.DisplayName" />
        <element api="P:System.TimeZoneInfo.Id" />
        <element api="P:System.TimeZoneInfo.Local" />
        <element api="P:System.TimeZoneInfo.StandardName" />
        <element api="P:System.TimeZoneInfo.SupportsDaylightSavingTime" />
        <element api="P:System.TimeZoneInfo.Utc" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <file name="Properties_T_System_TimeZoneInfo" />
    </api>
    <api id="Overload:System.TimeZoneInfo.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.TimeZoneInfo" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.TimeZoneInfo.Equals(System.TimeZoneInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="O_T_System_TimeZoneInfo_Equals" />
    </api>
    <api id="Overload:System.TimeZoneInfo.ConvertTime">
      <topicdata name="ConvertTime" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.TimeZoneInfo" />
      <apidata name="ConvertTime" group="member" subgroup="method" />
      <elements>
        <element api="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)" />
        <element api="M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)" />
        <element api="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="O_T_System_TimeZoneInfo_ConvertTime" />
    </api>
    <api id="Overload:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId">
      <topicdata name="ConvertTimeBySystemTimeZoneId" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.TimeZoneInfo" />
      <apidata name="ConvertTimeBySystemTimeZoneId" group="member" subgroup="method" />
      <elements>
        <element api="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String)" />
        <element api="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTimeOffset,System.String)" />
        <element api="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="O_T_System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId" />
    </api>
    <api id="Overload:System.TimeZoneInfo.ConvertTimeToUtc">
      <topicdata name="ConvertTimeToUtc" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.TimeZoneInfo" />
      <apidata name="ConvertTimeToUtc" group="member" subgroup="method" />
      <elements>
        <element api="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)" />
        <element api="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="O_T_System_TimeZoneInfo_ConvertTimeToUtc" />
    </api>
    <api id="Overload:System.TimeZoneInfo.CreateCustomTimeZone">
      <topicdata name="CreateCustomTimeZone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.TimeZoneInfo" />
      <apidata name="CreateCustomTimeZone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)" />
        <element api="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[])" />
        <element api="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="O_T_System_TimeZoneInfo_CreateCustomTimeZone" />
    </api>
    <api id="Overload:System.TimeZoneInfo.GetAmbiguousTimeOffsets">
      <topicdata name="GetAmbiguousTimeOffsets" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.TimeZoneInfo" />
      <apidata name="GetAmbiguousTimeOffsets" group="member" subgroup="method" />
      <elements>
        <element api="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)" />
        <element api="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="O_T_System_TimeZoneInfo_GetAmbiguousTimeOffsets" />
    </api>
    <api id="Overload:System.TimeZoneInfo.GetUtcOffset">
      <topicdata name="GetUtcOffset" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.TimeZoneInfo" />
      <apidata name="GetUtcOffset" group="member" subgroup="method" />
      <elements>
        <element api="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)" />
        <element api="M:System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="O_T_System_TimeZoneInfo_GetUtcOffset" />
    </api>
    <api id="Overload:System.TimeZoneInfo.IsAmbiguousTime">
      <topicdata name="IsAmbiguousTime" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.TimeZoneInfo" />
      <apidata name="IsAmbiguousTime" group="member" subgroup="method" />
      <elements>
        <element api="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)" />
        <element api="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="O_T_System_TimeZoneInfo_IsAmbiguousTime" />
    </api>
    <api id="Overload:System.TimeZoneInfo.IsDaylightSavingTime">
      <topicdata name="IsDaylightSavingTime" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.TimeZoneInfo" />
      <apidata name="IsDaylightSavingTime" group="member" subgroup="method" />
      <elements>
        <element api="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
        <element api="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="O_T_System_TimeZoneInfo_IsDaylightSavingTime" />
    </api>
    <api id="P:System.TimeZoneInfo.BaseUtcOffset">
      <topicdata group="api" />
      <apidata name="BaseUtcOffset" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="P_System_TimeZoneInfo_BaseUtcOffset" />
    </api>
    <api id="M:System.TimeZoneInfo.ClearCachedData">
      <topicdata group="api" />
      <apidata name="ClearCachedData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_ClearCachedData" />
    </api>
    <api id="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)">
      <topicdata group="api" />
      <apidata name="ConvertTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.TimeZoneInfo.ConvertTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="destinationTimeZone">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_ConvertTime_2_5b0ccc1a" />
    </api>
    <api id="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)">
      <topicdata group="api" />
      <apidata name="ConvertTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.TimeZoneInfo.ConvertTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="sourceTimeZone">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
        <parameter name="destinationTimeZone">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_ConvertTime_3_dc6cf757" />
    </api>
    <api id="M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)">
      <topicdata group="api" />
      <apidata name="ConvertTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.TimeZoneInfo.ConvertTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTimeOffset">
          <type api="T:System.DateTimeOffset" ref="false" />
        </parameter>
        <parameter name="destinationTimeZone">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTimeOffset" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_ConvertTime_2_1af13014" />
    </api>
    <api id="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String)">
      <topicdata group="api" />
      <apidata name="ConvertTimeBySystemTimeZoneId" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="destinationTimeZoneId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId_2_d895e416" />
    </api>
    <api id="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ConvertTimeBySystemTimeZoneId" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="sourceTimeZoneId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationTimeZoneId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId_3_374b2344" />
    </api>
    <api id="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTimeOffset,System.String)">
      <topicdata group="api" />
      <apidata name="ConvertTimeBySystemTimeZoneId" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTimeOffset">
          <type api="T:System.DateTimeOffset" ref="false" />
        </parameter>
        <parameter name="destinationTimeZoneId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTimeOffset" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_ConvertTimeBySystemTimeZoneId_2_1b00e045" />
    </api>
    <api id="M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)">
      <topicdata group="api" />
      <apidata name="ConvertTimeFromUtc" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="destinationTimeZone">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_ConvertTimeFromUtc_2_5b0ccc1a" />
    </api>
    <api id="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)">
      <topicdata group="api" />
      <apidata name="ConvertTimeToUtc" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.TimeZoneInfo.ConvertTimeToUtc" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_ConvertTimeToUtc_1_83ed3aaa" />
    </api>
    <api id="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)">
      <topicdata group="api" />
      <apidata name="ConvertTimeToUtc" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.TimeZoneInfo.ConvertTimeToUtc" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="sourceTimeZone">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_ConvertTimeToUtc_2_5b0ccc1a" />
    </api>
    <api id="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateCustomTimeZone" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.TimeZoneInfo.CreateCustomTimeZone" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="baseUtcOffset">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="standardDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeZoneInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_CreateCustomTimeZone_4_fda28e20" />
    </api>
    <api id="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[])">
      <topicdata group="api" />
      <apidata name="CreateCustomTimeZone" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.TimeZoneInfo.CreateCustomTimeZone" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="baseUtcOffset">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="standardDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="daylightDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="adjustmentRules">
          <arrayOf rank="1">
            <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
              <type api="T:System.TimeZoneInfo" ref="true" />
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeZoneInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_CreateCustomTimeZone_6_53ba7de5" />
    </api>
    <api id="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateCustomTimeZone" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.TimeZoneInfo.CreateCustomTimeZone" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="baseUtcOffset">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="standardDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="daylightDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="adjustmentRules">
          <arrayOf rank="1">
            <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
              <type api="T:System.TimeZoneInfo" ref="true" />
            </type>
          </arrayOf>
        </parameter>
        <parameter name="disableDaylightSavingTime">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeZoneInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_CreateCustomTimeZone_7_9fbd5ec5" />
    </api>
    <api id="P:System.TimeZoneInfo.DaylightName">
      <topicdata group="api" />
      <apidata name="DaylightName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="P_System_TimeZoneInfo_DaylightName" />
    </api>
    <api id="P:System.TimeZoneInfo.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="P_System_TimeZoneInfo_DisplayName" />
    </api>
    <api id="M:System.TimeZoneInfo.Equals(System.TimeZoneInfo)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.TimeZoneInfo.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.TimeZoneInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_Equals_1_cde0beff" />
    </api>
    <api id="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)">
      <topicdata group="api" />
      <apidata name="FindSystemTimeZoneById" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeZoneInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_FindSystemTimeZoneById_1_72eac341" />
    </api>
    <api id="M:System.TimeZoneInfo.FromSerializedString(System.String)">
      <topicdata group="api" />
      <apidata name="FromSerializedString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeZoneInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_FromSerializedString_1_72eac341" />
    </api>
    <api id="M:System.TimeZoneInfo.GetAdjustmentRules">
      <topicdata group="api" />
      <apidata name="GetAdjustmentRules" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
            <type api="T:System.TimeZoneInfo" ref="true" />
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_GetAdjustmentRules" />
    </api>
    <api id="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)">
      <topicdata group="api" />
      <apidata name="GetAmbiguousTimeOffsets" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.TimeZoneInfo.GetAmbiguousTimeOffsets" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.TimeSpan" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_GetAmbiguousTimeOffsets_1_83ed3aaa" />
    </api>
    <api id="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)">
      <topicdata group="api" />
      <apidata name="GetAmbiguousTimeOffsets" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.TimeZoneInfo.GetAmbiguousTimeOffsets" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTimeOffset">
          <type api="T:System.DateTimeOffset" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.TimeSpan" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_GetAmbiguousTimeOffsets_1_0591f3ec" />
    </api>
    <api id="M:System.TimeZoneInfo.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_GetHashCode" />
    </api>
    <api id="M:System.TimeZoneInfo.GetSystemTimeZones">
      <topicdata group="api" />
      <apidata name="GetSystemTimeZones" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.TimeZoneInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_GetSystemTimeZones" />
    </api>
    <api id="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)">
      <topicdata group="api" />
      <apidata name="GetUtcOffset" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.TimeZoneInfo.GetUtcOffset" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_GetUtcOffset_1_83ed3aaa" />
    </api>
    <api id="M:System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)">
      <topicdata group="api" />
      <apidata name="GetUtcOffset" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.TimeZoneInfo.GetUtcOffset" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTimeOffset">
          <type api="T:System.DateTimeOffset" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_GetUtcOffset_1_0591f3ec" />
    </api>
    <api id="M:System.TimeZoneInfo.HasSameRules(System.TimeZoneInfo)">
      <topicdata group="api" />
      <apidata name="HasSameRules" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_HasSameRules_1_cde0beff" />
    </api>
    <api id="P:System.TimeZoneInfo.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="P_System_TimeZoneInfo_Id" />
    </api>
    <api id="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)">
      <topicdata group="api" />
      <apidata name="IsAmbiguousTime" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.TimeZoneInfo.IsAmbiguousTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_IsAmbiguousTime_1_83ed3aaa" />
    </api>
    <api id="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)">
      <topicdata group="api" />
      <apidata name="IsAmbiguousTime" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.TimeZoneInfo.IsAmbiguousTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTimeOffset">
          <type api="T:System.DateTimeOffset" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_IsAmbiguousTime_1_0591f3ec" />
    </api>
    <api id="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)">
      <topicdata group="api" />
      <apidata name="IsDaylightSavingTime" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.TimeZoneInfo.IsDaylightSavingTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_IsDaylightSavingTime_1_83ed3aaa" />
    </api>
    <api id="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)">
      <topicdata group="api" />
      <apidata name="IsDaylightSavingTime" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.TimeZoneInfo.IsDaylightSavingTime" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTimeOffset">
          <type api="T:System.DateTimeOffset" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_IsDaylightSavingTime_1_0591f3ec" />
    </api>
    <api id="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)">
      <topicdata group="api" />
      <apidata name="IsInvalidTime" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_IsInvalidTime_1_83ed3aaa" />
    </api>
    <api id="P:System.TimeZoneInfo.Local">
      <topicdata group="api" />
      <apidata name="Local" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeZoneInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="P_System_TimeZoneInfo_Local" />
    </api>
    <api id="P:System.TimeZoneInfo.StandardName">
      <topicdata group="api" />
      <apidata name="StandardName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="P_System_TimeZoneInfo_StandardName" />
    </api>
    <api id="P:System.TimeZoneInfo.SupportsDaylightSavingTime">
      <topicdata group="api" />
      <apidata name="SupportsDaylightSavingTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="P_System_TimeZoneInfo_SupportsDaylightSavingTime" />
    </api>
    <api id="M:System.TimeZoneInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <topicdata group="api" />
      <apidata name="OnDeserialization" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
          <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_1_2572741a" />
    </api>
    <api id="M:System.TimeZoneInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_TimeZoneInfo_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.TimeZoneInfo.ToSerializedString">
      <topicdata group="api" />
      <apidata name="ToSerializedString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_ToSerializedString" />
    </api>
    <api id="M:System.TimeZoneInfo.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="M_System_TimeZoneInfo_ToString" />
    </api>
    <api id="P:System.TimeZoneInfo.Utc">
      <topicdata group="api" />
      <apidata name="Utc" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeZoneInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="P_System_TimeZoneInfo_Utc" />
    </api>
    <api id="T:System.TimeZoneInfo.AdjustmentRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.TimeZoneInfo.AdjustmentRule" />
      <apidata name="AdjustmentRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
              <type api="T:System.TimeZoneInfo" ref="true" />
            </type>
          </specialization>
        </type>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_TimeZoneInfo_AdjustmentRule" />
    </api>
    <api id="AllMembers.T:System.TimeZoneInfo.AdjustmentRule">
      <topicdata name="AdjustmentRule" group="list" subgroup="members" typeTopicId="T:System.TimeZoneInfo.AdjustmentRule" />
      <apidata name="AdjustmentRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.TimeZoneInfo.AdjustmentRule.Equals">
          <element api="M:System.Object.Equals(System.Object)" />
          <element api="M:System.TimeZoneInfo.AdjustmentRule.Equals(System.TimeZoneInfo.AdjustmentRule)" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(System.DateTime,System.DateTime,System.TimeSpan,System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
        <element api="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />
        <element api="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />
        <element api="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
        <element api="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd" />
        <element api="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart" />
        <element api="M:System.TimeZoneInfo.AdjustmentRule.GetHashCode" />
        <element api="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
        <element api="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="AllMembers_T_System_TimeZoneInfo_AdjustmentRule" />
    </api>
    <api id="Methods.T:System.TimeZoneInfo.AdjustmentRule">
      <topicdata name="AdjustmentRule" group="list" subgroup="Methods" typeTopicId="T:System.TimeZoneInfo.AdjustmentRule" />
      <apidata name="AdjustmentRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.TimeZoneInfo.AdjustmentRule.Equals">
          <element api="M:System.Object.Equals(System.Object)" />
          <element api="M:System.TimeZoneInfo.AdjustmentRule.Equals(System.TimeZoneInfo.AdjustmentRule)" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(System.DateTime,System.DateTime,System.TimeSpan,System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
        <element api="M:System.TimeZoneInfo.AdjustmentRule.GetHashCode" />
        <element api="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
        <element api="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="Methods_T_System_TimeZoneInfo_AdjustmentRule" />
    </api>
    <api id="Properties.T:System.TimeZoneInfo.AdjustmentRule">
      <topicdata name="AdjustmentRule" group="list" subgroup="Properties" typeTopicId="T:System.TimeZoneInfo.AdjustmentRule" />
      <apidata name="AdjustmentRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />
        <element api="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />
        <element api="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
        <element api="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd" />
        <element api="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="Properties_T_System_TimeZoneInfo_AdjustmentRule" />
    </api>
    <api id="Overload:System.TimeZoneInfo.AdjustmentRule.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.TimeZoneInfo.AdjustmentRule" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.TimeZoneInfo.AdjustmentRule.Equals(System.TimeZoneInfo.AdjustmentRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="O_T_System_TimeZoneInfo_AdjustmentRule_Equals" />
    </api>
    <api id="M:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(System.DateTime,System.DateTime,System.TimeSpan,System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)">
      <topicdata group="api" />
      <apidata name="CreateAdjustmentRule" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateStart">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="dateEnd">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="daylightDelta">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="daylightTransitionStart">
          <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
            <type api="T:System.TimeZoneInfo" ref="true" />
          </type>
        </parameter>
        <parameter name="daylightTransitionEnd">
          <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
            <type api="T:System.TimeZoneInfo" ref="true" />
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="M_System_TimeZoneInfo_AdjustmentRule_CreateAdjustmentRule_5_b4d8afa5" />
    </api>
    <api id="P:System.TimeZoneInfo.AdjustmentRule.DateEnd">
      <topicdata group="api" />
      <apidata name="DateEnd" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="P_System_TimeZoneInfo_AdjustmentRule_DateEnd" />
    </api>
    <api id="P:System.TimeZoneInfo.AdjustmentRule.DateStart">
      <topicdata group="api" />
      <apidata name="DateStart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="P_System_TimeZoneInfo_AdjustmentRule_DateStart" />
    </api>
    <api id="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta">
      <topicdata group="api" />
      <apidata name="DaylightDelta" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="P_System_TimeZoneInfo_AdjustmentRule_DaylightDelta" />
    </api>
    <api id="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd">
      <topicdata group="api" />
      <apidata name="DaylightTransitionEnd" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="P_System_TimeZoneInfo_AdjustmentRule_DaylightTransitionEnd" />
    </api>
    <api id="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart">
      <topicdata group="api" />
      <apidata name="DaylightTransitionStart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="P_System_TimeZoneInfo_AdjustmentRule_DaylightTransitionStart" />
    </api>
    <api id="M:System.TimeZoneInfo.AdjustmentRule.Equals(System.TimeZoneInfo.AdjustmentRule)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.TimeZoneInfo.AdjustmentRule.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
            <type api="T:System.TimeZoneInfo" ref="true" />
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
                <type api="T:System.TimeZoneInfo" ref="true" />
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="M_System_TimeZoneInfo_AdjustmentRule_Equals_1_7a6cf491" />
    </api>
    <api id="M:System.TimeZoneInfo.AdjustmentRule.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="M_System_TimeZoneInfo_AdjustmentRule_GetHashCode" />
    </api>
    <api id="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <topicdata group="api" />
      <apidata name="OnDeserialization" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
          <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="M_System_TimeZoneInfo_AdjustmentRule_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_1_2572741a" />
    </api>
    <api id="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.AdjustmentRule" ref="true">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_TimeZoneInfo_AdjustmentRule_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="T:System.TimeZoneInfo.TransitionTime">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.TimeZoneInfo.TransitionTime" />
      <apidata name="TransitionTime" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" layout="sequential" format="ansi" />
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
              <type api="T:System.TimeZoneInfo" ref="true" />
            </type>
          </specialization>
        </type>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_TimeZoneInfo_TransitionTime" />
    </api>
    <api id="AllMembers.T:System.TimeZoneInfo.TransitionTime">
      <topicdata name="TransitionTime" group="list" subgroup="members" typeTopicId="T:System.TimeZoneInfo.TransitionTime" />
      <apidata name="TransitionTime" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule(System.DateTime,System.Int32,System.Int32)" />
        <element api="M:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule(System.DateTime,System.Int32,System.Int32,System.DayOfWeek)" />
        <element api="P:System.TimeZoneInfo.TransitionTime.Day" />
        <element api="P:System.TimeZoneInfo.TransitionTime.DayOfWeek" />
        <element api="Overload:System.TimeZoneInfo.TransitionTime.Equals">
          <element api="M:System.TimeZoneInfo.TransitionTime.Equals(System.Object)" />
          <element api="M:System.TimeZoneInfo.TransitionTime.Equals(System.TimeZoneInfo.TransitionTime)" />
        </element>
        <element api="M:System.TimeZoneInfo.TransitionTime.GetHashCode" />
        <element api="P:System.TimeZoneInfo.TransitionTime.IsFixedDateRule" />
        <element api="P:System.TimeZoneInfo.TransitionTime.Month" />
        <element api="M:System.TimeZoneInfo.TransitionTime.op_Equality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
        <element api="M:System.TimeZoneInfo.TransitionTime.op_Inequality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
        <element api="M:System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
        <element api="M:System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.TimeZoneInfo.TransitionTime.TimeOfDay" />
        <element api="P:System.TimeZoneInfo.TransitionTime.Week" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="AllMembers_T_System_TimeZoneInfo_TransitionTime" />
    </api>
    <api id="Methods.T:System.TimeZoneInfo.TransitionTime">
      <topicdata name="TransitionTime" group="list" subgroup="Methods" typeTopicId="T:System.TimeZoneInfo.TransitionTime" />
      <apidata name="TransitionTime" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule(System.DateTime,System.Int32,System.Int32)" />
        <element api="M:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule(System.DateTime,System.Int32,System.Int32,System.DayOfWeek)" />
        <element api="Overload:System.TimeZoneInfo.TransitionTime.Equals">
          <element api="M:System.TimeZoneInfo.TransitionTime.Equals(System.Object)" />
          <element api="M:System.TimeZoneInfo.TransitionTime.Equals(System.TimeZoneInfo.TransitionTime)" />
        </element>
        <element api="M:System.TimeZoneInfo.TransitionTime.GetHashCode" />
        <element api="M:System.TimeZoneInfo.TransitionTime.op_Equality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
        <element api="M:System.TimeZoneInfo.TransitionTime.op_Inequality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
        <element api="M:System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
        <element api="M:System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="Methods_T_System_TimeZoneInfo_TransitionTime" />
    </api>
    <api id="Properties.T:System.TimeZoneInfo.TransitionTime">
      <topicdata name="TransitionTime" group="list" subgroup="Properties" typeTopicId="T:System.TimeZoneInfo.TransitionTime" />
      <apidata name="TransitionTime" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" layout="sequential" format="ansi" />
      <elements>
        <element api="P:System.TimeZoneInfo.TransitionTime.Day" />
        <element api="P:System.TimeZoneInfo.TransitionTime.DayOfWeek" />
        <element api="P:System.TimeZoneInfo.TransitionTime.IsFixedDateRule" />
        <element api="P:System.TimeZoneInfo.TransitionTime.Month" />
        <element api="P:System.TimeZoneInfo.TransitionTime.TimeOfDay" />
        <element api="P:System.TimeZoneInfo.TransitionTime.Week" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo" ref="true" />
      </containers>
      <file name="Properties_T_System_TimeZoneInfo_TransitionTime" />
    </api>
    <api id="Overload:System.TimeZoneInfo.TransitionTime.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.TimeZoneInfo.TransitionTime" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.TimeZoneInfo.TransitionTime.Equals(System.Object)" />
        <element api="M:System.TimeZoneInfo.TransitionTime.Equals(System.TimeZoneInfo.TransitionTime)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="O_T_System_TimeZoneInfo_TransitionTime_Equals" />
    </api>
    <api id="M:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule(System.DateTime,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="CreateFixedDateRule" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeOfDay">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="month">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="day">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="M_System_TimeZoneInfo_TransitionTime_CreateFixedDateRule_3_3e7408f4" />
    </api>
    <api id="M:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule(System.DateTime,System.Int32,System.Int32,System.DayOfWeek)">
      <topicdata group="api" />
      <apidata name="CreateFloatingDateRule" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeOfDay">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="month">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="week">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="dayOfWeek">
          <type api="T:System.DayOfWeek" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="M_System_TimeZoneInfo_TransitionTime_CreateFloatingDateRule_4_6793ebb1" />
    </api>
    <api id="P:System.TimeZoneInfo.TransitionTime.Day">
      <topicdata group="api" />
      <apidata name="Day" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="P_System_TimeZoneInfo_TransitionTime_Day" />
    </api>
    <api id="P:System.TimeZoneInfo.TransitionTime.DayOfWeek">
      <topicdata group="api" />
      <apidata name="DayOfWeek" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DayOfWeek" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="P_System_TimeZoneInfo_TransitionTime_DayOfWeek" />
    </api>
    <api id="M:System.TimeZoneInfo.TransitionTime.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.TimeZoneInfo.TransitionTime.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="M_System_TimeZoneInfo_TransitionTime_Equals_1_2572741a" />
    </api>
    <api id="M:System.TimeZoneInfo.TransitionTime.Equals(System.TimeZoneInfo.TransitionTime)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.TimeZoneInfo.TransitionTime.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
            <type api="T:System.TimeZoneInfo" ref="true" />
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
                <type api="T:System.TimeZoneInfo" ref="true" />
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="M_System_TimeZoneInfo_TransitionTime_Equals_1_0e5c44c9" />
    </api>
    <api id="M:System.TimeZoneInfo.TransitionTime.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="M_System_TimeZoneInfo_TransitionTime_GetHashCode" />
    </api>
    <api id="P:System.TimeZoneInfo.TransitionTime.IsFixedDateRule">
      <topicdata group="api" />
      <apidata name="IsFixedDateRule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="P_System_TimeZoneInfo_TransitionTime_IsFixedDateRule" />
    </api>
    <api id="P:System.TimeZoneInfo.TransitionTime.Month">
      <topicdata group="api" />
      <apidata name="Month" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="P_System_TimeZoneInfo_TransitionTime_Month" />
    </api>
    <api id="M:System.TimeZoneInfo.TransitionTime.op_Equality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
            <type api="T:System.TimeZoneInfo" ref="true" />
          </type>
        </parameter>
        <parameter name="right">
          <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
            <type api="T:System.TimeZoneInfo" ref="true" />
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="M_System_TimeZoneInfo_TransitionTime_op_Equality_2_1b4c497c" />
    </api>
    <api id="M:System.TimeZoneInfo.TransitionTime.op_Inequality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
            <type api="T:System.TimeZoneInfo" ref="true" />
          </type>
        </parameter>
        <parameter name="right">
          <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
            <type api="T:System.TimeZoneInfo" ref="true" />
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="M_System_TimeZoneInfo_TransitionTime_op_Inequality_2_1b4c497c" />
    </api>
    <api id="M:System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <topicdata group="api" />
      <apidata name="OnDeserialization" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
          <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="M_System_TimeZoneInfo_TransitionTime_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_1_2572741a" />
    </api>
    <api id="M:System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_TimeZoneInfo_TransitionTime_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="P:System.TimeZoneInfo.TransitionTime.TimeOfDay">
      <topicdata group="api" />
      <apidata name="TimeOfDay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="P_System_TimeZoneInfo_TransitionTime_TimeOfDay" />
    </api>
    <api id="P:System.TimeZoneInfo.TransitionTime.Week">
      <topicdata group="api" />
      <apidata name="Week" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneInfo.TransitionTime" ref="false">
          <type api="T:System.TimeZoneInfo" ref="true" />
        </type>
      </containers>
      <file name="P_System_TimeZoneInfo_TransitionTime_Week" />
    </api>
    <api id="T:System.TimeZoneNotFoundException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.TimeZoneNotFoundException" />
      <apidata name="TimeZoneNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_TimeZoneNotFoundException" />
    </api>
    <api id="AllMembers.T:System.TimeZoneNotFoundException">
      <topicdata name="TimeZoneNotFoundException" group="list" subgroup="members" typeTopicId="T:System.TimeZoneNotFoundException" />
      <apidata name="TimeZoneNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.TimeZoneNotFoundException.#ctor">
          <element api="M:System.TimeZoneNotFoundException.#ctor" />
          <element api="M:System.TimeZoneNotFoundException.#ctor(System.String)" />
          <element api="M:System.TimeZoneNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.TimeZoneNotFoundException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
      </containers>
      <file name="AllMembers_T_System_TimeZoneNotFoundException" />
    </api>
    <api id="Overload:System.TimeZoneNotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.TimeZoneNotFoundException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.TimeZoneNotFoundException.#ctor" />
        <element api="M:System.TimeZoneNotFoundException.#ctor(System.String)" />
        <element api="M:System.TimeZoneNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.TimeZoneNotFoundException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneNotFoundException" ref="true" />
      </containers>
      <file name="O_T_System_TimeZoneNotFoundException_ctor" />
    </api>
    <api id="M:System.TimeZoneNotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.TimeZoneNotFoundException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneNotFoundException" ref="true" />
      </containers>
      <file name="C_System_TimeZoneNotFoundException_ctor" />
    </api>
    <api id="M:System.TimeZoneNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.TimeZoneNotFoundException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneNotFoundException" ref="true" />
      </containers>
      <file name="C_System_TimeZoneNotFoundException_ctor_2_4075724f" />
    </api>
    <api id="M:System.TimeZoneNotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.TimeZoneNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneNotFoundException" ref="true" />
      </containers>
      <file name="C_System_TimeZoneNotFoundException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.TimeZoneNotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.TimeZoneNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System" />
        <type api="T:System.TimeZoneNotFoundException" ref="true" />
      </containers>
      <file name="C_System_TimeZoneNotFoundException_ctor_2_3ec47892" />
    </api>
    <api id="T:System.Collections.Generic.HashSet`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Collections.Generic.HashSet`1" />
      <apidata name="HashSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Linq.IQueryable`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Collections_Generic_HashSet`1" />
    </api>
    <api id="AllMembers.T:System.Collections.Generic.HashSet`1">
      <topicdata name="HashSet" group="list" subgroup="members" typeTopicId="T:System.Collections.Generic.HashSet`1" />
      <apidata name="HashSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Collections.Generic.HashSet`1.#ctor">
          <element api="M:System.Collections.Generic.HashSet`1.#ctor" />
          <element api="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
          <element api="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})" />
          <element api="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="M:System.Collections.Generic.HashSet`1.Add(`0)" />
        <element api="M:System.Collections.Generic.HashSet`1.Clear" />
        <element api="P:System.Collections.Generic.HashSet`1.Comparer" />
        <element api="M:System.Collections.Generic.HashSet`1.Contains(`0)" />
        <element api="Overload:System.Collections.Generic.HashSet`1.CopyTo">
          <element api="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])" />
          <element api="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)" />
        </element>
        <element api="P:System.Collections.Generic.HashSet`1.Count" />
        <element api="M:System.Collections.Generic.HashSet`1.CreateSetComparer" />
        <element api="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.GetEnumerator" />
        <element api="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.Remove(`0)" />
        <element api="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{`0}#Add(`0)" />
        <element api="P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{`0}#IsReadOnly" />
        <element api="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{`0}#GetEnumerator" />
        <element api="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Generic.HashSet`1.TrimExcess" />
        <element api="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
      </containers>
      <file name="AllMembers_T_System_Collections_Generic_HashSet`1" />
    </api>
    <api id="Methods.T:System.Collections.Generic.HashSet`1">
      <topicdata name="HashSet" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Generic.HashSet`1" />
      <apidata name="HashSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.Generic.HashSet`1.Add(`0)" />
        <element api="M:System.Collections.Generic.HashSet`1.Clear" />
        <element api="M:System.Collections.Generic.HashSet`1.Contains(`0)" />
        <element api="Overload:System.Collections.Generic.HashSet`1.CopyTo">
          <element api="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])" />
          <element api="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.HashSet`1.CreateSetComparer" />
        <element api="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.GetEnumerator" />
        <element api="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.Remove(`0)" />
        <element api="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{`0}#Add(`0)" />
        <element api="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{`0}#GetEnumerator" />
        <element api="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Generic.HashSet`1.TrimExcess" />
        <element api="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
      </containers>
      <file name="Methods_T_System_Collections_Generic_HashSet`1" />
    </api>
    <api id="Properties.T:System.Collections.Generic.HashSet`1">
      <topicdata name="HashSet" group="list" subgroup="Properties" typeTopicId="T:System.Collections.Generic.HashSet`1" />
      <apidata name="HashSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Collections.Generic.HashSet`1.Comparer" />
        <element api="P:System.Collections.Generic.HashSet`1.Count" />
        <element api="P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{`0}#IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
      </containers>
      <file name="Properties_T_System_Collections_Generic_HashSet`1" />
    </api>
    <api id="Overload:System.Collections.Generic.HashSet`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Collections.Generic.HashSet`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Collections.Generic.HashSet`1.#ctor" />
        <element api="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})" />
        <element api="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="O_T_System_Collections_Generic_HashSet`1_ctor" />
    </api>
    <api id="Overload:System.Collections.Generic.HashSet`1.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Collections.Generic.HashSet`1" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])" />
        <element api="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="O_T_System_Collections_Generic_HashSet`1_CopyTo" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Generic.HashSet`1.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="C_System_Collections_Generic_HashSet`1_ctor" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Generic.HashSet`1.#ctor" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="C_System_Collections_Generic_HashSet`1_ctor_1_68052cd5" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Generic.HashSet`1.#ctor" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="C_System_Collections_Generic_HashSet`1_ctor_2_6ce5a1c9" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Collections.Generic.HashSet`1.#ctor" />
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="C_System_Collections_Generic_HashSet`1_ctor_1_ffe0907d" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Collections.Generic.HashSet`1.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="C_System_Collections_Generic_HashSet`1_ctor_2_4075724f" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.Add(`0)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_Add_1_1a965722" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_Clear" />
    </api>
    <api id="P:System.Collections.Generic.HashSet`1.Comparer">
      <topicdata group="api" />
      <apidata name="Comparer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="P_System_Collections_Generic_HashSet`1_Comparer" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.Contains(`0)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_Contains_1_1a965722" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Collections.Generic.HashSet`1.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_CopyTo_1_b8cc08cb" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Collections.Generic.HashSet`1.CopyTo" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_CopyTo_2_5f02821a" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Collections.Generic.HashSet`1.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_CopyTo_3_aeaa3c1e" />
    </api>
    <api id="P:System.Collections.Generic.HashSet`1.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="P_System_Collections_Generic_HashSet`1_Count" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.CreateSetComparer">
      <topicdata group="api" />
      <apidata name="CreateSetComparer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_CreateSetComparer" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="ExceptWith" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_ExceptWith_1_70e2ec3f" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.HashSet`1.Enumerator" ref="false">
          <type api="T:System.Collections.Generic.HashSet`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_GetEnumerator" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Collections_Generic_HashSet`1_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="IntersectWith" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_IntersectWith_1_70e2ec3f" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="IsProperSubsetOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_IsProperSubsetOf_1_70e2ec3f" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="IsProperSupersetOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_IsProperSupersetOf_1_70e2ec3f" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="IsSubsetOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_IsSubsetOf_1_70e2ec3f" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="IsSupersetOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_IsSupersetOf_1_70e2ec3f" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)">
      <topicdata group="api" />
      <apidata name="OnDeserialization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
          <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_OnDeserialization_1_2572741a" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="Overlaps" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_Overlaps_1_70e2ec3f" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.Remove(`0)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_Remove_1_1a965722" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
      <topicdata group="api" />
      <apidata name="RemoveWhere" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="match">
          <type api="T:System.Predicate`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_RemoveWhere_1_a32b734b" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="SetEquals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_SetEquals_1_70e2ec3f" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="SymmetricExceptWith" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_SymmetricExceptWith_1_70e2ec3f" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{`0}#Add(`0)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_System_Collections_Generic_ICollection{`0}_Add_1_1a965722" />
    </api>
    <api id="P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{`0}#IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="P_System_Collections_Generic_HashSet`1_System_Collections_Generic_ICollection{`0}_IsReadOnly" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{`0}#GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Linq.IQueryable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_System_Collections_Generic_IEnumerable{`0}_GetEnumerator" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_System_Collections_IEnumerable_GetEnumerator" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.TrimExcess">
      <topicdata group="api" />
      <apidata name="TrimExcess" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_TrimExcess" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="UnionWith" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_UnionWith_1_70e2ec3f" />
    </api>
    <api id="T:System.Collections.Generic.HashSet`1.Enumerator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Collections.Generic.HashSet`1.Enumerator" />
      <apidata name="Enumerator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" layout="sequential" format="ansi" />
      <implements>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Collections_Generic_HashSet`1_Enumerator" />
    </api>
    <api id="AllMembers.T:System.Collections.Generic.HashSet`1.Enumerator">
      <topicdata name="Enumerator" group="list" subgroup="members" typeTopicId="T:System.Collections.Generic.HashSet`1.Enumerator" />
      <apidata name="Enumerator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:System.Collections.Generic.HashSet`1.Enumerator.Current" />
        <element api="M:System.Collections.Generic.HashSet`1.Enumerator.Dispose" />
        <element api="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext" />
        <element api="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current" />
        <element api="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="AllMembers_T_System_Collections_Generic_HashSet`1_Enumerator" />
    </api>
    <api id="Methods.T:System.Collections.Generic.HashSet`1.Enumerator">
      <topicdata name="Enumerator" group="list" subgroup="Methods" typeTopicId="T:System.Collections.Generic.HashSet`1.Enumerator" />
      <apidata name="Enumerator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Collections.Generic.HashSet`1.Enumerator.Dispose" />
        <element api="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext" />
        <element api="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="Methods_T_System_Collections_Generic_HashSet`1_Enumerator" />
    </api>
    <api id="Properties.T:System.Collections.Generic.HashSet`1.Enumerator">
      <topicdata name="Enumerator" group="list" subgroup="Properties" typeTopicId="T:System.Collections.Generic.HashSet`1.Enumerator" />
      <apidata name="Enumerator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" layout="sequential" format="ansi" />
      <elements>
        <element api="P:System.Collections.Generic.HashSet`1.Enumerator.Current" />
        <element api="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
      </containers>
      <file name="Properties_T_System_Collections_Generic_HashSet`1_Enumerator" />
    </api>
    <api id="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IEnumerator`1.Current">
          <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Collections.Generic.HashSet`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1.Enumerator" ref="false">
          <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
        </type>
      </containers>
      <file name="P_System_Collections_Generic_HashSet`1_Enumerator_Current" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.Enumerator.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1.Enumerator" ref="false">
          <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
        </type>
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_Enumerator_Dispose" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1.Enumerator" ref="false">
          <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
        </type>
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_Enumerator_MoveNext" />
    </api>
    <api id="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IEnumerator.Current">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1.Enumerator" ref="false">
          <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
        </type>
      </containers>
      <file name="P_System_Collections_Generic_HashSet`1_Enumerator_System_Collections_IEnumerator_Current" />
    </api>
    <api id="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Collections.Generic" />
        <type api="T:System.Collections.Generic.HashSet`1.Enumerator" ref="false">
          <type api="T:System.Collections.Generic.HashSet`1" ref="true" />
        </type>
      </containers>
      <file name="M_System_Collections_Generic_HashSet`1_Enumerator_System_Collections_IEnumerator_Reset" />
    </api>
    <api id="T:System.Diagnostics.EventSchemaTraceListener">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.EventSchemaTraceListener" />
      <apidata name="EventSchemaTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_EventSchemaTraceListener" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.EventSchemaTraceListener">
      <topicdata name="EventSchemaTraceListener" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.EventSchemaTraceListener" />
      <apidata name="EventSchemaTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.#ctor">
          <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)" />
        </element>
        <element api="P:System.Diagnostics.EventSchemaTraceListener.BufferSize" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.Close" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.EventSchemaTraceListener.Flush" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.TraceData">
          <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="P:System.Diagnostics.EventSchemaTraceListener.Writer" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_EventSchemaTraceListener" />
    </api>
    <api id="Methods.T:System.Diagnostics.EventSchemaTraceListener">
      <topicdata name="EventSchemaTraceListener" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.EventSchemaTraceListener" />
      <apidata name="EventSchemaTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.Close" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.EventSchemaTraceListener.Flush" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.TraceData">
          <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
      </containers>
      <file name="Methods_T_System_Diagnostics_EventSchemaTraceListener" />
    </api>
    <api id="Properties.T:System.Diagnostics.EventSchemaTraceListener">
      <topicdata name="EventSchemaTraceListener" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.EventSchemaTraceListener" />
      <apidata name="EventSchemaTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.EventSchemaTraceListener.BufferSize" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.Writer" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
      </containers>
      <file name="Properties_T_System_Diagnostics_EventSchemaTraceListener" />
    </api>
    <api id="Overload:System.Diagnostics.EventSchemaTraceListener.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.EventSchemaTraceListener" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" />
      </containers>
      <file name="O_T_System_Diagnostics_EventSchemaTraceListener_MemberwiseClone" />
    </api>
    <api id="Overload:System.Diagnostics.EventSchemaTraceListener.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.EventSchemaTraceListener" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_EventSchemaTraceListener_ctor" />
    </api>
    <api id="Overload:System.Diagnostics.EventSchemaTraceListener.Fail">
      <topicdata name="Fail" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.EventSchemaTraceListener" />
      <apidata name="Fail" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_EventSchemaTraceListener_Fail" />
    </api>
    <api id="Overload:System.Diagnostics.EventSchemaTraceListener.TraceData">
      <topicdata name="TraceData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.EventSchemaTraceListener" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_EventSchemaTraceListener_TraceData" />
    </api>
    <api id="Overload:System.Diagnostics.EventSchemaTraceListener.TraceEvent">
      <topicdata name="TraceEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.EventSchemaTraceListener" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_EventSchemaTraceListener_TraceEvent" />
    </api>
    <api id="Overload:System.Diagnostics.EventSchemaTraceListener.Write">
      <topicdata name="Write" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.EventSchemaTraceListener" />
      <apidata name="Write" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_EventSchemaTraceListener_Write" />
    </api>
    <api id="Overload:System.Diagnostics.EventSchemaTraceListener.WriteLine">
      <topicdata name="WriteLine" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.EventSchemaTraceListener" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_EventSchemaTraceListener_WriteLine" />
    </api>
    <api id="Overload:System.Diagnostics.EventSchemaTraceListener.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.EventSchemaTraceListener" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Dispose" />
        <element api="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" />
      </containers>
      <file name="O_T_System_Diagnostics_EventSchemaTraceListener_Dispose" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventSchemaTraceListener.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_EventSchemaTraceListener_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventSchemaTraceListener.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_EventSchemaTraceListener_ctor_2_6608d038" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventSchemaTraceListener.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_EventSchemaTraceListener_ctor_3_bcadee5e" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventSchemaTraceListener.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="logRetentionOption">
          <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_EventSchemaTraceListener_ctor_4_16d5f400" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventSchemaTraceListener.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="logRetentionOption">
          <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
        </parameter>
        <parameter name="maximumFileSize">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_EventSchemaTraceListener_ctor_5_0bfbaf17" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventSchemaTraceListener.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="logRetentionOption">
          <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
        </parameter>
        <parameter name="maximumFileSize">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="maximumNumberOfFiles">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_EventSchemaTraceListener_ctor_6_d2840edb" />
    </api>
    <api id="P:System.Diagnostics.EventSchemaTraceListener.BufferSize">
      <topicdata group="api" />
      <apidata name="BufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_EventSchemaTraceListener_BufferSize" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TextWriterTraceListener.Close">
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_EventSchemaTraceListener_Close" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Fail" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventSchemaTraceListener.Fail" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="detailMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_EventSchemaTraceListener_Fail_2_52fce4af" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TextWriterTraceListener.Flush">
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_EventSchemaTraceListener_Flush" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes">
      <topicdata group="api" />
      <apidata name="GetSupportedAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_EventSchemaTraceListener_GetSupportedAttributes" />
    </api>
    <api id="P:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe">
      <topicdata group="api" />
      <apidata name="IsThreadSafe" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_EventSchemaTraceListener_IsThreadSafe" />
    </api>
    <api id="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
      <topicdata group="api" />
      <apidata name="MaximumFileSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_EventSchemaTraceListener_MaximumFileSize" />
    </api>
    <api id="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
      <topicdata group="api" />
      <apidata name="MaximumNumberOfFiles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_EventSchemaTraceListener_MaximumNumberOfFiles" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventSchemaTraceListener.TraceData" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_EventSchemaTraceListener_TraceData_5_33cd9d12" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventSchemaTraceListener.TraceData" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_EventSchemaTraceListener_TraceData_5_abf0841c" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventSchemaTraceListener.TraceEvent" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_EventSchemaTraceListener_TraceEvent_5_451b23eb" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventSchemaTraceListener.TraceEvent" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_EventSchemaTraceListener_TraceEvent_6_efd3e6ec" />
    </api>
    <api id="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption">
      <topicdata group="api" />
      <apidata name="TraceLogRetentionOption" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_EventSchemaTraceListener_TraceLogRetentionOption" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
      <topicdata group="api" />
      <apidata name="TraceTransfer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="relatedActivityId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_EventSchemaTraceListener_TraceTransfer_5_aeec8844" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventSchemaTraceListener.Write" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)">
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_EventSchemaTraceListener_Write_1_72eac341" />
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventSchemaTraceListener.WriteLine" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)">
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_EventSchemaTraceListener_WriteLine_1_72eac341" />
    </api>
    <api id="P:System.Diagnostics.EventSchemaTraceListener.Writer">
      <topicdata group="api" />
      <apidata name="Writer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.IO.TextWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_EventSchemaTraceListener_Writer" />
    </api>
    <api id="T:System.Diagnostics.TraceLogRetentionOption">
      <topicdata group="api" />
      <apidata name="TraceLogRetentionOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize" />
        <element api="F:System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize" />
        <element api="F:System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles" />
        <element api="F:System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles" />
        <element api="F:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
      </containers>
      <file name="T_System_Diagnostics_TraceLogRetentionOption" />
    </api>
    <api id="F:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles">
      <topicdata group="api" notopic="" />
      <apidata name="LimitedCircularFiles" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_TraceLogRetentionOption_LimitedCircularFiles" />
    </api>
    <api id="F:System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles">
      <topicdata group="api" notopic="" />
      <apidata name="LimitedSequentialFiles" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_TraceLogRetentionOption_LimitedSequentialFiles" />
    </api>
    <api id="F:System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize">
      <topicdata group="api" notopic="" />
      <apidata name="SingleFileBoundedSize" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_TraceLogRetentionOption_SingleFileBoundedSize" />
    </api>
    <api id="F:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize">
      <topicdata group="api" notopic="" />
      <apidata name="SingleFileUnboundedSize" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_TraceLogRetentionOption_SingleFileUnboundedSize" />
    </api>
    <api id="F:System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles">
      <topicdata group="api" notopic="" />
      <apidata name="UnlimitedSequentialFiles" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_TraceLogRetentionOption_UnlimitedSequentialFiles" />
    </api>
    <api id="T:System.Diagnostics.UnescapedXmlDiagnosticData">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.UnescapedXmlDiagnosticData" />
      <apidata name="UnescapedXmlDiagnosticData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_UnescapedXmlDiagnosticData" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.UnescapedXmlDiagnosticData">
      <topicdata name="UnescapedXmlDiagnosticData" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.UnescapedXmlDiagnosticData" />
      <apidata name="UnescapedXmlDiagnosticData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Diagnostics.UnescapedXmlDiagnosticData.#ctor(System.String)" />
        <element api="M:System.Diagnostics.UnescapedXmlDiagnosticData.ToString" />
        <element api="P:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_UnescapedXmlDiagnosticData" />
    </api>
    <api id="Methods.T:System.Diagnostics.UnescapedXmlDiagnosticData">
      <topicdata name="UnescapedXmlDiagnosticData" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.UnescapedXmlDiagnosticData" />
      <apidata name="UnescapedXmlDiagnosticData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Diagnostics.UnescapedXmlDiagnosticData.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
      </containers>
      <file name="Methods_T_System_Diagnostics_UnescapedXmlDiagnosticData" />
    </api>
    <api id="Properties.T:System.Diagnostics.UnescapedXmlDiagnosticData">
      <topicdata name="UnescapedXmlDiagnosticData" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.UnescapedXmlDiagnosticData" />
      <apidata name="UnescapedXmlDiagnosticData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
      </containers>
      <file name="Properties_T_System_Diagnostics_UnescapedXmlDiagnosticData" />
    </api>
    <api id="M:System.Diagnostics.UnescapedXmlDiagnosticData.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="xmlPayload">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.UnescapedXmlDiagnosticData" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_UnescapedXmlDiagnosticData_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Diagnostics.UnescapedXmlDiagnosticData.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.UnescapedXmlDiagnosticData" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_UnescapedXmlDiagnosticData_ToString" />
    </api>
    <api id="P:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml">
      <topicdata group="api" />
      <apidata name="UnescapedXml" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.UnescapedXmlDiagnosticData" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_UnescapedXmlDiagnosticData_UnescapedXml" />
    </api>
    <api id="T:System.Diagnostics.Eventing.EventDescriptor">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.EventDescriptor" />
      <apidata name="EventDescriptor" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="explicit" format="ansi" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_EventDescriptor" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.EventDescriptor">
      <topicdata name="EventDescriptor" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.EventDescriptor" />
      <apidata name="EventDescriptor" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="explicit" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Diagnostics.Eventing.EventDescriptor.#ctor(System.Int32,System.Byte,System.Byte,System.Byte,System.Byte,System.Int32,System.Int64)" />
        <element api="P:System.Diagnostics.Eventing.EventDescriptor.Channel" />
        <element api="P:System.Diagnostics.Eventing.EventDescriptor.EventId" />
        <element api="P:System.Diagnostics.Eventing.EventDescriptor.Keywords" />
        <element api="P:System.Diagnostics.Eventing.EventDescriptor.Level" />
        <element api="P:System.Diagnostics.Eventing.EventDescriptor.Opcode" />
        <element api="P:System.Diagnostics.Eventing.EventDescriptor.Task" />
        <element api="P:System.Diagnostics.Eventing.EventDescriptor.Version" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_EventDescriptor" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.EventDescriptor">
      <topicdata name="EventDescriptor" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.EventDescriptor" />
      <apidata name="EventDescriptor" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="explicit" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.EventDescriptor.Channel" />
        <element api="P:System.Diagnostics.Eventing.EventDescriptor.EventId" />
        <element api="P:System.Diagnostics.Eventing.EventDescriptor.Keywords" />
        <element api="P:System.Diagnostics.Eventing.EventDescriptor.Level" />
        <element api="P:System.Diagnostics.Eventing.EventDescriptor.Opcode" />
        <element api="P:System.Diagnostics.Eventing.EventDescriptor.Task" />
        <element api="P:System.Diagnostics.Eventing.EventDescriptor.Version" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_EventDescriptor" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventDescriptor.#ctor(System.Int32,System.Byte,System.Byte,System.Byte,System.Byte,System.Int32,System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="channel">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="level">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="opcode">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="task">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="keywords">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventDescriptor" ref="false" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_EventDescriptor_ctor_7_5a17b805" />
    </api>
    <api id="P:System.Diagnostics.Eventing.EventDescriptor.Channel">
      <topicdata group="api" />
      <apidata name="Channel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventDescriptor" ref="false" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_EventDescriptor_Channel" />
    </api>
    <api id="P:System.Diagnostics.Eventing.EventDescriptor.EventId">
      <topicdata group="api" />
      <apidata name="EventId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventDescriptor" ref="false" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_EventDescriptor_EventId" />
    </api>
    <api id="P:System.Diagnostics.Eventing.EventDescriptor.Keywords">
      <topicdata group="api" />
      <apidata name="Keywords" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventDescriptor" ref="false" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_EventDescriptor_Keywords" />
    </api>
    <api id="P:System.Diagnostics.Eventing.EventDescriptor.Level">
      <topicdata group="api" />
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventDescriptor" ref="false" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_EventDescriptor_Level" />
    </api>
    <api id="P:System.Diagnostics.Eventing.EventDescriptor.Opcode">
      <topicdata group="api" />
      <apidata name="Opcode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventDescriptor" ref="false" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_EventDescriptor_Opcode" />
    </api>
    <api id="P:System.Diagnostics.Eventing.EventDescriptor.Task">
      <topicdata group="api" />
      <apidata name="Task" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventDescriptor" ref="false" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_EventDescriptor_Task" />
    </api>
    <api id="P:System.Diagnostics.Eventing.EventDescriptor.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventDescriptor" ref="false" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_EventDescriptor_Version" />
    </api>
    <api id="T:System.Diagnostics.Eventing.EventProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.EventProvider" />
      <apidata name="EventProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_EventProvider" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.EventProvider">
      <topicdata name="EventProvider" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.EventProvider" />
      <apidata name="EventProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)" />
        <element api="M:System.Diagnostics.Eventing.EventProvider.Close" />
        <element api="M:System.Diagnostics.Eventing.EventProvider.CreateActivityId" />
        <element api="Overload:System.Diagnostics.Eventing.EventProvider.Dispose">
          <element api="M:System.Diagnostics.Eventing.EventProvider.Dispose" />
          <element api="M:System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.EventProvider.Finalize" />
        <element api="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" />
        <element api="Overload:System.Diagnostics.Eventing.EventProvider.IsEnabled">
          <element api="M:System.Diagnostics.Eventing.EventProvider.IsEnabled" />
          <element api="M:System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)" />
        <element api="Overload:System.Diagnostics.Eventing.EventProvider.WriteEvent">
          <element api="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])" />
          <element api="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)" />
          <element api="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent">
          <element api="M:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)" />
          <element api="M:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent">
          <element api="M:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])" />
          <element api="M:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_EventProvider" />
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.EventProvider">
      <topicdata name="EventProvider" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.EventProvider" />
      <apidata name="EventProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Diagnostics.Eventing.EventProvider.Close" />
        <element api="M:System.Diagnostics.Eventing.EventProvider.CreateActivityId" />
        <element api="Overload:System.Diagnostics.Eventing.EventProvider.Dispose">
          <element api="M:System.Diagnostics.Eventing.EventProvider.Dispose" />
          <element api="M:System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.EventProvider.Finalize" />
        <element api="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" />
        <element api="Overload:System.Diagnostics.Eventing.EventProvider.IsEnabled">
          <element api="M:System.Diagnostics.Eventing.EventProvider.IsEnabled" />
          <element api="M:System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)" />
        <element api="Overload:System.Diagnostics.Eventing.EventProvider.WriteEvent">
          <element api="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])" />
          <element api="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)" />
          <element api="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent">
          <element api="M:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)" />
          <element api="M:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent">
          <element api="M:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])" />
          <element api="M:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
      </containers>
      <file name="Methods_T_System_Diagnostics_Eventing_EventProvider" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.EventProvider.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.EventProvider" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.EventProvider.Dispose" />
        <element api="M:System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_EventProvider_Dispose" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.EventProvider.IsEnabled">
      <topicdata name="IsEnabled" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.EventProvider" />
      <apidata name="IsEnabled" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.EventProvider.IsEnabled" />
        <element api="M:System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_EventProvider_IsEnabled" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.EventProvider.WriteEvent">
      <topicdata name="WriteEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.EventProvider" />
      <apidata name="WriteEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])" />
        <element api="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)" />
        <element api="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_EventProvider_WriteEvent" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent">
      <topicdata name="WriteMessageEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.EventProvider" />
      <apidata name="WriteMessageEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)" />
        <element api="M:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_EventProvider_WriteMessageEvent" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent">
      <topicdata name="WriteTransferEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.EventProvider" />
      <apidata name="WriteTransferEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])" />
        <element api="M:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_EventProvider_WriteTransferEvent" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="providerGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_EventProvider_ctor_1_34b98ada" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProvider_Close" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.CreateActivityId">
      <topicdata group="api" />
      <apidata name="CreateActivityId" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProvider_CreateActivityId" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.EventProvider.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProvider_Dispose" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.EventProvider.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProvider_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProvider_Finalize" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError">
      <topicdata group="api" />
      <apidata name="GetLastWriteEventError" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode" ref="false">
          <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProvider_GetLastWriteEventError" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.IsEnabled">
      <topicdata group="api" />
      <apidata name="IsEnabled" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.EventProvider.IsEnabled" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProvider_IsEnabled" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)">
      <topicdata group="api" />
      <apidata name="IsEnabled" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.EventProvider.IsEnabled" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="keywords">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProvider_IsEnabled_2_fac5a7df" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)">
      <topicdata group="api" />
      <apidata name="SetActivityId" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <referenceTo>
            <type api="T:System.Guid" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProvider_SetActivityId_1_a6acc600" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)">
      <topicdata group="api" />
      <apidata name="WriteEvent" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.EventProvider.WriteEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventDescriptor">
          <referenceTo>
            <type api="T:System.Diagnostics.Eventing.EventDescriptor" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="dataCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProvider_WriteEvent_3_814da514" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])">
      <topicdata group="api" />
      <apidata name="WriteEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.EventProvider.WriteEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventDescriptor">
          <referenceTo>
            <type api="T:System.Diagnostics.Eventing.EventDescriptor" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="eventPayload">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProvider_WriteEvent_2_e2ffcc09" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)">
      <topicdata group="api" />
      <apidata name="WriteEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.EventProvider.WriteEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventDescriptor">
          <referenceTo>
            <type api="T:System.Diagnostics.Eventing.EventDescriptor" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProvider_WriteEvent_2_51cad35d" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)">
      <topicdata group="api" />
      <apidata name="WriteMessageEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProvider_WriteMessageEvent_1_72eac341" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)">
      <topicdata group="api" />
      <apidata name="WriteMessageEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventLevel">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="eventKeywords">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProvider_WriteMessageEvent_3_9aae6d64" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)">
      <topicdata group="api" />
      <apidata name="WriteTransferEvent" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventDescriptor">
          <referenceTo>
            <type api="T:System.Diagnostics.Eventing.EventDescriptor" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="relatedActivityId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="dataCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProvider_WriteTransferEvent_4_3393da97" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])">
      <topicdata group="api" />
      <apidata name="WriteTransferEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventDescriptor">
          <referenceTo>
            <type api="T:System.Diagnostics.Eventing.EventDescriptor" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="relatedActivityId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="eventPayload">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProvider_WriteTransferEvent_3_9533b4f4" />
    </api>
    <api id="T:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode">
      <topicdata group="api" />
      <apidata name="WriteEventErrorCode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode.NoError" />
        <element api="F:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode.NoFreeBuffers" />
        <element api="F:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode.EventTooBig" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
      </containers>
      <file name="T_System_Diagnostics_Eventing_EventProvider_WriteEventErrorCode" />
    </api>
    <api id="F:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode.EventTooBig">
      <topicdata group="api" notopic="" />
      <apidata name="EventTooBig" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode" ref="false">
          <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode" ref="false">
          <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
        </type>
      </containers>
      <file name="F_System_Diagnostics_Eventing_EventProvider_WriteEventErrorCode_EventTooBig" />
    </api>
    <api id="F:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode.NoError">
      <topicdata group="api" notopic="" />
      <apidata name="NoError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode" ref="false">
          <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode" ref="false">
          <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
        </type>
      </containers>
      <file name="F_System_Diagnostics_Eventing_EventProvider_WriteEventErrorCode_NoError" />
    </api>
    <api id="F:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode.NoFreeBuffers">
      <topicdata group="api" notopic="" />
      <apidata name="NoFreeBuffers" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode" ref="false">
          <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode" ref="false">
          <type api="T:System.Diagnostics.Eventing.EventProvider" ref="true" />
        </type>
      </containers>
      <file name="F_System_Diagnostics_Eventing_EventProvider_WriteEventErrorCode_NoFreeBuffers" />
    </api>
    <api id="T:System.Diagnostics.Eventing.EventProviderTraceListener">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.EventProviderTraceListener" />
      <apidata name="EventProviderTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_EventProviderTraceListener" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.EventProviderTraceListener">
      <topicdata name="EventProviderTraceListener" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.EventProviderTraceListener" />
      <apidata name="EventProviderTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <element api="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
        <element api="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor">
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)" />
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.Close" />
        <element api="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.Flush" />
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes" />
        <element api="P:System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe" />
        <element api="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData">
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_EventProviderTraceListener" />
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.EventProviderTraceListener">
      <topicdata name="EventProviderTraceListener" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.EventProviderTraceListener" />
      <apidata name="EventProviderTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
        <element api="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.Close" />
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.Flush" />
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData">
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
      </containers>
      <file name="Methods_T_System_Diagnostics_Eventing_EventProviderTraceListener" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.EventProviderTraceListener">
      <topicdata name="EventProviderTraceListener" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.EventProviderTraceListener" />
      <apidata name="EventProviderTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <element api="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />
        <element api="P:System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_EventProviderTraceListener" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.EventProviderTraceListener" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_EventProviderTraceListener_MemberwiseClone" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.EventProviderTraceListener" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Dispose" />
        <element api="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_EventProviderTraceListener_Dispose" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.Fail">
      <topicdata name="Fail" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.EventProviderTraceListener" />
      <apidata name="Fail" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_EventProviderTraceListener_Fail" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.Write">
      <topicdata name="Write" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.EventProviderTraceListener" />
      <apidata name="Write" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_EventProviderTraceListener_Write" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine">
      <topicdata name="WriteLine" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.EventProviderTraceListener" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_EventProviderTraceListener_WriteLine" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.EventProviderTraceListener" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)" />
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_EventProviderTraceListener_ctor" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData">
      <topicdata name="TraceData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.EventProviderTraceListener" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_EventProviderTraceListener_TraceData" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent">
      <topicdata name="TraceEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.EventProviderTraceListener" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
        <element api="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_EventProviderTraceListener_TraceEvent" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor" />
      <parameters>
        <parameter name="providerId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_EventProviderTraceListener_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor" />
      <parameters>
        <parameter name="providerId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_EventProviderTraceListener_ctor_2_6608d038" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor" />
      <parameters>
        <parameter name="providerId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="delimiter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_EventProviderTraceListener_ctor_3_ecda0320" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProviderTraceListener.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Close">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProviderTraceListener_Close" />
    </api>
    <api id="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter">
      <topicdata group="api" />
      <apidata name="Delimiter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_EventProviderTraceListener_Delimiter" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Fail" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.Fail" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="detailMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProviderTraceListener_Fail_2_52fce4af" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProviderTraceListener.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Flush">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProviderTraceListener_Flush" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes">
      <topicdata group="api" />
      <apidata name="GetSupportedAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProviderTraceListener_GetSupportedAttributes" />
    </api>
    <api id="P:System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe">
      <topicdata group="api" />
      <apidata name="IsThreadSafe" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_EventProviderTraceListener_IsThreadSafe" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProviderTraceListener_TraceData_5_33cd9d12" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProviderTraceListener_TraceData_5_abf0841c" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProviderTraceListener_TraceEvent_4_4919112c" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProviderTraceListener_TraceEvent_5_451b23eb" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProviderTraceListener_TraceEvent_6_efd3e6ec" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
      <topicdata group="api" />
      <apidata name="TraceTransfer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="relatedActivityId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProviderTraceListener_TraceTransfer_5_aeec8844" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.Write" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Write(System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProviderTraceListener_Write_1_72eac341" />
    </api>
    <api id="M:System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing" />
        <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_EventProviderTraceListener_WriteLine_1_72eac341" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventBookmark">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventBookmark" />
      <apidata name="EventBookmark" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventBookmark" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventBookmark">
      <topicdata name="EventBookmark" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventBookmark" />
      <apidata name="EventBookmark" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventBookmark.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventBookmark.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventBookmark.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventBookmark" />
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventBookmark">
      <topicdata name="EventBookmark" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventBookmark" />
      <apidata name="EventBookmark" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventBookmark.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventBookmark.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Methods_T_System_Diagnostics_Eventing_Reader_EventBookmark" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventBookmark.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventBookmark_ctor_2_4075724f" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventBookmark.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Diagnostics_Eventing_Reader_EventBookmark_GetObjectData_2_af75a6ab" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventBookmark.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Diagnostics_Eventing_Reader_EventBookmark_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventKeyword">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventKeyword" />
      <apidata name="EventKeyword" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventKeyword" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventKeyword">
      <topicdata name="EventKeyword" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventKeyword" />
      <apidata name="EventKeyword" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventKeyword.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventKeyword.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventKeyword.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventKeyword" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventKeyword">
      <topicdata name="EventKeyword" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventKeyword" />
      <apidata name="EventKeyword" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventKeyword.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventKeyword.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventKeyword.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventKeyword" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventKeyword.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventKeyword" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventKeyword_DisplayName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventKeyword.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventKeyword" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventKeyword_Name" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventKeyword.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventKeyword" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventKeyword_Value" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLevel">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLevel" />
      <apidata name="EventLevel" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLevel" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLevel">
      <topicdata name="EventLevel" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLevel" />
      <apidata name="EventLevel" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLevel.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLevel.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLevel.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventLevel" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLevel">
      <topicdata name="EventLevel" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLevel" />
      <apidata name="EventLevel" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLevel.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLevel.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLevel.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventLevel" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLevel.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLevel" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLevel_DisplayName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLevel.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLevel" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLevel_Name" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLevel.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLevel" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLevel_Value" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />
      <apidata name="EventLogConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogConfiguration" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogConfiguration">
      <topicdata name="EventLogConfiguration" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />
      <apidata name="EventLogConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventLogConfiguration" />
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogConfiguration">
      <topicdata name="EventLogConfiguration" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />
      <apidata name="EventLogConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Methods_T_System_Diagnostics_Eventing_Reader_EventLogConfiguration" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogConfiguration">
      <topicdata name="EventLogConfiguration" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />
      <apidata name="EventLogConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventLogConfiguration" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogConfiguration_ctor" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogConfiguration_Dispose" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogConfiguration_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="session">
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogConfiguration_ctor_2_96131267" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogConfiguration_Dispose" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogConfiguration_Dispose_1_36d384f7" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog">
      <topicdata group="api" />
      <apidata name="IsClassicLog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_IsClassicLog" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled">
      <topicdata group="api" />
      <apidata name="IsEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_IsEnabled" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath">
      <topicdata group="api" />
      <apidata name="LogFilePath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_LogFilePath" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation">
      <topicdata group="api" />
      <apidata name="LogIsolation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_LogIsolation" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode">
      <topicdata group="api" />
      <apidata name="LogMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_LogMode" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName">
      <topicdata group="api" />
      <apidata name="LogName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_LogName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType">
      <topicdata group="api" />
      <apidata name="LogType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_LogType" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes">
      <topicdata group="api" />
      <apidata name="MaximumSizeInBytes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_MaximumSizeInBytes" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName">
      <topicdata group="api" />
      <apidata name="OwningProviderName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_OwningProviderName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize">
      <topicdata group="api" />
      <apidata name="ProviderBufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_ProviderBufferSize" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid">
      <topicdata group="api" />
      <apidata name="ProviderControlGuid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_ProviderControlGuid" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords">
      <topicdata group="api" />
      <apidata name="ProviderKeywords" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_ProviderKeywords" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency">
      <topicdata group="api" />
      <apidata name="ProviderLatency" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_ProviderLatency" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel">
      <topicdata group="api" />
      <apidata name="ProviderLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_ProviderLevel" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers">
      <topicdata group="api" />
      <apidata name="ProviderMaximumNumberOfBuffers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_ProviderMaximumNumberOfBuffers" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers">
      <topicdata group="api" />
      <apidata name="ProviderMinimumNumberOfBuffers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_ProviderMinimumNumberOfBuffers" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames">
      <topicdata group="api" />
      <apidata name="ProviderNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_ProviderNames" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges">
      <topicdata group="api" />
      <apidata name="SaveChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogConfiguration_SaveChanges" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor">
      <topicdata group="api" />
      <apidata name="SecurityDescriptor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogConfiguration_SecurityDescriptor" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogException" />
      <apidata name="EventLogException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" ref="true" />
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" ref="true" />
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" ref="true" />
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogException" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogException">
      <topicdata name="EventLogException" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogException" />
      <apidata name="EventLogException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogException.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogException.Message" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventLogException" />
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogException">
      <topicdata name="EventLogException" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogException" />
      <apidata name="EventLogException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Methods_T_System_Diagnostics_Eventing_Reader_EventLogException" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogException">
      <topicdata name="EventLogException" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogException" />
      <apidata name="EventLogException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogException.Message" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventLogException" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogException_ctor" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogException_ctor" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
      <parameters>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogException_ctor_1_f9cace8a" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogException_ctor_2_4075724f" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogException_ctor_2_3ec47892" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="SerializationFormatter" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogException_GetObjectData_2_af75a6ab" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogException.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.Message">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.InteropServices._Exception.Message">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogException_Message" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogInformation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogInformation" />
      <apidata name="EventLogInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogInformation" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogInformation">
      <topicdata name="EventLogInformation" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogInformation" />
      <apidata name="EventLogInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.Attributes" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.CreationTime" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.FileSize" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.IsLogFull" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastAccessTime" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastWriteTime" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.OldestRecordNumber" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.RecordCount" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventLogInformation" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogInformation">
      <topicdata name="EventLogInformation" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogInformation" />
      <apidata name="EventLogInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.Attributes" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.CreationTime" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.FileSize" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.IsLogFull" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastAccessTime" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastWriteTime" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.OldestRecordNumber" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogInformation.RecordCount" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventLogInformation" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogInformation.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogInformation_Attributes" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogInformation.CreationTime">
      <topicdata group="api" />
      <apidata name="CreationTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogInformation_CreationTime" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogInformation.FileSize">
      <topicdata group="api" />
      <apidata name="FileSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogInformation_FileSize" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogInformation.IsLogFull">
      <topicdata group="api" />
      <apidata name="IsLogFull" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogInformation_IsLogFull" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastAccessTime">
      <topicdata group="api" />
      <apidata name="LastAccessTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogInformation_LastAccessTime" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastWriteTime">
      <topicdata group="api" />
      <apidata name="LastWriteTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogInformation_LastWriteTime" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogInformation.OldestRecordNumber">
      <topicdata group="api" />
      <apidata name="OldestRecordNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogInformation_OldestRecordNumber" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogInformation.RecordCount">
      <topicdata group="api" />
      <apidata name="RecordCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogInformation_RecordCount" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />
      <apidata name="EventLogInvalidDataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogInvalidDataException" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException">
      <topicdata name="EventLogInvalidDataException" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />
      <apidata name="EventLogInvalidDataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogException.Message" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventLogInvalidDataException" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogInvalidDataException_ctor" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogInvalidDataException_ctor" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogInvalidDataException_ctor_2_4075724f" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogInvalidDataException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogInvalidDataException_ctor_2_3ec47892" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogIsolation">
      <topicdata group="api" />
      <apidata name="EventLogIsolation" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Application" />
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.System" />
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Custom" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogIsolation" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Application">
      <topicdata group="api" notopic="" />
      <apidata name="Application" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_EventLogIsolation_Application" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Custom">
      <topicdata group="api" notopic="" />
      <apidata name="Custom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_EventLogIsolation_Custom" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.System">
      <topicdata group="api" notopic="" />
      <apidata name="System" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_EventLogIsolation_System" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogLink">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogLink" />
      <apidata name="EventLogLink" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogLink" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogLink">
      <topicdata name="EventLogLink" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogLink" />
      <apidata name="EventLogLink" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogLink.IsImported" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogLink.LogName" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventLogLink" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogLink">
      <topicdata name="EventLogLink" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogLink" />
      <apidata name="EventLogLink" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogLink.IsImported" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogLink.LogName" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventLogLink" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogLink" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogLink_DisplayName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogLink.IsImported">
      <topicdata group="api" />
      <apidata name="IsImported" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogLink" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogLink_IsImported" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogLink.LogName">
      <topicdata group="api" />
      <apidata name="LogName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogLink" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogLink_LogName" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogMode">
      <topicdata group="api" />
      <apidata name="EventLogMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogMode.Circular" />
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogMode.AutoBackup" />
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogMode.Retain" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogMode" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogMode.AutoBackup">
      <topicdata group="api" notopic="" />
      <apidata name="AutoBackup" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogMode" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_EventLogMode_AutoBackup" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogMode.Circular">
      <topicdata group="api" notopic="" />
      <apidata name="Circular" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogMode" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_EventLogMode_Circular" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogMode.Retain">
      <topicdata group="api" notopic="" />
      <apidata name="Retain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogMode" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_EventLogMode_Retain" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />
      <apidata name="EventLogNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogNotFoundException" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException">
      <topicdata name="EventLogNotFoundException" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />
      <apidata name="EventLogNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogException.Message" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventLogNotFoundException" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogNotFoundException_ctor" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogNotFoundException_ctor" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogNotFoundException_ctor_2_4075724f" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogNotFoundException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogNotFoundException_ctor_2_3ec47892" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" />
      <apidata name="EventLogPropertySelector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogPropertySelector" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector">
      <topicdata name="EventLogPropertySelector" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" />
      <apidata name="EventLogPropertySelector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventLogPropertySelector" />
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector">
      <topicdata name="EventLogPropertySelector" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" />
      <apidata name="EventLogPropertySelector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Methods_T_System_Diagnostics_Eventing_Reader_EventLogPropertySelector" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogPropertySelector_Dispose" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="propertyQueries">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogPropertySelector_ctor_1_da2b206c" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogPropertySelector_Dispose" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogPropertySelector_Dispose_1_36d384f7" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />
      <apidata name="EventLogProviderDisabledException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogProviderDisabledException" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException">
      <topicdata name="EventLogProviderDisabledException" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />
      <apidata name="EventLogProviderDisabledException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogException.Message" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventLogProviderDisabledException" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogProviderDisabledException_ctor" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogProviderDisabledException_ctor" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogProviderDisabledException_ctor_2_4075724f" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogProviderDisabledException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogProviderDisabledException_ctor_2_3ec47892" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogQuery">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogQuery" />
      <apidata name="EventLogQuery" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogQuery" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogQuery">
      <topicdata name="EventLogQuery" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />
      <apidata name="EventLogQuery" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)" />
        </element>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventLogQuery" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogQuery">
      <topicdata name="EventLogQuery" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />
      <apidata name="EventLogQuery" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventLogQuery" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogQuery" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogQuery_ctor" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathType">
          <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogQuery_ctor_2_7b2e36b2" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathType">
          <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
        </parameter>
        <parameter name="query">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogQuery_ctor_3_7554d9a8" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection">
      <topicdata group="api" />
      <apidata name="ReverseDirection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogQuery_ReverseDirection" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session">
      <topicdata group="api" />
      <apidata name="Session" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogQuery_Session" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors">
      <topicdata group="api" />
      <apidata name="TolerateQueryErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogQuery_TolerateQueryErrors" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogReader">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogReader" />
      <apidata name="EventLogReader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogReader" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogReader">
      <topicdata name="EventLogReader" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogReader" />
      <apidata name="EventLogReader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
        </element>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Seek">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventLogReader" />
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogReader">
      <topicdata name="EventLogReader" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogReader" />
      <apidata name="EventLogReader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Seek">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Methods_T_System_Diagnostics_Eventing_Reader_EventLogReader" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogReader">
      <topicdata name="EventLogReader" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogReader" />
      <apidata name="EventLogReader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventLogReader" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogReader" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogReader_ctor" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogReader" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogReader_Dispose" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
      <topicdata name="ReadEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogReader" />
      <apidata name="ReadEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogReader_ReadEvent" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Seek">
      <topicdata name="Seek" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogReader" />
      <apidata name="Seek" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogReader_Seek" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor" />
      <parameters>
        <parameter name="eventQuery">
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogReader_ctor_1_7abec485" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor" />
      <parameters>
        <parameter name="eventQuery">
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
        </parameter>
        <parameter name="bookmark">
          <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogReader_ctor_2_22351df0" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogReader_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathType">
          <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogReader_ctor_2_7b2e36b2" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize">
      <topicdata group="api" />
      <apidata name="BatchSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogReader_BatchSize" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading">
      <topicdata group="api" />
      <apidata name="CancelReading" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogReader_CancelReading" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogReader_Dispose" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogReader_Dispose_1_36d384f7" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus">
      <topicdata group="api" />
      <apidata name="LogStatus" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventLogStatus" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogReader_LogStatus" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
      <topicdata group="api" />
      <apidata name="ReadEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogReader_ReadEvent" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="ReadEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogReader_ReadEvent_1_dd1f561a" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)">
      <topicdata group="api" />
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Seek" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bookmark">
          <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogReader_Seek_1_96dc0e34" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)">
      <topicdata group="api" />
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Seek" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bookmark">
          <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogReader_Seek_2_e3f6083e" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)">
      <topicdata group="api" />
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReader.Seek" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="origin">
          <type api="T:System.IO.SeekOrigin" ref="false" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReader" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogReader_Seek_2_05d2f4cf" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogReadingException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />
      <apidata name="EventLogReadingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogReadingException" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogReadingException">
      <topicdata name="EventLogReadingException" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />
      <apidata name="EventLogReadingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogException.Message" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventLogReadingException" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogReadingException_ctor" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogReadingException_ctor" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor" />
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogReadingException_ctor_2_4075724f" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogReadingException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogReadingException_ctor_2_3ec47892" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogRecord">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogRecord" />
      <apidata name="EventLogRecord" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogRecord" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogRecord">
      <topicdata name="EventLogRecord" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogRecord" />
      <apidata name="EventLogRecord" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Id" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Level" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LogName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Properties" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Task" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.UserId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Version" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventLogRecord" />
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogRecord">
      <topicdata name="EventLogRecord" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogRecord" />
      <apidata name="EventLogRecord" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Methods_T_System_Diagnostics_Eventing_Reader_EventLogRecord" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogRecord">
      <topicdata name="EventLogRecord" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogRecord" />
      <apidata name="EventLogRecord" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Id" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Level" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LogName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Properties" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Task" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.UserId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Version" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventLogRecord" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogRecord" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogRecord_Dispose" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
      <topicdata name="FormatDescription" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogRecord" />
      <apidata name="FormatDescription" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogRecord_FormatDescription" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId">
      <topicdata group="api" />
      <apidata name="ActivityId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_ActivityId" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark">
      <topicdata group="api" />
      <apidata name="Bookmark" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_Bookmark" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog">
      <topicdata group="api" />
      <apidata name="ContainerLog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_ContainerLog" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogRecord_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
      <topicdata group="api" />
      <apidata name="FormatDescription" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogRecord_FormatDescription" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <topicdata group="api" />
      <apidata name="FormatDescription" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogRecord_FormatDescription_1_f6d570ce" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)">
      <topicdata group="api" />
      <apidata name="GetPropertyValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertySelector">
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogRecord_GetPropertyValues_1_87bd6924" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Id">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_Id" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords">
      <topicdata group="api" />
      <apidata name="Keywords" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_Keywords" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames">
      <topicdata group="api" />
      <apidata name="KeywordsDisplayNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_KeywordsDisplayNames" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Level">
      <topicdata group="api" />
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Level">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Byte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_Level" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName">
      <topicdata group="api" />
      <apidata name="LevelDisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_LevelDisplayName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LogName">
      <topicdata group="api" />
      <apidata name="LogName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_LogName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_MachineName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds">
      <topicdata group="api" />
      <apidata name="MatchedQueryIds" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_MatchedQueryIds" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode">
      <topicdata group="api" />
      <apidata name="Opcode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int16" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_Opcode" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName">
      <topicdata group="api" />
      <apidata name="OpcodeDisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_OpcodeDisplayName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId">
      <topicdata group="api" />
      <apidata name="ProcessId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_ProcessId" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventProperty" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_Properties" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId">
      <topicdata group="api" />
      <apidata name="ProviderId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_ProviderId" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName">
      <topicdata group="api" />
      <apidata name="ProviderName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_ProviderName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers">
      <topicdata group="api" />
      <apidata name="Qualifiers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_Qualifiers" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId">
      <topicdata group="api" />
      <apidata name="RecordId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_RecordId" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId">
      <topicdata group="api" />
      <apidata name="RelatedActivityId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_RelatedActivityId" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Task">
      <topicdata group="api" />
      <apidata name="Task" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Task">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_Task" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName">
      <topicdata group="api" />
      <apidata name="TaskDisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_TaskDisplayName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId">
      <topicdata group="api" />
      <apidata name="ThreadId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_ThreadId" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated">
      <topicdata group="api" />
      <apidata name="TimeCreated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_TimeCreated" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml">
      <topicdata group="api" />
      <apidata name="ToXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogRecord_ToXml" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.UserId">
      <topicdata group="api" />
      <apidata name="UserId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Principal.SecurityIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_UserId" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.Eventing.Reader.EventRecord.Version">
          <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Byte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogRecord_Version" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogSession">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogSession" />
      <apidata name="EventLogSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogSession" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogSession">
      <topicdata name="EventLogSession" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogSession" />
      <apidata name="EventLogSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventLogSession" />
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogSession">
      <topicdata name="EventLogSession" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogSession" />
      <apidata name="EventLogSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Methods_T_System_Diagnostics_Eventing_Reader_EventLogSession" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogSession">
      <topicdata name="EventLogSession" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogSession" />
      <apidata name="EventLogSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventLogSession" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogSession" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogSession_ctor" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog">
      <topicdata name="ClearLog" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogSession" />
      <apidata name="ClearLog" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogSession_ClearLog" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogSession" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogSession_Dispose" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog">
      <topicdata name="ExportLog" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogSession" />
      <apidata name="ExportLog" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogSession_ExportLog" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages">
      <topicdata name="ExportLogAndMessages" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogSession" />
      <apidata name="ExportLogAndMessages" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogSession_ExportLogAndMessages" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogSession_ctor" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor" />
      <parameters>
        <parameter name="server">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogSession_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor" />
      <parameters>
        <parameter name="server">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="domain">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="user">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.Security.SecureString" ref="true" />
        </parameter>
        <parameter name="logOnType">
          <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogSession_ctor_5_6b0da944" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations">
      <topicdata group="api" />
      <apidata name="CancelCurrentOperations" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogSession_CancelCurrentOperations" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)">
      <topicdata group="api" />
      <apidata name="ClearLog" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogSession_ClearLog_1_72eac341" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ClearLog" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="backupPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogSession_ClearLog_2_52fce4af" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogSession_Dispose" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogSession_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ExportLog" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathType">
          <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
        </parameter>
        <parameter name="query">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetFilePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogSession_ExportLog_4_8badecc4" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ExportLog" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathType">
          <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
        </parameter>
        <parameter name="query">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetFilePath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tolerateQueryErrors">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogSession_ExportLog_5_40c93c93" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ExportLogAndMessages" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathType">
          <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
        </parameter>
        <parameter name="query">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetFilePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogSession_ExportLogAndMessages_4_8badecc4" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="ExportLogAndMessages" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathType">
          <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
        </parameter>
        <parameter name="query">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetFilePath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tolerateQueryErrors">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="targetCultureInfo">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogSession_ExportLogAndMessages_6_c41e47b3" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <topicdata group="api" />
      <apidata name="GetLogInformation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathType">
          <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogSession_GetLogInformation_2_83dddb93" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames">
      <topicdata group="api" />
      <apidata name="GetLogNames" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogSession_GetLogNames" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames">
      <topicdata group="api" />
      <apidata name="GetProviderNames" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogSession_GetProviderNames" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession">
      <topicdata group="api" />
      <apidata name="GlobalSession" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogSession_GlobalSession" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogStatus">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogStatus" />
      <apidata name="EventLogStatus" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogStatus" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogStatus">
      <topicdata name="EventLogStatus" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogStatus" />
      <apidata name="EventLogStatus" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogStatus.LogName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventLogStatus" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogStatus">
      <topicdata name="EventLogStatus" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogStatus" />
      <apidata name="EventLogStatus" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogStatus.LogName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventLogStatus" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogStatus.LogName">
      <topicdata group="api" />
      <apidata name="LogName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogStatus" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogStatus_LogName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode">
      <topicdata group="api" />
      <apidata name="StatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogStatus" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogStatus_StatusCode" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogType">
      <topicdata group="api" />
      <apidata name="EventLogType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogType.Administrative" />
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogType.Operational" />
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogType.Analytical" />
        <element api="F:System.Diagnostics.Eventing.Reader.EventLogType.Debug" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogType" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogType.Administrative">
      <topicdata group="api" notopic="" />
      <apidata name="Administrative" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_EventLogType_Administrative" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogType.Analytical">
      <topicdata group="api" notopic="" />
      <apidata name="Analytical" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_EventLogType_Analytical" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogType.Debug">
      <topicdata group="api" notopic="" />
      <apidata name="Debug" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_EventLogType_Debug" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.EventLogType.Operational">
      <topicdata group="api" notopic="" />
      <apidata name="Operational" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_EventLogType_Operational" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />
      <apidata name="EventLogWatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventLogWatcher" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <topicdata name="EventLogWatcher" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />
      <apidata name="EventLogWatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled" />
        <element api="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventLogWatcher" />
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <topicdata name="EventLogWatcher" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />
      <apidata name="EventLogWatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Methods_T_System_Diagnostics_Eventing_Reader_EventLogWatcher" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <topicdata name="EventLogWatcher" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />
      <apidata name="EventLogWatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventLogWatcher" />
    </api>
    <api id="Events.T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <topicdata name="EventLogWatcher" group="list" subgroup="Events" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />
      <apidata name="EventLogWatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Events_T_System_Diagnostics_Eventing_Reader_EventLogWatcher" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogWatcher_ctor" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventLogWatcher_Dispose" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor" />
      <parameters>
        <parameter name="eventQuery">
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogWatcher_ctor_1_7abec485" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor" />
      <parameters>
        <parameter name="eventQuery">
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
        </parameter>
        <parameter name="bookmark">
          <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogWatcher_ctor_2_22351df0" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor" />
      <parameters>
        <parameter name="eventQuery">
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogQuery" ref="true" />
        </parameter>
        <parameter name="bookmark">
          <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
        </parameter>
        <parameter name="readExistingEvents">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogWatcher_ctor_3_213c31d8" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventLogWatcher_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogWatcher_Dispose" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventLogWatcher_Dispose_1_36d384f7" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventLogWatcher_Enabled" />
    </api>
    <api id="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten">
      <topicdata group="api" />
      <apidata name="EventRecordWritten" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" ref="true" />
      </containers>
      <file name="E_System_Diagnostics_Eventing_Reader_EventLogWatcher_EventRecordWritten" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventMetadata">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventMetadata" />
      <apidata name="EventMetadata" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventMetadata" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventMetadata">
      <topicdata name="EventMetadata" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventMetadata" />
      <apidata name="EventMetadata" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Description" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Id" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Keywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Level" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.LogLink" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Opcode" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Task" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Template" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Version" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventMetadata" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventMetadata">
      <topicdata name="EventMetadata" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventMetadata" />
      <apidata name="EventMetadata" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Description" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Id" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Keywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Level" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.LogLink" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Opcode" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Task" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Template" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventMetadata.Version" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventMetadata" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventMetadata_Description" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventMetadata_Id" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.Keywords">
      <topicdata group="api" />
      <apidata name="Keywords" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventKeyword" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventMetadata_Keywords" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.Level">
      <topicdata group="api" />
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLevel" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventMetadata_Level" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.LogLink">
      <topicdata group="api" />
      <apidata name="LogLink" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventLogLink" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventMetadata_LogLink" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.Opcode">
      <topicdata group="api" />
      <apidata name="Opcode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventOpcode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventMetadata_Opcode" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.Task">
      <topicdata group="api" />
      <apidata name="Task" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventTask" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventMetadata_Task" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.Template">
      <topicdata group="api" />
      <apidata name="Template" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventMetadata_Template" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventMetadata.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventMetadata_Version" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventOpcode">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventOpcode" />
      <apidata name="EventOpcode" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventOpcode" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventOpcode">
      <topicdata name="EventOpcode" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventOpcode" />
      <apidata name="EventOpcode" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventOpcode.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventOpcode.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventOpcode.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventOpcode" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventOpcode">
      <topicdata name="EventOpcode" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventOpcode" />
      <apidata name="EventOpcode" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventOpcode.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventOpcode.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventOpcode.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventOpcode" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventOpcode.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventOpcode" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventOpcode_DisplayName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventOpcode.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventOpcode" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventOpcode_Name" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventOpcode.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventOpcode" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventOpcode_Value" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventProperty">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventProperty" />
      <apidata name="EventProperty" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventProperty" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventProperty">
      <topicdata name="EventProperty" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventProperty" />
      <apidata name="EventProperty" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventProperty.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventProperty" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventProperty">
      <topicdata name="EventProperty" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventProperty" />
      <apidata name="EventProperty" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventProperty.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventProperty" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventProperty.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventProperty" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventProperty_Value" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventRecord">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventRecord" />
      <apidata name="EventRecord" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogRecord" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventRecord" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventRecord">
      <topicdata name="EventRecord" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventRecord" />
      <apidata name="EventRecord" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.#ctor" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})" />
        </element>
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Id" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Level" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Task" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Version" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventRecord" />
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.EventRecord">
      <topicdata name="EventRecord" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventRecord" />
      <apidata name="EventRecord" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription" />
          <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})" />
        </element>
        <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Methods_T_System_Diagnostics_Eventing_Reader_EventRecord" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventRecord">
      <topicdata name="EventRecord" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventRecord" />
      <apidata name="EventRecord" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Id" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Level" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Task" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecord.Version" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventRecord" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventRecord" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventRecord_Dispose" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
      <topicdata name="FormatDescription" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventRecord" />
      <apidata name="FormatDescription" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription" />
        <element api="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_EventRecord_FormatDescription" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventRecord.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_EventRecord_ctor" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId">
      <topicdata group="api" />
      <apidata name="ActivityId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_ActivityId" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark">
      <topicdata group="api" />
      <apidata name="Bookmark" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventBookmark" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_Bookmark" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventRecord.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventRecord_Dispose" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.Reader.EventRecord.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventRecord_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
      <topicdata group="api" />
      <apidata name="FormatDescription" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventRecord_FormatDescription" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <topicdata group="api" />
      <apidata name="FormatDescription" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventRecord_FormatDescription_1_f6d570ce" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_Id" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords">
      <topicdata group="api" />
      <apidata name="Keywords" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_Keywords" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames">
      <topicdata group="api" />
      <apidata name="KeywordsDisplayNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_KeywordsDisplayNames" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Level">
      <topicdata group="api" />
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Byte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_Level" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName">
      <topicdata group="api" />
      <apidata name="LevelDisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_LevelDisplayName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName">
      <topicdata group="api" />
      <apidata name="LogName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_LogName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_MachineName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode">
      <topicdata group="api" />
      <apidata name="Opcode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int16" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_Opcode" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName">
      <topicdata group="api" />
      <apidata name="OpcodeDisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_OpcodeDisplayName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId">
      <topicdata group="api" />
      <apidata name="ProcessId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_ProcessId" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventProperty" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_Properties" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId">
      <topicdata group="api" />
      <apidata name="ProviderId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_ProviderId" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName">
      <topicdata group="api" />
      <apidata name="ProviderName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_ProviderName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers">
      <topicdata group="api" />
      <apidata name="Qualifiers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_Qualifiers" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId">
      <topicdata group="api" />
      <apidata name="RecordId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_RecordId" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId">
      <topicdata group="api" />
      <apidata name="RelatedActivityId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_RelatedActivityId" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Task">
      <topicdata group="api" />
      <apidata name="Task" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_Task" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName">
      <topicdata group="api" />
      <apidata name="TaskDisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_TaskDisplayName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId">
      <topicdata group="api" />
      <apidata name="ThreadId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_ThreadId" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated">
      <topicdata group="api" />
      <apidata name="TimeCreated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_TimeCreated" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml">
      <topicdata group="api" />
      <apidata name="ToXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_EventRecord_ToXml" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId">
      <topicdata group="api" />
      <apidata name="UserId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Principal.SecurityIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_UserId" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecord.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Byte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecord_Version" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" />
      <apidata name="EventRecordWrittenEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventRecordWrittenEventArgs" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
      <topicdata name="EventRecordWrittenEventArgs" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" />
      <apidata name="EventRecordWrittenEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventRecordWrittenEventArgs" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
      <topicdata name="EventRecordWrittenEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" />
      <apidata name="EventRecordWrittenEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventRecordWrittenEventArgs" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException">
      <topicdata group="api" />
      <apidata name="EventException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecordWrittenEventArgs_EventException" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord">
      <topicdata group="api" />
      <apidata name="EventRecord" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecord" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventRecordWrittenEventArgs_EventRecord" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.EventTask">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.EventTask" />
      <apidata name="EventTask" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_EventTask" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.EventTask">
      <topicdata name="EventTask" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventTask" />
      <apidata name="EventTask" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventTask.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventTask.EventGuid" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventTask.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventTask.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_EventTask" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.EventTask">
      <topicdata name="EventTask" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.EventTask" />
      <apidata name="EventTask" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.EventTask.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventTask.EventGuid" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventTask.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.EventTask.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_EventTask" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventTask.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventTask" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventTask_DisplayName" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventTask.EventGuid">
      <topicdata group="api" />
      <apidata name="EventGuid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventTask" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventTask_EventGuid" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventTask.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventTask" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventTask_Name" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.EventTask.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.EventTask" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_EventTask_Value" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.PathType">
      <topicdata group="api" />
      <apidata name="PathType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.PathType.LogName" />
        <element api="F:System.Diagnostics.Eventing.Reader.PathType.FilePath" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="T_System_Diagnostics_Eventing_Reader_PathType" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.PathType.FilePath">
      <topicdata group="api" notopic="" />
      <apidata name="FilePath" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_PathType_FilePath" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.PathType.LogName">
      <topicdata group="api" notopic="" />
      <apidata name="LogName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.PathType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_PathType_LogName" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.ProviderMetadata">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />
      <apidata name="ProviderMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_ProviderMetadata" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.Eventing.Reader.ProviderMetadata">
      <topicdata name="ProviderMetadata" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />
      <apidata name="ProviderMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor">
          <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String)" />
          <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)" />
        </element>
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Events" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Id" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_Eventing_Reader_ProviderMetadata" />
    </api>
    <api id="Methods.T:System.Diagnostics.Eventing.Reader.ProviderMetadata">
      <topicdata name="ProviderMetadata" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />
      <apidata name="ProviderMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
          <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose" />
          <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Methods_T_System_Diagnostics_Eventing_Reader_ProviderMetadata" />
    </api>
    <api id="Properties.T:System.Diagnostics.Eventing.Reader.ProviderMetadata">
      <topicdata name="ProviderMetadata" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />
      <apidata name="ProviderMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Events" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Id" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Name" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath" />
        <element api="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="Properties_T_System_Diagnostics_Eventing_Reader_ProviderMetadata" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String)" />
        <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_ProviderMetadata_ctor" />
    </api>
    <api id="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose" />
        <element api="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_Eventing_Reader_ProviderMetadata_Dispose" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor" />
      <parameters>
        <parameter name="providerName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_ProviderMetadata_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor" />
      <parameters>
        <parameter name="providerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="session">
          <type api="T:System.Diagnostics.Eventing.Reader.EventLogSession" ref="true" />
        </parameter>
        <parameter name="targetCultureInfo">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_Eventing_Reader_ProviderMetadata_ctor_3_626a6ca0" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_ProviderMetadata_DisplayName" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_ProviderMetadata_Dispose" />
    </api>
    <api id="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_Eventing_Reader_ProviderMetadata_Dispose_1_36d384f7" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Events">
      <topicdata group="api" />
      <apidata name="Events" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventMetadata" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_ProviderMetadata_Events" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink">
      <topicdata group="api" />
      <apidata name="HelpLink" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_ProviderMetadata_HelpLink" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_ProviderMetadata_Id" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords">
      <topicdata group="api" />
      <apidata name="Keywords" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventKeyword" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_ProviderMetadata_Keywords" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels">
      <topicdata group="api" />
      <apidata name="Levels" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventLevel" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_ProviderMetadata_Levels" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks">
      <topicdata group="api" />
      <apidata name="LogLinks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventLogLink" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_ProviderMetadata_LogLinks" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath">
      <topicdata group="api" />
      <apidata name="MessageFilePath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_ProviderMetadata_MessageFilePath" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_ProviderMetadata_Name" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes">
      <topicdata group="api" />
      <apidata name="Opcodes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventOpcode" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_ProviderMetadata_Opcodes" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath">
      <topicdata group="api" />
      <apidata name="ParameterFilePath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_ProviderMetadata_ParameterFilePath" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath">
      <topicdata group="api" />
      <apidata name="ResourceFilePath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_ProviderMetadata_ResourceFilePath" />
    </api>
    <api id="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks">
      <topicdata group="api" />
      <apidata name="Tasks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.Eventing.Reader.EventTask" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_Eventing_Reader_ProviderMetadata_Tasks" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.SessionAuthentication">
      <topicdata group="api" />
      <apidata name="SessionAuthentication" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Default" />
        <element api="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Negotiate" />
        <element api="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Kerberos" />
        <element api="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Ntlm" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="T_System_Diagnostics_Eventing_Reader_SessionAuthentication" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_SessionAuthentication_Default" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Kerberos">
      <topicdata group="api" notopic="" />
      <apidata name="Kerberos" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_SessionAuthentication_Kerberos" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Negotiate">
      <topicdata group="api" notopic="" />
      <apidata name="Negotiate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_SessionAuthentication_Negotiate" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Ntlm">
      <topicdata group="api" notopic="" />
      <apidata name="Ntlm" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.SessionAuthentication" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_SessionAuthentication_Ntlm" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords">
      <topicdata group="api" />
      <apidata name="StandardEventKeywords" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int64" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.None" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiContext" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiDiagnostic" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.Sqm" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditFailure" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditSuccess" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.EventLogClassic" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_Eventing_Reader_StandardEventKeywords" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditFailure">
      <topicdata group="api" notopic="" />
      <apidata name="AuditFailure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>4503599627370496</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventKeywords_AuditFailure" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditSuccess">
      <topicdata group="api" notopic="" />
      <apidata name="AuditSuccess" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>9007199254740992</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventKeywords_AuditSuccess" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint">
      <topicdata group="api" notopic="" />
      <apidata name="CorrelationHint" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>4503599627370496</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventKeywords_CorrelationHint" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.EventLogClassic">
      <topicdata group="api" notopic="" />
      <apidata name="EventLogClassic" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>36028797018963968</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventKeywords_EventLogClassic" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventKeywords_None" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.Sqm">
      <topicdata group="api" notopic="" />
      <apidata name="Sqm" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>2251799813685248</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventKeywords_Sqm" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiContext">
      <topicdata group="api" notopic="" />
      <apidata name="WdiContext" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>562949953421312</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventKeywords_WdiContext" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiDiagnostic">
      <topicdata group="api" notopic="" />
      <apidata name="WdiDiagnostic" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </returns>
      <value>1125899906842624</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventKeywords_WdiDiagnostic" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.StandardEventLevel">
      <topicdata group="api" />
      <apidata name="StandardEventLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.LogAlways" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Critical" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Error" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Warning" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Informational" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Verbose" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="T_System_Diagnostics_Eventing_Reader_StandardEventLevel" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Critical">
      <topicdata group="api" notopic="" />
      <apidata name="Critical" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventLevel_Critical" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventLevel_Error" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Informational">
      <topicdata group="api" notopic="" />
      <apidata name="Informational" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventLevel_Informational" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.LogAlways">
      <topicdata group="api" notopic="" />
      <apidata name="LogAlways" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventLevel_LogAlways" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Verbose">
      <topicdata group="api" notopic="" />
      <apidata name="Verbose" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventLevel_Verbose" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Warning">
      <topicdata group="api" notopic="" />
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventLevel" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventLevel_Warning" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode">
      <topicdata group="api" />
      <apidata name="StandardEventOpcode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Info" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Start" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Stop" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStart" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStop" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Extension" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Reply" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Resume" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Suspend" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Send" />
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Receive" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="T_System_Diagnostics_Eventing_Reader_StandardEventOpcode" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStart">
      <topicdata group="api" notopic="" />
      <apidata name="DataCollectionStart" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventOpcode_DataCollectionStart" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStop">
      <topicdata group="api" notopic="" />
      <apidata name="DataCollectionStop" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventOpcode_DataCollectionStop" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Extension">
      <topicdata group="api" notopic="" />
      <apidata name="Extension" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventOpcode_Extension" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Info">
      <topicdata group="api" notopic="" />
      <apidata name="Info" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventOpcode_Info" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Receive">
      <topicdata group="api" notopic="" />
      <apidata name="Receive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>240</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventOpcode_Receive" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Reply">
      <topicdata group="api" notopic="" />
      <apidata name="Reply" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventOpcode_Reply" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Resume">
      <topicdata group="api" notopic="" />
      <apidata name="Resume" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventOpcode_Resume" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Send">
      <topicdata group="api" notopic="" />
      <apidata name="Send" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventOpcode_Send" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Start">
      <topicdata group="api" notopic="" />
      <apidata name="Start" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventOpcode_Start" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Stop">
      <topicdata group="api" notopic="" />
      <apidata name="Stop" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventOpcode_Stop" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Suspend">
      <topicdata group="api" notopic="" />
      <apidata name="Suspend" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventOpcode_Suspend" />
    </api>
    <api id="T:System.Diagnostics.Eventing.Reader.StandardEventTask">
      <topicdata group="api" />
      <apidata name="StandardEventTask" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Diagnostics.Eventing.Reader.StandardEventTask.None" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
      </containers>
      <file name="T_System_Diagnostics_Eventing_Reader_StandardEventTask" />
    </api>
    <api id="F:System.Diagnostics.Eventing.Reader.StandardEventTask.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventTask" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.Eventing.Reader" />
        <type api="T:System.Diagnostics.Eventing.Reader.StandardEventTask" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_Eventing_Reader_StandardEventTask_None" />
    </api>
    <api id="T:System.Diagnostics.PerformanceData.CounterData">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.PerformanceData.CounterData" />
      <apidata name="CounterData" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_PerformanceData_CounterData" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.PerformanceData.CounterData">
      <topicdata name="CounterData" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.PerformanceData.CounterData" />
      <apidata name="CounterData" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.PerformanceData.CounterData.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_PerformanceData_CounterData" />
    </api>
    <api id="Properties.T:System.Diagnostics.PerformanceData.CounterData">
      <topicdata name="CounterData" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.PerformanceData.CounterData" />
      <apidata name="CounterData" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.PerformanceData.CounterData.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
      </containers>
      <file name="Properties_T_System_Diagnostics_PerformanceData_CounterData" />
    </api>
    <api id="P:System.Diagnostics.PerformanceData.CounterData.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterData" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_PerformanceData_CounterData_Value" />
    </api>
    <api id="T:System.Diagnostics.PerformanceData.CounterSet">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.PerformanceData.CounterSet" />
      <apidata name="CounterSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_PerformanceData_CounterSet" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.PerformanceData.CounterSet">
      <topicdata name="CounterSet" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.PerformanceData.CounterSet" />
      <apidata name="CounterSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)" />
        <element api="Overload:System.Diagnostics.PerformanceData.CounterSet.AddCounter">
          <element api="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)" />
          <element api="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)" />
        </element>
        <element api="M:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)" />
        <element api="Overload:System.Diagnostics.PerformanceData.CounterSet.Dispose">
          <element api="M:System.Diagnostics.PerformanceData.CounterSet.Dispose" />
          <element api="M:System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.PerformanceData.CounterSet.Finalize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_PerformanceData_CounterSet" />
    </api>
    <api id="Methods.T:System.Diagnostics.PerformanceData.CounterSet">
      <topicdata name="CounterSet" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.PerformanceData.CounterSet" />
      <apidata name="CounterSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Diagnostics.PerformanceData.CounterSet.AddCounter">
          <element api="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)" />
          <element api="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)" />
        </element>
        <element api="M:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)" />
        <element api="Overload:System.Diagnostics.PerformanceData.CounterSet.Dispose">
          <element api="M:System.Diagnostics.PerformanceData.CounterSet.Dispose" />
          <element api="M:System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.PerformanceData.CounterSet.Finalize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
      </containers>
      <file name="Methods_T_System_Diagnostics_PerformanceData_CounterSet" />
    </api>
    <api id="Overload:System.Diagnostics.PerformanceData.CounterSet.AddCounter">
      <topicdata name="AddCounter" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.PerformanceData.CounterSet" />
      <apidata name="AddCounter" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)" />
        <element api="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSet" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_PerformanceData_CounterSet_AddCounter" />
    </api>
    <api id="Overload:System.Diagnostics.PerformanceData.CounterSet.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.PerformanceData.CounterSet" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.PerformanceData.CounterSet.Dispose" />
        <element api="M:System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSet" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_PerformanceData_CounterSet_Dispose" />
    </api>
    <api id="M:System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="providerGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="counterSetGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="instanceType">
          <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSet" ref="true" />
      </containers>
      <file name="C_System_Diagnostics_PerformanceData_CounterSet_ctor_3_5ac4f808" />
    </api>
    <api id="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)">
      <topicdata group="api" />
      <apidata name="AddCounter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.PerformanceData.CounterSet.AddCounter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="counterId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="counterType">
          <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSet" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_PerformanceData_CounterSet_AddCounter_2_fb1ab730" />
    </api>
    <api id="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)">
      <topicdata group="api" />
      <apidata name="AddCounter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.PerformanceData.CounterSet.AddCounter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="counterId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="counterType">
          <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
        </parameter>
        <parameter name="counterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSet" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_PerformanceData_CounterSet_AddCounter_3_9be5d416" />
    </api>
    <api id="M:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)">
      <topicdata group="api" />
      <apidata name="CreateCounterSetInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.PermissionSetAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Diagnostics_PerformanceData_CounterSet_CreateCounterSetInstance_1_72eac341" />
    </api>
    <api id="M:System.Diagnostics.PerformanceData.CounterSet.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.PerformanceData.CounterSet.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSet" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_PerformanceData_CounterSet_Dispose" />
    </api>
    <api id="M:System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.PerformanceData.CounterSet.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSet" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_PerformanceData_CounterSet_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.Diagnostics.PerformanceData.CounterSet.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSet" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_PerformanceData_CounterSet_Finalize" />
    </api>
    <api id="T:System.Diagnostics.PerformanceData.CounterSetInstance">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.PerformanceData.CounterSetInstance" />
      <apidata name="CounterSetInstance" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_PerformanceData_CounterSetInstance" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.PerformanceData.CounterSetInstance">
      <topicdata name="CounterSetInstance" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.PerformanceData.CounterSetInstance" />
      <apidata name="CounterSetInstance" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.PerformanceData.CounterSetInstance.Counters" />
        <element api="M:System.Diagnostics.PerformanceData.CounterSetInstance.Dispose" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_PerformanceData_CounterSetInstance" />
    </api>
    <api id="Methods.T:System.Diagnostics.PerformanceData.CounterSetInstance">
      <topicdata name="CounterSetInstance" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.PerformanceData.CounterSetInstance" />
      <apidata name="CounterSetInstance" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Diagnostics.PerformanceData.CounterSetInstance.Dispose" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
      </containers>
      <file name="Methods_T_System_Diagnostics_PerformanceData_CounterSetInstance" />
    </api>
    <api id="Properties.T:System.Diagnostics.PerformanceData.CounterSetInstance">
      <topicdata name="CounterSetInstance" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.PerformanceData.CounterSetInstance" />
      <apidata name="CounterSetInstance" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Diagnostics.PerformanceData.CounterSetInstance.Counters" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
      </containers>
      <file name="Properties_T_System_Diagnostics_PerformanceData_CounterSetInstance" />
    </api>
    <api id="P:System.Diagnostics.PerformanceData.CounterSetInstance.Counters">
      <topicdata group="api" />
      <apidata name="Counters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstance" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_PerformanceData_CounterSetInstance_Counters" />
    </api>
    <api id="M:System.Diagnostics.PerformanceData.CounterSetInstance.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstance" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_PerformanceData_CounterSetInstance_Dispose" />
    </api>
    <api id="T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet" />
      <apidata name="CounterSetInstanceCounterDataSet" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Diagnostics_PerformanceData_CounterSetInstanceCounterDataSet" />
    </api>
    <api id="AllMembers.T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet">
      <topicdata name="CounterSetInstanceCounterDataSet" group="list" subgroup="members" typeTopicId="T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet" />
      <apidata name="CounterSetInstanceCounterDataSet" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Dispose" />
        <element api="Overload:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item">
          <element api="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.Int32)" />
          <element api="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
      </containers>
      <file name="AllMembers_T_System_Diagnostics_PerformanceData_CounterSetInstanceCounterDataSet" />
    </api>
    <api id="Methods.T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet">
      <topicdata name="CounterSetInstanceCounterDataSet" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet" />
      <apidata name="CounterSetInstanceCounterDataSet" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Dispose" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
      </containers>
      <file name="Methods_T_System_Diagnostics_PerformanceData_CounterSetInstanceCounterDataSet" />
    </api>
    <api id="Properties.T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet">
      <topicdata name="CounterSetInstanceCounterDataSet" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet" />
      <apidata name="CounterSetInstanceCounterDataSet" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item">
          <element api="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.Int32)" />
          <element api="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
      </containers>
      <file name="Properties_T_System_Diagnostics_PerformanceData_CounterSetInstanceCounterDataSet" />
    </api>
    <api id="Overload:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.Int32)" />
        <element api="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet" ref="true" />
      </containers>
      <file name="O_T_System_Diagnostics_PerformanceData_CounterSetInstanceCounterDataSet_Item" />
    </api>
    <api id="M:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet" ref="true" />
      </containers>
      <file name="M_System_Diagnostics_PerformanceData_CounterSetInstanceCounterDataSet_Dispose" />
    </api>
    <api id="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="counterId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterData" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_PerformanceData_CounterSetInstanceCounterDataSet_Item_1_cd2d7ec9" />
    </api>
    <api id="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="counterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterData" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet" ref="true" />
      </containers>
      <file name="P_System_Diagnostics_PerformanceData_CounterSetInstanceCounterDataSet_Item_1_72eac341" />
    </api>
    <api id="T:System.Diagnostics.PerformanceData.CounterSetInstanceType">
      <topicdata group="api" />
      <apidata name="CounterSetInstanceType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Single" />
        <element api="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple" />
        <element api="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate" />
        <element api="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregateWithHistory" />
        <element api="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate" />
        <element api="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
      </containers>
      <file name="T_System_Diagnostics_PerformanceData_CounterSetInstanceType" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate">
      <topicdata group="api" notopic="" />
      <apidata name="GlobalAggregate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterSetInstanceType_GlobalAggregate" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregateWithHistory">
      <topicdata group="api" notopic="" />
      <apidata name="GlobalAggregateWithHistory" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceType" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterSetInstanceType_GlobalAggregateWithHistory" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate">
      <topicdata group="api" notopic="" />
      <apidata name="InstanceAggregate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceType" ref="false" />
      </returns>
      <value>22</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterSetInstanceType_InstanceAggregate" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple">
      <topicdata group="api" notopic="" />
      <apidata name="Multiple" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterSetInstanceType_Multiple" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate">
      <topicdata group="api" notopic="" />
      <apidata name="MultipleAggregate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterSetInstanceType_MultipleAggregate" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Single">
      <topicdata group="api" notopic="" />
      <apidata name="Single" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterSetInstanceType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterSetInstanceType_Single" />
    </api>
    <api id="T:System.Diagnostics.PerformanceData.CounterType">
      <topicdata group="api" />
      <apidata name="CounterType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Diagnostics.PerformanceData.CounterType.QueueLength" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.LargeQueueLength" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.QueueLength100Ns" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.QueueLengthObjectTime" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.RawData32" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.RawData64" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex64" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond64" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.RawFraction64" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.RawBase32" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.RawBase64" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.SampleFraction" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.SampleCounter" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.SampleBase" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.AverageBase" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.AverageCount64" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive100Ns" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.ElapsedTime" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerBase" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.Delta32" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.Delta64" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.ObjectSpecificTimer" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.PrecisionSystemTimer" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.PrecisionTimer100Ns" />
        <element api="F:System.Diagnostics.PerformanceData.CounterType.PrecisionObjectSpecificTimer" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
      </containers>
      <file name="T_System_Diagnostics_PerformanceData_CounterType" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.AverageBase">
      <topicdata group="api" notopic="" />
      <apidata name="AverageBase" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>1073939458</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_AverageBase" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.AverageCount64">
      <topicdata group="api" notopic="" />
      <apidata name="AverageCount64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>1073874176</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_AverageCount64" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32">
      <topicdata group="api" notopic="" />
      <apidata name="AverageTimer32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>805438464</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_AverageTimer32" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.Delta32">
      <topicdata group="api" notopic="" />
      <apidata name="Delta32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>4195328</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_Delta32" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.Delta64">
      <topicdata group="api" notopic="" />
      <apidata name="Delta64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>4195584</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_Delta64" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.ElapsedTime">
      <topicdata group="api" notopic="" />
      <apidata name="ElapsedTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>807666944</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_ElapsedTime" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.LargeQueueLength">
      <topicdata group="api" notopic="" />
      <apidata name="LargeQueueLength" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>4523264</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_LargeQueueLength" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerBase">
      <topicdata group="api" notopic="" />
      <apidata name="MultiTimerBase" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>1107494144</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_MultiTimerBase" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive">
      <topicdata group="api" notopic="" />
      <apidata name="MultiTimerPercentageActive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>574686464</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_MultiTimerPercentageActive" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns">
      <topicdata group="api" notopic="" />
      <apidata name="MultiTimerPercentageActive100Ns" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>575735040</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_MultiTimerPercentageActive100Ns" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive">
      <topicdata group="api" notopic="" />
      <apidata name="MultiTimerPercentageNotActive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>591463680</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_MultiTimerPercentageNotActive" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns">
      <topicdata group="api" notopic="" />
      <apidata name="MultiTimerPercentageNotActive100Ns" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>592512256</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_MultiTimerPercentageNotActive100Ns" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.ObjectSpecificTimer">
      <topicdata group="api" notopic="" />
      <apidata name="ObjectSpecificTimer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>543229184</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_ObjectSpecificTimer" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive">
      <topicdata group="api" notopic="" />
      <apidata name="PercentageActive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>541132032</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_PercentageActive" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive100Ns">
      <topicdata group="api" notopic="" />
      <apidata name="PercentageActive100Ns" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>542180608</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_PercentageActive100Ns" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive">
      <topicdata group="api" notopic="" />
      <apidata name="PercentageNotActive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>557909248</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_PercentageNotActive" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns">
      <topicdata group="api" notopic="" />
      <apidata name="PercentageNotActive100Ns" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>558957824</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_PercentageNotActive100Ns" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.PrecisionObjectSpecificTimer">
      <topicdata group="api" notopic="" />
      <apidata name="PrecisionObjectSpecificTimer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>543622400</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_PrecisionObjectSpecificTimer" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.PrecisionSystemTimer">
      <topicdata group="api" notopic="" />
      <apidata name="PrecisionSystemTimer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>541525248</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_PrecisionSystemTimer" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.PrecisionTimer100Ns">
      <topicdata group="api" notopic="" />
      <apidata name="PrecisionTimer100Ns" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>542573824</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_PrecisionTimer100Ns" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.QueueLength">
      <topicdata group="api" notopic="" />
      <apidata name="QueueLength" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>4523008</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_QueueLength" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.QueueLength100Ns">
      <topicdata group="api" notopic="" />
      <apidata name="QueueLength100Ns" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>5571840</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_QueueLength100Ns" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.QueueLengthObjectTime">
      <topicdata group="api" notopic="" />
      <apidata name="QueueLengthObjectTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>6620416</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_QueueLengthObjectTime" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32">
      <topicdata group="api" notopic="" />
      <apidata name="RateOfCountPerSecond32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>272696320</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_RateOfCountPerSecond32" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond64">
      <topicdata group="api" notopic="" />
      <apidata name="RateOfCountPerSecond64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>272696576</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_RateOfCountPerSecond64" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.RawBase32">
      <topicdata group="api" notopic="" />
      <apidata name="RawBase32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>1073939459</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_RawBase32" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.RawBase64">
      <topicdata group="api" notopic="" />
      <apidata name="RawBase64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>1073939712</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_RawBase64" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.RawData32">
      <topicdata group="api" notopic="" />
      <apidata name="RawData32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>65536</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_RawData32" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.RawData64">
      <topicdata group="api" notopic="" />
      <apidata name="RawData64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>65792</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_RawData64" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32">
      <topicdata group="api" notopic="" />
      <apidata name="RawDataHex32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_RawDataHex32" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex64">
      <topicdata group="api" notopic="" />
      <apidata name="RawDataHex64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_RawDataHex64" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32">
      <topicdata group="api" notopic="" />
      <apidata name="RawFraction32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>537003008</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_RawFraction32" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.RawFraction64">
      <topicdata group="api" notopic="" />
      <apidata name="RawFraction64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>537003264</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_RawFraction64" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.SampleBase">
      <topicdata group="api" notopic="" />
      <apidata name="SampleBase" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>1073939457</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_SampleBase" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.SampleCounter">
      <topicdata group="api" notopic="" />
      <apidata name="SampleCounter" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>4260864</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_SampleCounter" />
    </api>
    <api id="F:System.Diagnostics.PerformanceData.CounterType.SampleFraction">
      <topicdata group="api" notopic="" />
      <apidata name="SampleFraction" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </returns>
      <value>549585920</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Diagnostics.PerformanceData" />
        <type api="T:System.Diagnostics.PerformanceData.CounterType" ref="false" />
      </containers>
      <file name="F_System_Diagnostics_PerformanceData_CounterType_SampleFraction" />
    </api>
    <api id="T:System.IO.HandleInheritability">
      <topicdata group="api" />
      <apidata name="HandleInheritability" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.IO.HandleInheritability.None" />
        <element api="F:System.IO.HandleInheritability.Inheritable" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO" />
      </containers>
      <file name="T_System_IO_HandleInheritability" />
    </api>
    <api id="F:System.IO.HandleInheritability.Inheritable">
      <topicdata group="api" notopic="" />
      <apidata name="Inheritable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.HandleInheritability" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO" />
        <type api="T:System.IO.HandleInheritability" ref="false" />
      </containers>
      <file name="F_System_IO_HandleInheritability_Inheritable" />
    </api>
    <api id="F:System.IO.HandleInheritability.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.HandleInheritability" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO" />
        <type api="T:System.IO.HandleInheritability" ref="false" />
      </containers>
      <file name="F_System_IO_HandleInheritability_None" />
    </api>
    <api id="T:System.IO.Pipes.AnonymousPipeClientStream">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Pipes.AnonymousPipeClientStream" />
      <apidata name="AnonymousPipeClientStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IO.Pipes.PipeStream" ref="true" />
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_IO_Pipes_AnonymousPipeClientStream" />
    </api>
    <api id="AllMembers.T:System.IO.Pipes.AnonymousPipeClientStream">
      <topicdata name="AnonymousPipeClientStream" group="list" subgroup="members" typeTopicId="T:System.IO.Pipes.AnonymousPipeClientStream" />
      <apidata name="AnonymousPipeClientStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.IO.Pipes.AnonymousPipeClientStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="M:System.IO.Stream.Close" />
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.IO.Pipes.AnonymousPipeClientStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
        <element api="Overload:System.IO.Pipes.AnonymousPipeClientStream.#ctor">
          <element api="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)" />
          <element api="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
          <element api="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)" />
        </element>
        <element api="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode" />
        <element api="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode" />
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckReadOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckWriteOperations" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsHandleExposed" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="AllMembers_T_System_IO_Pipes_AnonymousPipeClientStream" />
    </api>
    <api id="Properties.T:System.IO.Pipes.AnonymousPipeClientStream">
      <topicdata name="AnonymousPipeClientStream" group="list" subgroup="Properties" typeTopicId="T:System.IO.Pipes.AnonymousPipeClientStream" />
      <apidata name="AnonymousPipeClientStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
        <element api="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode" />
        <element api="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsHandleExposed" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="Properties_T_System_IO_Pipes_AnonymousPipeClientStream" />
    </api>
    <api id="Overload:System.IO.Pipes.AnonymousPipeClientStream.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.AnonymousPipeClientStream" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" />
      </containers>
      <file name="O_T_System_IO_Pipes_AnonymousPipeClientStream_MemberwiseClone" />
    </api>
    <api id="Overload:System.IO.Pipes.AnonymousPipeClientStream.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.AnonymousPipeClientStream" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" />
      </containers>
      <file name="O_T_System_IO_Pipes_AnonymousPipeClientStream_Dispose" />
    </api>
    <api id="Overload:System.IO.Pipes.AnonymousPipeClientStream.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.AnonymousPipeClientStream" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)" />
        <element api="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
        <element api="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_AnonymousPipeClientStream_ctor" />
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeClientStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="safePipeHandle">
          <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_AnonymousPipeClientStream_ctor_2_3b18c035" />
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeClientStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="pipeHandleAsString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_AnonymousPipeClientStream_ctor_2_0cfdad8b" />
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeClientStream.#ctor" />
      <parameters>
        <parameter name="pipeHandleAsString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_AnonymousPipeClientStream_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
      <topicdata group="api" />
      <apidata name="ReadMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Pipes.PipeStream.ReadMode">
          <type api="T:System.IO.Pipes.PipeStream" ref="true" />
        </member>
      </overrides>
      <propertydata set="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_AnonymousPipeClientStream_ReadMode" />
    </api>
    <api id="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
      <topicdata group="api" />
      <apidata name="TransmissionMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Pipes.PipeStream.TransmissionMode">
          <type api="T:System.IO.Pipes.PipeStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_AnonymousPipeClientStream_TransmissionMode" />
    </api>
    <api id="T:System.IO.Pipes.AnonymousPipeServerStream">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Pipes.AnonymousPipeServerStream" />
      <apidata name="AnonymousPipeServerStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IO.Pipes.PipeStream" ref="true" />
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_IO_Pipes_AnonymousPipeServerStream" />
    </api>
    <api id="AllMembers.T:System.IO.Pipes.AnonymousPipeServerStream">
      <topicdata name="AnonymousPipeServerStream" group="list" subgroup="members" typeTopicId="T:System.IO.Pipes.AnonymousPipeServerStream" />
      <apidata name="AnonymousPipeServerStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.IO.Pipes.AnonymousPipeServerStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="M:System.IO.Stream.Close" />
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.IO.Pipes.AnonymousPipeServerStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
        <element api="Overload:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
          <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
          <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)" />
          <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)" />
          <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
          <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)" />
          <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)" />
        </element>
        <element api="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString" />
        <element api="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode" />
        <element api="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode" />
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckReadOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckWriteOperations" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsHandleExposed" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="AllMembers_T_System_IO_Pipes_AnonymousPipeServerStream" />
    </api>
    <api id="Methods.T:System.IO.Pipes.AnonymousPipeServerStream">
      <topicdata name="AnonymousPipeServerStream" group="list" subgroup="Methods" typeTopicId="T:System.IO.Pipes.AnonymousPipeServerStream" />
      <apidata name="AnonymousPipeServerStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.IO.Pipes.AnonymousPipeServerStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Stream.Close" />
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.IO.Pipes.AnonymousPipeServerStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString" />
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckReadOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckWriteOperations" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="Methods_T_System_IO_Pipes_AnonymousPipeServerStream" />
    </api>
    <api id="Properties.T:System.IO.Pipes.AnonymousPipeServerStream">
      <topicdata name="AnonymousPipeServerStream" group="list" subgroup="Properties" typeTopicId="T:System.IO.Pipes.AnonymousPipeServerStream" />
      <apidata name="AnonymousPipeServerStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
        <element api="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle" />
        <element api="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode" />
        <element api="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsHandleExposed" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="Properties_T_System_IO_Pipes_AnonymousPipeServerStream" />
    </api>
    <api id="Overload:System.IO.Pipes.AnonymousPipeServerStream.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.AnonymousPipeServerStream" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" />
      </containers>
      <file name="O_T_System_IO_Pipes_AnonymousPipeServerStream_MemberwiseClone" />
    </api>
    <api id="Overload:System.IO.Pipes.AnonymousPipeServerStream.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.AnonymousPipeServerStream" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" />
      </containers>
      <file name="O_T_System_IO_Pipes_AnonymousPipeServerStream_Dispose" />
    </api>
    <api id="Overload:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.AnonymousPipeServerStream" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_AnonymousPipeServerStream_ctor" />
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_AnonymousPipeServerStream_ctor" />
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_AnonymousPipeServerStream_ctor_1_3b3f5025" />
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="serverSafePipeHandle">
          <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
        </parameter>
        <parameter name="clientSafePipeHandle">
          <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_AnonymousPipeServerStream_ctor_3_64363f72" />
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="inheritability">
          <type api="T:System.IO.HandleInheritability" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_AnonymousPipeServerStream_ctor_2_7477bf22" />
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="inheritability">
          <type api="T:System.IO.HandleInheritability" ref="false" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_AnonymousPipeServerStream_ctor_3_032d56b8" />
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="inheritability">
          <type api="T:System.IO.HandleInheritability" ref="false" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pipeSecurity">
          <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_AnonymousPipeServerStream_ctor_4_1a6ce8da" />
    </api>
    <api id="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle">
      <topicdata group="api" />
      <apidata name="ClientSafePipeHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_AnonymousPipeServerStream_ClientSafePipeHandle" />
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle">
      <topicdata group="api" />
      <apidata name="DisposeLocalCopyOfClientHandle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_AnonymousPipeServerStream_DisposeLocalCopyOfClientHandle" />
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString">
      <topicdata group="api" />
      <apidata name="GetClientHandleAsString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_AnonymousPipeServerStream_GetClientHandleAsString" />
    </api>
    <api id="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
      <topicdata group="api" />
      <apidata name="ReadMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Pipes.PipeStream.ReadMode">
          <type api="T:System.IO.Pipes.PipeStream" ref="true" />
        </member>
      </overrides>
      <propertydata set="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_AnonymousPipeServerStream_ReadMode" />
    </api>
    <api id="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode">
      <topicdata group="api" />
      <apidata name="TransmissionMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Pipes.PipeStream.TransmissionMode">
          <type api="T:System.IO.Pipes.PipeStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_AnonymousPipeServerStream_TransmissionMode" />
    </api>
    <api id="T:System.IO.Pipes.NamedPipeClientStream">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Pipes.NamedPipeClientStream" />
      <apidata name="NamedPipeClientStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IO.Pipes.PipeStream" ref="true" />
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_IO_Pipes_NamedPipeClientStream" />
    </api>
    <api id="AllMembers.T:System.IO.Pipes.NamedPipeClientStream">
      <topicdata name="NamedPipeClientStream" group="list" subgroup="members" typeTopicId="T:System.IO.Pipes.NamedPipeClientStream" />
      <apidata name="NamedPipeClientStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="M:System.IO.Stream.Close" />
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor">
          <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.Connect">
          <element api="M:System.IO.Pipes.NamedPipeClientStream.Connect" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)" />
        </element>
        <element api="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances" />
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckReadOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckWriteOperations" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsHandleExposed" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="P:System.IO.Pipes.PipeStream.ReadMode" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="P:System.IO.Pipes.PipeStream.TransmissionMode" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="AllMembers_T_System_IO_Pipes_NamedPipeClientStream" />
    </api>
    <api id="Methods.T:System.IO.Pipes.NamedPipeClientStream">
      <topicdata name="NamedPipeClientStream" group="list" subgroup="Methods" typeTopicId="T:System.IO.Pipes.NamedPipeClientStream" />
      <apidata name="NamedPipeClientStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Stream.Close" />
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.Connect">
          <element api="M:System.IO.Pipes.NamedPipeClientStream.Connect" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)" />
        </element>
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckReadOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckWriteOperations" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="Methods_T_System_IO_Pipes_NamedPipeClientStream" />
    </api>
    <api id="Properties.T:System.IO.Pipes.NamedPipeClientStream">
      <topicdata name="NamedPipeClientStream" group="list" subgroup="Properties" typeTopicId="T:System.IO.Pipes.NamedPipeClientStream" />
      <apidata name="NamedPipeClientStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
        <element api="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsHandleExposed" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="P:System.IO.Pipes.PipeStream.ReadMode" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="P:System.IO.Pipes.PipeStream.TransmissionMode" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="Properties_T_System_IO_Pipes_NamedPipeClientStream" />
    </api>
    <api id="Overload:System.IO.Pipes.NamedPipeClientStream.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.NamedPipeClientStream" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" />
      </containers>
      <file name="O_T_System_IO_Pipes_NamedPipeClientStream_MemberwiseClone" />
    </api>
    <api id="Overload:System.IO.Pipes.NamedPipeClientStream.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.NamedPipeClientStream" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" />
      </containers>
      <file name="O_T_System_IO_Pipes_NamedPipeClientStream_Dispose" />
    </api>
    <api id="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.NamedPipeClientStream" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_NamedPipeClientStream_ctor" />
    </api>
    <api id="Overload:System.IO.Pipes.NamedPipeClientStream.Connect">
      <topicdata name="Connect" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.NamedPipeClientStream" />
      <apidata name="Connect" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Pipes.NamedPipeClientStream.Connect" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_NamedPipeClientStream_Connect" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="isAsync">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isConnected">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="safePipeHandle">
          <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeClientStream_ctor_4_b64de44a" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeClientStream_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor" />
      <parameters>
        <parameter name="serverName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeClientStream_ctor_2_6608d038" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor" />
      <parameters>
        <parameter name="serverName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="desiredAccessRights">
          <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
        <parameter name="impersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
        <parameter name="inheritability">
          <type api="T:System.IO.HandleInheritability" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeClientStream_ctor_6_8787e00f" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor" />
      <parameters>
        <parameter name="serverName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeClientStream_ctor_3_70c89b69" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor" />
      <parameters>
        <parameter name="serverName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeClientStream_ctor_4_f71c9660" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor" />
      <parameters>
        <parameter name="serverName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
        <parameter name="impersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeClientStream_ctor_5_b2c06185" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor" />
      <parameters>
        <parameter name="serverName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
        <parameter name="impersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
        <parameter name="inheritability">
          <type api="T:System.IO.HandleInheritability" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeClientStream_ctor_6_452c40fc" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.Connect">
      <topicdata group="api" />
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.NamedPipeClientStream.Connect" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_NamedPipeClientStream_Connect" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
      <topicdata group="api" />
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.NamedPipeClientStream.Connect" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_NamedPipeClientStream_Connect_1_cd2d7ec9" />
    </api>
    <api id="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
      <topicdata group="api" />
      <apidata name="NumberOfServerInstances" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_NamedPipeClientStream_NumberOfServerInstances" />
    </api>
    <api id="T:System.IO.Pipes.NamedPipeServerStream">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Pipes.NamedPipeServerStream" />
      <apidata name="NamedPipeServerStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IO.Pipes.PipeStream" ref="true" />
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_IO_Pipes_NamedPipeServerStream" />
    </api>
    <api id="AllMembers.T:System.IO.Pipes.NamedPipeServerStream">
      <topicdata name="NamedPipeServerStream" group="list" subgroup="members" typeTopicId="T:System.IO.Pipes.NamedPipeServerStream" />
      <apidata name="NamedPipeServerStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="M:System.IO.Stream.Close" />
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor">
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)" />
        </element>
        <element api="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.Disconnect" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName" />
        <element api="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection" />
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckReadOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckWriteOperations" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsHandleExposed" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="P:System.IO.Pipes.PipeStream.ReadMode" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="P:System.IO.Pipes.PipeStream.TransmissionMode" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="AllMembers_T_System_IO_Pipes_NamedPipeServerStream" />
    </api>
    <api id="Methods.T:System.IO.Pipes.NamedPipeServerStream">
      <topicdata name="NamedPipeServerStream" group="list" subgroup="Methods" typeTopicId="T:System.IO.Pipes.NamedPipeServerStream" />
      <apidata name="NamedPipeServerStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Stream.Close" />
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.Disconnect" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection" />
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckReadOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckWriteOperations" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="Methods_T_System_IO_Pipes_NamedPipeServerStream" />
    </api>
    <api id="Fields.T:System.IO.Pipes.NamedPipeServerStream">
      <topicdata name="NamedPipeServerStream" group="list" subgroup="Fields" typeTopicId="T:System.IO.Pipes.NamedPipeServerStream" />
      <apidata name="NamedPipeServerStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="Fields_T_System_IO_Pipes_NamedPipeServerStream" />
    </api>
    <api id="Overload:System.IO.Pipes.NamedPipeServerStream.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.NamedPipeServerStream" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" />
      </containers>
      <file name="O_T_System_IO_Pipes_NamedPipeServerStream_MemberwiseClone" />
    </api>
    <api id="Overload:System.IO.Pipes.NamedPipeServerStream.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.NamedPipeServerStream" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" />
      </containers>
      <file name="O_T_System_IO_Pipes_NamedPipeServerStream_Dispose" />
    </api>
    <api id="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.NamedPipeServerStream" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_NamedPipeServerStream_ctor" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="isAsync">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isConnected">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="safePipeHandle">
          <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeServerStream_ctor_4_b64de44a" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeServerStream_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeServerStream_ctor_2_3ad4d6ef" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="maxNumberOfServerInstances">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeServerStream_ctor_3_afe41d46" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="maxNumberOfServerInstances">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="transmissionMode">
          <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeServerStream_ctor_4_7971393a" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="maxNumberOfServerInstances">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="transmissionMode">
          <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeServerStream_ctor_5_832b9552" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="maxNumberOfServerInstances">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="transmissionMode">
          <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
        <parameter name="inBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeServerStream_ctor_7_5e9a96a6" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="maxNumberOfServerInstances">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="transmissionMode">
          <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
        <parameter name="inBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pipeSecurity">
          <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeServerStream_ctor_8_fb94560a" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="maxNumberOfServerInstances">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="transmissionMode">
          <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
        <parameter name="inBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pipeSecurity">
          <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
        </parameter>
        <parameter name="inheritability">
          <type api="T:System.IO.HandleInheritability" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeServerStream_ctor_9_654dc55d" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="maxNumberOfServerInstances">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="transmissionMode">
          <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
        <parameter name="inBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pipeSecurity">
          <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
        </parameter>
        <parameter name="inheritability">
          <type api="T:System.IO.HandleInheritability" ref="false" />
        </parameter>
        <parameter name="additionalAccessRights">
          <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_NamedPipeServerStream_ctor_10_a40ca0a6" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginWaitForConnection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_IO_Pipes_NamedPipeServerStream_BeginWaitForConnection_2_c483e4cb" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.Disconnect">
      <topicdata group="api" />
      <apidata name="Disconnect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_NamedPipeServerStream_Disconnect" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndWaitForConnection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_NamedPipeServerStream_EndWaitForConnection_1_35dda1aa" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName">
      <topicdata group="api" />
      <apidata name="GetImpersonationUserName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="ControlPrincipal" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_IO_Pipes_NamedPipeServerStream_GetImpersonationUserName" />
    </api>
    <api id="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances">
      <topicdata group="api" />
      <apidata name="MaxAllowedServerInstances" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <file name="F_System_IO_Pipes_NamedPipeServerStream_MaxAllowedServerInstances" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)">
      <topicdata group="api" />
      <apidata name="RunAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="impersonationWorker">
          <type api="T:System.IO.Pipes.PipeStreamImpersonationWorker" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="ControlPrincipal" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_IO_Pipes_NamedPipeServerStream_RunAsClient_1_7964743f" />
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection">
      <topicdata group="api" />
      <apidata name="WaitForConnection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_NamedPipeServerStream_WaitForConnection" />
    </api>
    <api id="T:System.IO.Pipes.PipeAccessRights">
      <topicdata group="api" />
      <apidata name="PipeAccessRights" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.IO.Pipes.PipeAccessRights.ReadData" />
        <element api="F:System.IO.Pipes.PipeAccessRights.WriteData" />
        <element api="F:System.IO.Pipes.PipeAccessRights.ReadAttributes" />
        <element api="F:System.IO.Pipes.PipeAccessRights.WriteAttributes" />
        <element api="F:System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes" />
        <element api="F:System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes" />
        <element api="F:System.IO.Pipes.PipeAccessRights.CreateNewInstance" />
        <element api="F:System.IO.Pipes.PipeAccessRights.Delete" />
        <element api="F:System.IO.Pipes.PipeAccessRights.ReadPermissions" />
        <element api="F:System.IO.Pipes.PipeAccessRights.ChangePermissions" />
        <element api="F:System.IO.Pipes.PipeAccessRights.TakeOwnership" />
        <element api="F:System.IO.Pipes.PipeAccessRights.Synchronize" />
        <element api="F:System.IO.Pipes.PipeAccessRights.FullControl" />
        <element api="F:System.IO.Pipes.PipeAccessRights.Read" />
        <element api="F:System.IO.Pipes.PipeAccessRights.Write" />
        <element api="F:System.IO.Pipes.PipeAccessRights.ReadWrite" />
        <element api="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_IO_Pipes_PipeAccessRights" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity">
      <topicdata group="api" notopic="" />
      <apidata name="AccessSystemSecurity" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>16777216</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_AccessSystemSecurity" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.ChangePermissions">
      <topicdata group="api" notopic="" />
      <apidata name="ChangePermissions" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>262144</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_ChangePermissions" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.CreateNewInstance">
      <topicdata group="api" notopic="" />
      <apidata name="CreateNewInstance" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_CreateNewInstance" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.Delete">
      <topicdata group="api" notopic="" />
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>65536</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_Delete" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.FullControl">
      <topicdata group="api" notopic="" />
      <apidata name="FullControl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>2032031</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_FullControl" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.Read">
      <topicdata group="api" notopic="" />
      <apidata name="Read" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>131209</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_Read" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.ReadAttributes">
      <topicdata group="api" notopic="" />
      <apidata name="ReadAttributes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_ReadAttributes" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.ReadData">
      <topicdata group="api" notopic="" />
      <apidata name="ReadData" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_ReadData" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes">
      <topicdata group="api" notopic="" />
      <apidata name="ReadExtendedAttributes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_ReadExtendedAttributes" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.ReadPermissions">
      <topicdata group="api" notopic="" />
      <apidata name="ReadPermissions" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>131072</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_ReadPermissions" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.ReadWrite">
      <topicdata group="api" notopic="" />
      <apidata name="ReadWrite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>131483</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_ReadWrite" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.Synchronize">
      <topicdata group="api" notopic="" />
      <apidata name="Synchronize" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>1048576</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_Synchronize" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.TakeOwnership">
      <topicdata group="api" notopic="" />
      <apidata name="TakeOwnership" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>524288</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_TakeOwnership" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.Write">
      <topicdata group="api" notopic="" />
      <apidata name="Write" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>274</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_Write" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.WriteAttributes">
      <topicdata group="api" notopic="" />
      <apidata name="WriteAttributes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_WriteAttributes" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.WriteData">
      <topicdata group="api" notopic="" />
      <apidata name="WriteData" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_WriteData" />
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes">
      <topicdata group="api" notopic="" />
      <apidata name="WriteExtendedAttributes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeAccessRights_WriteExtendedAttributes" />
    </api>
    <api id="T:System.IO.Pipes.PipeAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeAccessRule" />
      <apidata name="PipeAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_IO_Pipes_PipeAccessRule" />
    </api>
    <api id="AllMembers.T:System.IO.Pipes.PipeAccessRule">
      <topicdata name="PipeAccessRule" group="list" subgroup="members" typeTopicId="T:System.IO.Pipes.PipeAccessRule" />
      <apidata name="PipeAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IO.Pipes.PipeAccessRule.#ctor">
          <element api="M:System.IO.Pipes.PipeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.IO.Pipes.PipeAccessRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)" />
        </element>
        <element api="P:System.IO.Pipes.PipeAccessRule.PipeAccessRights" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="AllMembers_T_System_IO_Pipes_PipeAccessRule" />
    </api>
    <api id="Properties.T:System.IO.Pipes.PipeAccessRule">
      <topicdata name="PipeAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.IO.Pipes.PipeAccessRule" />
      <apidata name="PipeAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Pipes.PipeAccessRule.PipeAccessRights" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="Properties_T_System_IO_Pipes_PipeAccessRule" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Pipes.PipeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.IO.Pipes.PipeAccessRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeAccessRule_ctor" />
    </api>
    <api id="M:System.IO.Pipes.PipeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.PipeAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_PipeAccessRule_ctor_3_99fed9e4" />
    </api>
    <api id="M:System.IO.Pipes.PipeAccessRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.PipeAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_PipeAccessRule_ctor_3_30743e3b" />
    </api>
    <api id="P:System.IO.Pipes.PipeAccessRule.PipeAccessRights">
      <topicdata group="api" />
      <apidata name="PipeAccessRights" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeAccessRule_PipeAccessRights" />
    </api>
    <api id="T:System.IO.Pipes.PipeAuditRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeAuditRule" />
      <apidata name="PipeAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_IO_Pipes_PipeAuditRule" />
    </api>
    <api id="AllMembers.T:System.IO.Pipes.PipeAuditRule">
      <topicdata name="PipeAuditRule" group="list" subgroup="members" typeTopicId="T:System.IO.Pipes.PipeAuditRule" />
      <apidata name="PipeAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IO.Pipes.PipeAuditRule.#ctor">
          <element api="M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)" />
          <element api="M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)" />
        </element>
        <element api="P:System.IO.Pipes.PipeAuditRule.PipeAccessRights" />
        <element api="P:System.Security.AccessControl.AuditRule.AuditFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="AllMembers_T_System_IO_Pipes_PipeAuditRule" />
    </api>
    <api id="Properties.T:System.IO.Pipes.PipeAuditRule">
      <topicdata name="PipeAuditRule" group="list" subgroup="Properties" typeTopicId="T:System.IO.Pipes.PipeAuditRule" />
      <apidata name="PipeAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Pipes.PipeAuditRule.PipeAccessRights" />
        <element api="P:System.Security.AccessControl.AuditRule.AuditFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="Properties_T_System_IO_Pipes_PipeAuditRule" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeAuditRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeAuditRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)" />
        <element api="M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeAuditRule_ctor" />
    </api>
    <api id="M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.PipeAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
        </parameter>
        <parameter name="flags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_PipeAuditRule_ctor_3_b1d8436c" />
    </api>
    <api id="M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.PipeAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
        </parameter>
        <parameter name="flags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_PipeAuditRule_ctor_3_0c6c9738" />
    </api>
    <api id="P:System.IO.Pipes.PipeAuditRule.PipeAccessRights">
      <topicdata group="api" />
      <apidata name="PipeAccessRights" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeAuditRule_PipeAccessRights" />
    </api>
    <api id="T:System.IO.Pipes.PipeDirection">
      <topicdata group="api" />
      <apidata name="PipeDirection" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.IO.Pipes.PipeDirection.In" />
        <element api="F:System.IO.Pipes.PipeDirection.Out" />
        <element api="F:System.IO.Pipes.PipeDirection.InOut" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="T_System_IO_Pipes_PipeDirection" />
    </api>
    <api id="F:System.IO.Pipes.PipeDirection.In">
      <topicdata group="api" notopic="" />
      <apidata name="In" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeDirection_In" />
    </api>
    <api id="F:System.IO.Pipes.PipeDirection.InOut">
      <topicdata group="api" notopic="" />
      <apidata name="InOut" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeDirection_InOut" />
    </api>
    <api id="F:System.IO.Pipes.PipeDirection.Out">
      <topicdata group="api" notopic="" />
      <apidata name="Out" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeDirection_Out" />
    </api>
    <api id="T:System.IO.Pipes.PipeOptions">
      <topicdata group="api" />
      <apidata name="PipeOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.IO.Pipes.PipeOptions.None" />
        <element api="F:System.IO.Pipes.PipeOptions.WriteThrough" />
        <element api="F:System.IO.Pipes.PipeOptions.Asynchronous" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_IO_Pipes_PipeOptions" />
    </api>
    <api id="F:System.IO.Pipes.PipeOptions.Asynchronous">
      <topicdata group="api" notopic="" />
      <apidata name="Asynchronous" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
      </returns>
      <value>1073741824</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeOptions_Asynchronous" />
    </api>
    <api id="F:System.IO.Pipes.PipeOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeOptions_None" />
    </api>
    <api id="F:System.IO.Pipes.PipeOptions.WriteThrough">
      <topicdata group="api" notopic="" />
      <apidata name="WriteThrough" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
      </returns>
      <value>-2147483648</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeOptions_WriteThrough" />
    </api>
    <api id="T:System.IO.Pipes.PipeSecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeSecurity" />
      <apidata name="PipeSecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.NativeObjectSecurity" ref="true" />
          <type api="T:System.Security.AccessControl.CommonObjectSecurity" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_IO_Pipes_PipeSecurity" />
    </api>
    <api id="AllMembers.T:System.IO.Pipes.PipeSecurity">
      <topicdata name="PipeSecurity" group="list" subgroup="members" typeTopicId="T:System.IO.Pipes.PipeSecurity" />
      <apidata name="PipeSecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Pipes.PipeSecurity.#ctor" />
        <element api="P:System.IO.Pipes.PipeSecurity.AccessRightType" />
        <element api="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
        <element api="P:System.IO.Pipes.PipeSecurity.AccessRuleType" />
        <element api="Overload:System.IO.Pipes.PipeSecurity.AddAccessRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.AddAuditRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
        <element api="P:System.IO.Pipes.PipeSecurity.AuditRuleType" />
        <element api="Overload:System.IO.Pipes.PipeSecurity.Persist">
          <element api="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)" />
          <element api="M:System.IO.Pipes.PipeSecurity.Persist(System.String)" />
          <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)" />
          <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAccessRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.ResetAccessRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.SetAccessRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.SetAuditRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.GroupModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsContainer" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsDS" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.OwnerModified" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)" />
        <element api="Overload:System.IO.Pipes.PipeSecurity.SetSecurityDescriptorBinaryForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.SetSecurityDescriptorSddlForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="AllMembers_T_System_IO_Pipes_PipeSecurity" />
    </api>
    <api id="Methods.T:System.IO.Pipes.PipeSecurity">
      <topicdata name="PipeSecurity" group="list" subgroup="Methods" typeTopicId="T:System.IO.Pipes.PipeSecurity" />
      <apidata name="PipeSecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
        <element api="Overload:System.IO.Pipes.PipeSecurity.AddAccessRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.AddAuditRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
        <element api="Overload:System.IO.Pipes.PipeSecurity.Persist">
          <element api="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)" />
          <element api="M:System.IO.Pipes.PipeSecurity.Persist(System.String)" />
          <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)" />
          <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAccessRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.ResetAccessRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.SetAccessRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.SetAuditRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)" />
        <element api="Overload:System.IO.Pipes.PipeSecurity.SetSecurityDescriptorBinaryForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.SetSecurityDescriptorSddlForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="Methods_T_System_IO_Pipes_PipeSecurity" />
    </api>
    <api id="Properties.T:System.IO.Pipes.PipeSecurity">
      <topicdata name="PipeSecurity" group="list" subgroup="Properties" typeTopicId="T:System.IO.Pipes.PipeSecurity" />
      <apidata name="PipeSecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Pipes.PipeSecurity.AccessRightType" />
        <element api="P:System.IO.Pipes.PipeSecurity.AccessRuleType" />
        <element api="P:System.IO.Pipes.PipeSecurity.AuditRuleType" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.GroupModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsContainer" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsDS" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.OwnerModified" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="Properties_T_System_IO_Pipes_PipeSecurity" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.AddAccessRule">
      <topicdata name="AddAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeSecurity" />
      <apidata name="AddAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeSecurity_AddAccessRule" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.AddAuditRule">
      <topicdata name="AddAuditRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeSecurity" />
      <apidata name="AddAuditRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeSecurity_AddAuditRule" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.Persist">
      <topicdata name="Persist" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeSecurity" />
      <apidata name="Persist" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)" />
        <element api="M:System.IO.Pipes.PipeSecurity.Persist(System.String)" />
        <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
        <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)" />
        <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)" />
        <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeSecurity_Persist" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.RemoveAccessRule">
      <topicdata name="RemoveAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeSecurity" />
      <apidata name="RemoveAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeSecurity_RemoveAccessRule" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific">
      <topicdata name="RemoveAccessRuleSpecific" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeSecurity" />
      <apidata name="RemoveAccessRuleSpecific" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeSecurity_RemoveAccessRuleSpecific" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRule">
      <topicdata name="RemoveAuditRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeSecurity" />
      <apidata name="RemoveAuditRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeSecurity_RemoveAuditRule" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll">
      <topicdata name="RemoveAuditRuleAll" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeSecurity" />
      <apidata name="RemoveAuditRuleAll" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeSecurity_RemoveAuditRuleAll" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific">
      <topicdata name="RemoveAuditRuleSpecific" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeSecurity" />
      <apidata name="RemoveAuditRuleSpecific" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeSecurity_RemoveAuditRuleSpecific" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.ResetAccessRule">
      <topicdata name="ResetAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeSecurity" />
      <apidata name="ResetAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeSecurity_ResetAccessRule" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.SetAccessRule">
      <topicdata name="SetAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeSecurity" />
      <apidata name="SetAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeSecurity_SetAccessRule" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.SetAuditRule">
      <topicdata name="SetAuditRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeSecurity" />
      <apidata name="SetAuditRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeSecurity_SetAuditRule" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.SetSecurityDescriptorBinaryForm">
      <topicdata name="SetSecurityDescriptorBinaryForm" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeSecurity" allInherited="true" />
      <apidata name="SetSecurityDescriptorBinaryForm" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeSecurity_SetSecurityDescriptorBinaryForm" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.SetSecurityDescriptorSddlForm">
      <topicdata name="SetSecurityDescriptorSddlForm" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeSecurity" allInherited="true" />
      <apidata name="SetSecurityDescriptorSddlForm" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeSecurity_SetSecurityDescriptorSddlForm" />
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_PipeSecurity_ctor" />
    </api>
    <api id="P:System.IO.Pipes.PipeSecurity.AccessRightType">
      <topicdata group="api" />
      <apidata name="AccessRightType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AccessRightType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeSecurity_AccessRightType" />
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name="AccessRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeSecurity_AccessRuleFactory_6_6d53515a" />
    </api>
    <api id="P:System.IO.Pipes.PipeSecurity.AccessRuleType">
      <topicdata group="api" />
      <apidata name="AccessRuleType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeSecurity_AccessRuleType" />
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)">
      <topicdata group="api" />
      <apidata name="AddAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.AddAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeSecurity_AddAccessRule_1_94ebc628" />
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)">
      <topicdata group="api" />
      <apidata name="AddAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.AddAuditRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeSecurity_AddAuditRule_1_2d592d02" />
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <topicdata group="api" />
      <apidata name="AuditRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="flags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeSecurity_AuditRuleFactory_6_d8c7fe0c" />
    </api>
    <api id="P:System.IO.Pipes.PipeSecurity.AuditRuleType">
      <topicdata group="api" />
      <apidata name="AuditRuleType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeSecurity_AuditRuleType" />
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)">
      <topicdata group="api" />
      <apidata name="Persist" group="member" subgroup="method" />
      <memberdata visibility="family or assembly" overload="Overload:System.IO.Pipes.PipeSecurity.Persist" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="handle">
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Assert" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_IO_Pipes_PipeSecurity_Persist_1_ce7e6182" />
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.Persist(System.String)">
      <topicdata group="api" />
      <apidata name="Persist" group="member" subgroup="method" />
      <memberdata visibility="family or assembly" overload="Overload:System.IO.Pipes.PipeSecurity.Persist" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Assert" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_IO_Pipes_PipeSecurity_Persist_1_72eac341" />
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
      <topicdata group="api" />
      <apidata name="RemoveAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.RemoveAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeSecurity_RemoveAccessRule_1_94ebc628" />
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
      <topicdata group="api" />
      <apidata name="RemoveAccessRuleSpecific" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeSecurity_RemoveAccessRuleSpecific_1_94ebc628" />
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
      <topicdata group="api" />
      <apidata name="RemoveAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeSecurity_RemoveAuditRule_1_2d592d02" />
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)">
      <topicdata group="api" />
      <apidata name="RemoveAuditRuleAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeSecurity_RemoveAuditRuleAll_1_2d592d02" />
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
      <topicdata group="api" />
      <apidata name="RemoveAuditRuleSpecific" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeSecurity_RemoveAuditRuleSpecific_1_2d592d02" />
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
      <topicdata group="api" />
      <apidata name="ResetAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.ResetAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeSecurity_ResetAccessRule_1_94ebc628" />
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
      <topicdata group="api" />
      <apidata name="SetAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.SetAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeSecurity_SetAccessRule_1_94ebc628" />
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
      <topicdata group="api" />
      <apidata name="SetAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.SetAuditRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeSecurity_SetAuditRule_1_2d592d02" />
    </api>
    <api id="T:System.IO.Pipes.PipeStream">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeStream" />
      <apidata name="PipeStream" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
          <type api="T:System.IO.Pipes.AnonymousPipeClientStream" ref="true" />
          <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
          <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.PermissionSetAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>FullTrust</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_IO_Pipes_PipeStream" />
    </api>
    <api id="AllMembers.T:System.IO.Pipes.PipeStream">
      <topicdata name="PipeStream" group="list" subgroup="members" typeTopicId="T:System.IO.Pipes.PipeStream" />
      <apidata name="PipeStream" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.IO.Pipes.PipeStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="M:System.IO.Stream.Close" />
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.IO.Pipes.PipeStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
        <element api="Overload:System.IO.Pipes.PipeStream.#ctor">
          <element api="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)" />
          <element api="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)" />
        </element>
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckReadOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckWriteOperations" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsHandleExposed" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="P:System.IO.Pipes.PipeStream.ReadMode" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="P:System.IO.Pipes.PipeStream.TransmissionMode" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="AllMembers_T_System_IO_Pipes_PipeStream" />
    </api>
    <api id="Methods.T:System.IO.Pipes.PipeStream">
      <topicdata name="PipeStream" group="list" subgroup="Methods" typeTopicId="T:System.IO.Pipes.PipeStream" />
      <apidata name="PipeStream" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.IO.Pipes.PipeStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Stream.Close" />
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.IO.Pipes.PipeStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckReadOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckWriteOperations" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="Methods_T_System_IO_Pipes_PipeStream" />
    </api>
    <api id="Properties.T:System.IO.Pipes.PipeStream">
      <topicdata name="PipeStream" group="list" subgroup="Properties" typeTopicId="T:System.IO.Pipes.PipeStream" />
      <apidata name="PipeStream" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsHandleExposed" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="P:System.IO.Pipes.PipeStream.ReadMode" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="P:System.IO.Pipes.PipeStream.TransmissionMode" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="Properties_T_System_IO_Pipes_PipeStream" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeStream.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeStream" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeStream_MemberwiseClone" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeStream.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeStream" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeStream_Dispose" />
    </api>
    <api id="Overload:System.IO.Pipes.PipeStream.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Pipes.PipeStream" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="O_T_System_IO_Pipes_PipeStream_ctor" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IO.Pipes.PipeStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_PipeStream_ctor_2_a2ebb2e1" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IO.Pipes.PipeStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="transmissionMode">
          <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
        </parameter>
        <parameter name="outBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="C_System_IO_Pipes_PipeStream_ctor_3_2890139a" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_IO_Pipes_PipeStream_BeginRead_5_c7861e02" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginWrite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_IO_Pipes_PipeStream_BeginWrite_5_c7861e02" />
    </api>
    <api id="P:System.IO.Pipes.PipeStream.CanRead">
      <topicdata group="api" />
      <apidata name="CanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanRead">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeStream_CanRead" />
    </api>
    <api id="P:System.IO.Pipes.PipeStream.CanSeek">
      <topicdata group="api" />
      <apidata name="CanSeek" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanSeek">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeStream_CanSeek" />
    </api>
    <api id="P:System.IO.Pipes.PipeStream.CanWrite">
      <topicdata group="api" />
      <apidata name="CanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanWrite">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeStream_CanWrite" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations">
      <topicdata group="api" />
      <apidata name="CheckPipePropertyOperations" group="member" subgroup="method" />
      <memberdata visibility="family or assembly" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_CheckPipePropertyOperations" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.CheckReadOperations">
      <topicdata group="api" />
      <apidata name="CheckReadOperations" group="member" subgroup="method" />
      <memberdata visibility="family or assembly" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_CheckReadOperations" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.CheckWriteOperations">
      <topicdata group="api" />
      <apidata name="CheckWriteOperations" group="member" subgroup="method" />
      <memberdata visibility="family or assembly" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_CheckWriteOperations" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IO.Pipes.PipeStream.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Dispose(System.Boolean)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.EndRead(System.IAsyncResult)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_EndRead_1_35dda1aa" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndWrite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.EndWrite(System.IAsyncResult)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_EndWrite_1_35dda1aa" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Flush">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_Flush" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.GetAccessControl">
      <topicdata group="api" />
      <apidata name="GetAccessControl" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_GetAccessControl" />
    </api>
    <api id="P:System.IO.Pipes.PipeStream.InBufferSize">
      <topicdata group="api" />
      <apidata name="InBufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeStream_InBufferSize" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="InitializeHandle" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="handle">
          <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
        </parameter>
        <parameter name="isExposed">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isAsync">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_InitializeHandle_3_decb3c9f" />
    </api>
    <api id="P:System.IO.Pipes.PipeStream.IsAsync">
      <topicdata group="api" />
      <apidata name="IsAsync" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeStream_IsAsync" />
    </api>
    <api id="P:System.IO.Pipes.PipeStream.IsConnected">
      <topicdata group="api" />
      <apidata name="IsConnected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeStream_IsConnected" />
    </api>
    <api id="P:System.IO.Pipes.PipeStream.IsHandleExposed">
      <topicdata group="api" />
      <apidata name="IsHandleExposed" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeStream_IsHandleExposed" />
    </api>
    <api id="P:System.IO.Pipes.PipeStream.IsMessageComplete">
      <topicdata group="api" />
      <apidata name="IsMessageComplete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeStream_IsMessageComplete" />
    </api>
    <api id="P:System.IO.Pipes.PipeStream.Length">
      <topicdata group="api" />
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Length">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeStream_Length" />
    </api>
    <api id="P:System.IO.Pipes.PipeStream.OutBufferSize">
      <topicdata group="api" />
      <apidata name="OutBufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeStream_OutBufferSize" />
    </api>
    <api id="P:System.IO.Pipes.PipeStream.Position">
      <topicdata group="api" />
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Position">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeStream_Position" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer" in="true" out="true">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_Read_3_e342ee26" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.ReadByte">
      <topicdata group="api" />
      <apidata name="ReadByte" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.ReadByte">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_ReadByte" />
    </api>
    <api id="P:System.IO.Pipes.PipeStream.ReadMode">
      <topicdata group="api" />
      <apidata name="ReadMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeStream_ReadMode" />
    </api>
    <api id="P:System.IO.Pipes.PipeStream.SafePipeHandle">
      <topicdata group="api" />
      <apidata name="SafePipeHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeStream_SafePipeHandle" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <topicdata group="api" />
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.IO.SeekOrigin" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_Seek_2_e27d2c1f" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)">
      <topicdata group="api" />
      <apidata name="SetAccessControl" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pipeSecurity">
          <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_SetAccessControl_1_dcec9e3a" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)">
      <topicdata group="api" />
      <apidata name="SetLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.SetLength(System.Int64)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_SetLength_1_86267ecb" />
    </api>
    <api id="P:System.IO.Pipes.PipeStream.TransmissionMode">
      <topicdata group="api" />
      <apidata name="TransmissionMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="P_System_IO_Pipes_PipeStream_TransmissionMode" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.WaitForPipeDrain">
      <topicdata group="api" />
      <apidata name="WaitForPipeDrain" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_WaitForPipeDrain" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_Write_3_e342ee26" />
    </api>
    <api id="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
      <topicdata group="api" />
      <apidata name="WriteByte" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.WriteByte(System.Byte)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <file name="M_System_IO_Pipes_PipeStream_WriteByte_1_ec4f7ff5" />
    </api>
    <api id="T:System.IO.Pipes.PipeStreamImpersonationWorker">
      <topicdata group="api" />
      <apidata name="PipeStreamImpersonationWorker" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="T_System_IO_Pipes_PipeStreamImpersonationWorker" />
    </api>
    <api id="T:System.IO.Pipes.PipeTransmissionMode">
      <topicdata group="api" />
      <apidata name="PipeTransmissionMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.IO.Pipes.PipeTransmissionMode.Byte" />
        <element api="F:System.IO.Pipes.PipeTransmissionMode.Message" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <file name="T_System_IO_Pipes_PipeTransmissionMode" />
    </api>
    <api id="F:System.IO.Pipes.PipeTransmissionMode.Byte">
      <topicdata group="api" notopic="" />
      <apidata name="Byte" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeTransmissionMode_Byte" />
    </api>
    <api id="F:System.IO.Pipes.PipeTransmissionMode.Message">
      <topicdata group="api" notopic="" />
      <apidata name="Message" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </containers>
      <file name="F_System_IO_Pipes_PipeTransmissionMode_Message" />
    </api>
    <api id="T:System.Linq.Enumerable">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Enumerable" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="T_System_Linq_Enumerable" />
    </api>
    <api id="AllMembers.T:System.Linq.Enumerable">
      <topicdata name="Enumerable" group="list" subgroup="members" typeTopicId="T:System.Linq.Enumerable" />
      <apidata name="Enumerable" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.Linq.Enumerable.Aggregate">
          <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" />
          <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        <element api="Overload:System.Linq.Enumerable.Any">
          <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="Overload:System.Linq.Enumerable.Average">
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="Overload:System.Linq.Enumerable.Contains">
          <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" />
          <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Count">
          <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.DefaultIfEmpty">
          <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Distinct">
          <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <element api="M:System.Linq.Enumerable.Empty``1" />
        <element api="Overload:System.Linq.Enumerable.Except">
          <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.First">
          <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.FirstOrDefault">
          <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.GroupBy">
          <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.GroupJoin">
          <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Intersect">
          <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Join">
          <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Last">
          <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.LastOrDefault">
          <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.LongCount">
          <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Max">
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
          <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Min">
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
          <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
        <element api="Overload:System.Linq.Enumerable.OrderBy">
          <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.OrderByDescending">
          <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Linq.Enumerable.Range(System.Int32,System.Int32)" />
        <element api="M:System.Linq.Enumerable.Repeat``1(``0,System.Int32)" />
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="Overload:System.Linq.Enumerable.Select">
          <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.SelectMany">
          <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.SequenceEqual">
          <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Single">
          <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.SingleOrDefault">
          <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <element api="Overload:System.Linq.Enumerable.SkipWhile">
          <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Sum">
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <element api="Overload:System.Linq.Enumerable.TakeWhile">
          <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.ThenBy">
          <element api="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
          <element api="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.ThenByDescending">
          <element api="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
          <element api="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="Overload:System.Linq.Enumerable.ToDictionary">
          <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="Overload:System.Linq.Enumerable.ToLookup">
          <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Union">
          <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Where">
          <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="AllMembers_T_System_Linq_Enumerable" />
    </api>
    <api id="Methods.T:System.Linq.Enumerable">
      <topicdata name="Enumerable" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Enumerable" />
      <apidata name="Enumerable" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.Linq.Enumerable.Aggregate">
          <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" />
          <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        <element api="Overload:System.Linq.Enumerable.Any">
          <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="Overload:System.Linq.Enumerable.Average">
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="Overload:System.Linq.Enumerable.Contains">
          <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" />
          <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Count">
          <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.DefaultIfEmpty">
          <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Distinct">
          <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <element api="M:System.Linq.Enumerable.Empty``1" />
        <element api="Overload:System.Linq.Enumerable.Except">
          <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.First">
          <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.FirstOrDefault">
          <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.GroupBy">
          <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.GroupJoin">
          <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Intersect">
          <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Join">
          <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Last">
          <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.LastOrDefault">
          <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.LongCount">
          <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Max">
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
          <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Min">
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
          <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
        <element api="Overload:System.Linq.Enumerable.OrderBy">
          <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.OrderByDescending">
          <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Linq.Enumerable.Range(System.Int32,System.Int32)" />
        <element api="M:System.Linq.Enumerable.Repeat``1(``0,System.Int32)" />
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="Overload:System.Linq.Enumerable.Select">
          <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.SelectMany">
          <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.SequenceEqual">
          <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Single">
          <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.SingleOrDefault">
          <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <element api="Overload:System.Linq.Enumerable.SkipWhile">
          <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Sum">
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <element api="Overload:System.Linq.Enumerable.TakeWhile">
          <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.ThenBy">
          <element api="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
          <element api="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.ThenByDescending">
          <element api="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
          <element api="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="Overload:System.Linq.Enumerable.ToDictionary">
          <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="Overload:System.Linq.Enumerable.ToLookup">
          <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Union">
          <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Enumerable.Where">
          <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="Methods_T_System_Linq_Enumerable" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Aggregate">
      <topicdata name="Aggregate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Aggregate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" />
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Aggregate" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Any">
      <topicdata name="Any" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Any" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Any" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Average">
      <topicdata name="Average" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Average" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})" />
        <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})" />
        <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})" />
        <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})" />
        <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})" />
        <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})" />
        <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})" />
        <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})" />
        <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})" />
        <element api="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})" />
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Average" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Contains">
      <topicdata name="Contains" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Contains" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" />
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Contains" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Count">
      <topicdata name="Count" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Count" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Count" />
    </api>
    <api id="Overload:System.Linq.Enumerable.DefaultIfEmpty">
      <topicdata name="DefaultIfEmpty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="DefaultIfEmpty" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_DefaultIfEmpty" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Distinct">
      <topicdata name="Distinct" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Distinct" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Distinct" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Except">
      <topicdata name="Except" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Except" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Except" />
    </api>
    <api id="Overload:System.Linq.Enumerable.First">
      <topicdata name="First" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="First" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_First" />
    </api>
    <api id="Overload:System.Linq.Enumerable.FirstOrDefault">
      <topicdata name="FirstOrDefault" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="FirstOrDefault" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_FirstOrDefault" />
    </api>
    <api id="Overload:System.Linq.Enumerable.GroupBy">
      <topicdata name="GroupBy" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_GroupBy" />
    </api>
    <api id="Overload:System.Linq.Enumerable.GroupJoin">
      <topicdata name="GroupJoin" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="GroupJoin" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_GroupJoin" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Intersect">
      <topicdata name="Intersect" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Intersect" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Intersect" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Join">
      <topicdata name="Join" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Join" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Join" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Last">
      <topicdata name="Last" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Last" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Last" />
    </api>
    <api id="Overload:System.Linq.Enumerable.LastOrDefault">
      <topicdata name="LastOrDefault" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="LastOrDefault" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_LastOrDefault" />
    </api>
    <api id="Overload:System.Linq.Enumerable.LongCount">
      <topicdata name="LongCount" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="LongCount" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_LongCount" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Max">
      <topicdata name="Max" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Max" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})" />
        <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})" />
        <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})" />
        <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})" />
        <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})" />
        <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})" />
        <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})" />
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})" />
        <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})" />
        <element api="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})" />
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Max" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Min">
      <topicdata name="Min" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Min" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})" />
        <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})" />
        <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})" />
        <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})" />
        <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})" />
        <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})" />
        <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})" />
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})" />
        <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})" />
        <element api="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})" />
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Min" />
    </api>
    <api id="Overload:System.Linq.Enumerable.OrderBy">
      <topicdata name="OrderBy" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_OrderBy" />
    </api>
    <api id="Overload:System.Linq.Enumerable.OrderByDescending">
      <topicdata name="OrderByDescending" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_OrderByDescending" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Select">
      <topicdata name="Select" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Select" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Select" />
    </api>
    <api id="Overload:System.Linq.Enumerable.SelectMany">
      <topicdata name="SelectMany" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="SelectMany" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_SelectMany" />
    </api>
    <api id="Overload:System.Linq.Enumerable.SequenceEqual">
      <topicdata name="SequenceEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="SequenceEqual" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_SequenceEqual" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Single">
      <topicdata name="Single" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Single" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Single" />
    </api>
    <api id="Overload:System.Linq.Enumerable.SingleOrDefault">
      <topicdata name="SingleOrDefault" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="SingleOrDefault" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_SingleOrDefault" />
    </api>
    <api id="Overload:System.Linq.Enumerable.SkipWhile">
      <topicdata name="SkipWhile" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="SkipWhile" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_SkipWhile" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Sum">
      <topicdata name="Sum" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Sum" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})" />
        <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})" />
        <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})" />
        <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})" />
        <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})" />
        <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})" />
        <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})" />
        <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})" />
        <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})" />
        <element api="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})" />
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Sum" />
    </api>
    <api id="Overload:System.Linq.Enumerable.TakeWhile">
      <topicdata name="TakeWhile" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="TakeWhile" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_TakeWhile" />
    </api>
    <api id="Overload:System.Linq.Enumerable.ThenBy">
      <topicdata name="ThenBy" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
        <element api="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_ThenBy" />
    </api>
    <api id="Overload:System.Linq.Enumerable.ThenByDescending">
      <topicdata name="ThenByDescending" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
        <element api="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_ThenByDescending" />
    </api>
    <api id="Overload:System.Linq.Enumerable.ToDictionary">
      <topicdata name="ToDictionary" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="ToDictionary" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_ToDictionary" />
    </api>
    <api id="Overload:System.Linq.Enumerable.ToLookup">
      <topicdata name="ToLookup" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="ToLookup" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_ToLookup" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Union">
      <topicdata name="Union" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Union" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Union" />
    </api>
    <api id="Overload:System.Linq.Enumerable.Where">
      <topicdata name="Where" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Enumerable" />
      <apidata name="Where" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Enumerable_Where" />
    </api>
    <api id="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})">
      <topicdata group="api" />
      <apidata name="Aggregate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Aggregate" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="func">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" />
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" />
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Aggregate``1_4_14346263" />
    </api>
    <api id="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
      <topicdata group="api" />
      <apidata name="Aggregate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Aggregate" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TAccumulate" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="seed">
          <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
        </parameter>
        <parameter name="func">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Aggregate``2_5_64b4f602" />
    </api>
    <api id="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
      <topicdata group="api" />
      <apidata name="Aggregate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Aggregate" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TAccumulate" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="seed">
          <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
        </parameter>
        <parameter name="func">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
              <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Aggregate``3_7_76dc5cb7" />
    </api>
    <api id="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="All" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_All``1_3_b28fb2d0" />
    </api>
    <api id="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Any" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Any" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Any``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="Any" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Any" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Any``1_3_b28fb2d0" />
    </api>
    <api id="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="AsEnumerable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_AsEnumerable``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Decimal" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average_1_d2ea3337" />
    </api>
    <api id="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average_1_2b2c2c52" />
    </api>
    <api id="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average_1_019d7c3f" />
    </api>
    <api id="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average_1_8ffa3538" />
    </api>
    <api id="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average_1_2a7c87d1" />
    </api>
    <api id="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average_1_85fc2682" />
    </api>
    <api id="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average_1_d9f7d796" />
    </api>
    <api id="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average_1_632d36e9" />
    </api>
    <api id="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average_1_f4efd155" />
    </api>
    <api id="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Single" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average_1_02c54e51" />
    </api>
    <api id="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
              <type api="T:System.Decimal" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average``1_3_c0589858" />
    </api>
    <api id="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average``1_3_569bbedb" />
    </api>
    <api id="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average``1_3_c92a6ec9" />
    </api>
    <api id="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average``1_3_e11b6ecf" />
    </api>
    <api id="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average``1_3_11665b41" />
    </api>
    <api id="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average``1_3_cefe5585" />
    </api>
    <api id="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average``1_3_7b0983cd" />
    </api>
    <api id="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average``1_3_acc883cf" />
    </api>
    <api id="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average``1_3_79fa242b" />
    </api>
    <api id="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
              <type api="T:System.Single" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Average``1_3_e295ed73" />
    </api>
    <api id="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="Cast" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Cast``1_1_2fa4d2ad" />
    </api>
    <api id="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Concat" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="first">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="second">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Concat``1_2_3d7fa0a1" />
    </api>
    <api id="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Contains" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="value">
          <template name="TSource" index="0" api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Contains``1_2_98027260" />
    </api>
    <api id="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Contains" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="value">
          <template name="TSource" index="0" api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Contains``1_3_338c1d0e" />
    </api>
    <api id="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Count" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Count``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Count" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Count``1_3_b28fb2d0" />
    </api>
    <api id="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="DefaultIfEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.DefaultIfEmpty" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_DefaultIfEmpty``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)">
      <topicdata group="api" />
      <apidata name="DefaultIfEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.DefaultIfEmpty" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="defaultValue">
          <template name="TSource" index="0" api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_DefaultIfEmpty``1_2_98027260" />
    </api>
    <api id="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Distinct" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Distinct" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Distinct``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <topicdata group="api" />
      <apidata name="Distinct" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Distinct" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Distinct``1_2_2160afb5" />
    </api>
    <api id="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="ElementAt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_ElementAt``1_2_c1153dae" />
    </api>
    <api id="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="ElementAtOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_ElementAtOrDefault``1_2_c1153dae" />
    </api>
    <api id="M:System.Linq.Enumerable.Empty``1">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Linq.Enumerable.Empty``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Empty``1" />
    </api>
    <api id="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Except" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Except" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="first">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="second">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Except``1_2_3d7fa0a1" />
    </api>
    <api id="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <topicdata group="api" />
      <apidata name="Except" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Except" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="first">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="second">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Except``1_3_6063c852" />
    </api>
    <api id="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="First" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.First" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_First``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="First" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.First" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_First``1_3_b28fb2d0" />
    </api>
    <api id="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="FirstOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.FirstOrDefault" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_FirstOrDefault``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="FirstOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.FirstOrDefault" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_FirstOrDefault``1_3_b28fb2d0" />
    </api>
    <api id="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.GroupBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Linq.IGrouping`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_GroupBy``2_3_b0b02bc8" />
    </api>
    <api id="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.GroupBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Linq.IGrouping`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_GroupBy``2_4_e50e280d" />
    </api>
    <api id="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.GroupBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="elementSelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Linq.IGrouping`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_GroupBy``3_5_a9dab3b1" />
    </api>
    <api id="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.GroupBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="elementSelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Linq.IGrouping`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_GroupBy``3_6_5e12b3c1" />
    </api>
    <api id="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.GroupBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TElement" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="elementSelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
              <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_GroupBy``4_8_e7624ec5" />
    </api>
    <api id="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.GroupBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TElement" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="elementSelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
              <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_GroupBy``4_9_e8e7acba" />
    </api>
    <api id="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.GroupBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
              <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_GroupBy``3_6_b6743c4a" />
    </api>
    <api id="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.GroupBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
              <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_GroupBy``3_7_d808111e" />
    </api>
    <api id="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <topicdata group="api" />
      <apidata name="GroupJoin" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.GroupJoin" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TOuter" />
        <template name="TInner" />
        <template name="TKey" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="outer">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="inner">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="outerKeySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="innerKeySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
              <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_GroupJoin``4_9_676db506" />
    </api>
    <api id="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <topicdata group="api" />
      <apidata name="GroupJoin" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.GroupJoin" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TOuter" />
        <template name="TInner" />
        <template name="TKey" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="outer">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="inner">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="outerKeySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="innerKeySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
              <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_GroupJoin``4_10_ca094a3d" />
    </api>
    <api id="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Intersect" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Intersect" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="first">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="second">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Intersect``1_2_3d7fa0a1" />
    </api>
    <api id="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <topicdata group="api" />
      <apidata name="Intersect" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Intersect" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="first">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="second">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Intersect``1_3_6063c852" />
    </api>
    <api id="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <topicdata group="api" />
      <apidata name="Join" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Join" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TOuter" />
        <template name="TInner" />
        <template name="TKey" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="outer">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="inner">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="outerKeySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="innerKeySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Join``4_9_675007d5" />
    </api>
    <api id="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <topicdata group="api" />
      <apidata name="Join" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Join" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TOuter" />
        <template name="TInner" />
        <template name="TKey" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="outer">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="inner">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="outerKeySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="innerKeySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Join``4_10_639db9f4" />
    </api>
    <api id="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Last" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Last" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Last``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="Last" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Last" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Last``1_3_b28fb2d0" />
    </api>
    <api id="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="LastOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.LastOrDefault" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_LastOrDefault``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="LastOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.LastOrDefault" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_LastOrDefault``1_3_b28fb2d0" />
    </api>
    <api id="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="LongCount" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.LongCount" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_LongCount``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="LongCount" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.LongCount" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_LongCount``1_3_b28fb2d0" />
    </api>
    <api id="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Decimal" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max_1_d2ea3337" />
    </api>
    <api id="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max_1_2b2c2c52" />
    </api>
    <api id="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max_1_019d7c3f" />
    </api>
    <api id="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max_1_8ffa3538" />
    </api>
    <api id="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max_1_2a7c87d1" />
    </api>
    <api id="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max_1_85fc2682" />
    </api>
    <api id="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max_1_d9f7d796" />
    </api>
    <api id="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max_1_632d36e9" />
    </api>
    <api id="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max_1_f4efd155" />
    </api>
    <api id="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Single" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max_1_02c54e51" />
    </api>
    <api id="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
              <type api="T:System.Decimal" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max``1_3_c0589858" />
    </api>
    <api id="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max``1_3_569bbedb" />
    </api>
    <api id="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max``1_3_c92a6ec9" />
    </api>
    <api id="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max``1_3_e11b6ecf" />
    </api>
    <api id="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max``1_3_11665b41" />
    </api>
    <api id="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max``1_3_cefe5585" />
    </api>
    <api id="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max``1_3_7b0983cd" />
    </api>
    <api id="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max``1_3_acc883cf" />
    </api>
    <api id="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max``1_3_79fa242b" />
    </api>
    <api id="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
              <type api="T:System.Single" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max``1_3_e295ed73" />
    </api>
    <api id="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Max" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Max``2_3_b0b02bc8" />
    </api>
    <api id="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Decimal" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min_1_d2ea3337" />
    </api>
    <api id="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min_1_2b2c2c52" />
    </api>
    <api id="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min_1_019d7c3f" />
    </api>
    <api id="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min_1_8ffa3538" />
    </api>
    <api id="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min_1_2a7c87d1" />
    </api>
    <api id="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min_1_85fc2682" />
    </api>
    <api id="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min_1_d9f7d796" />
    </api>
    <api id="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min_1_632d36e9" />
    </api>
    <api id="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min_1_f4efd155" />
    </api>
    <api id="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Single" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min_1_02c54e51" />
    </api>
    <api id="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
              <type api="T:System.Decimal" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min``1_3_c0589858" />
    </api>
    <api id="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min``1_3_569bbedb" />
    </api>
    <api id="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min``1_3_c92a6ec9" />
    </api>
    <api id="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min``1_3_e11b6ecf" />
    </api>
    <api id="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min``1_3_11665b41" />
    </api>
    <api id="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min``1_3_cefe5585" />
    </api>
    <api id="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min``1_3_7b0983cd" />
    </api>
    <api id="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min``1_3_acc883cf" />
    </api>
    <api id="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min``1_3_79fa242b" />
    </api>
    <api id="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
              <type api="T:System.Single" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min``1_3_e295ed73" />
    </api>
    <api id="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Min" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Min``2_3_b0b02bc8" />
    </api>
    <api id="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="OfType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_OfType``1_1_2fa4d2ad" />
    </api>
    <api id="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.OrderBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_OrderBy``2_3_b0b02bc8" />
    </api>
    <api id="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.OrderBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_OrderBy``2_4_8178856e" />
    </api>
    <api id="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.OrderByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_OrderByDescending``2_3_b0b02bc8" />
    </api>
    <api id="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.OrderByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_OrderByDescending``2_4_8178856e" />
    </api>
    <api id="M:System.Linq.Enumerable.Range(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Range" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="start">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Range_2_4ac95b2b" />
    </api>
    <api id="M:System.Linq.Enumerable.Repeat``1(``0,System.Int32)">
      <topicdata group="api" />
      <apidata name="Repeat" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="element">
          <template name="TResult" index="0" api="M:System.Linq.Enumerable.Repeat``1(``0,System.Int32)" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Linq.Enumerable.Repeat``1(``0,System.Int32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Repeat``1_2_9ea78b4a" />
    </api>
    <api id="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Reverse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Reverse``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Select" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Select``2_3_b0b02bc8" />
    </api>
    <api id="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Select" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              <type api="T:System.Int32" ref="false" />
              <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Select``2_4_67c7f982" />
    </api>
    <api id="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <topicdata group="api" />
      <apidata name="SelectMany" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.SelectMany" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TCollection" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="collectionSelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_SelectMany``3_6_139cd6e9" />
    </api>
    <api id="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
      <topicdata group="api" />
      <apidata name="SelectMany" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.SelectMany" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_SelectMany``2_3_fe2f2083" />
    </api>
    <api id="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <topicdata group="api" />
      <apidata name="SelectMany" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.SelectMany" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TCollection" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="collectionSelector">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              <type api="T:System.Int32" ref="false" />
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_SelectMany``3_7_12ad34fa" />
    </api>
    <api id="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
      <topicdata group="api" />
      <apidata name="SelectMany" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.SelectMany" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              <type api="T:System.Int32" ref="false" />
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_SelectMany``2_4_2a6d4749" />
    </api>
    <api id="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="SequenceEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.SequenceEqual" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="first">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="second">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_SequenceEqual``1_2_3d7fa0a1" />
    </api>
    <api id="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <topicdata group="api" />
      <apidata name="SequenceEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.SequenceEqual" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="first">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="second">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_SequenceEqual``1_3_6063c852" />
    </api>
    <api id="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Single" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Single" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Single``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="Single" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Single" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Single``1_3_b28fb2d0" />
    </api>
    <api id="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="SingleOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.SingleOrDefault" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_SingleOrDefault``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="SingleOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.SingleOrDefault" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_SingleOrDefault``1_3_b28fb2d0" />
    </api>
    <api id="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="Skip" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Skip``1_2_c1153dae" />
    </api>
    <api id="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="SkipWhile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.SkipWhile" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_SkipWhile``1_3_b28fb2d0" />
    </api>
    <api id="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
      <topicdata group="api" />
      <apidata name="SkipWhile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.SkipWhile" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
              <type api="T:System.Int32" ref="false" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_SkipWhile``1_4_620ec6a7" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Decimal" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum_1_d2ea3337" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum_1_2b2c2c52" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum_1_019d7c3f" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum_1_8ffa3538" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum_1_2a7c87d1" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum_1_85fc2682" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum_1_d9f7d796" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum_1_632d36e9" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum_1_f4efd155" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Single" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum_1_02c54e51" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" />
              <type api="T:System.Decimal" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum``1_3_c0589858" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" />
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum``1_3_569bbedb" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" />
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum``1_3_c92a6ec9" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" />
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum``1_3_e11b6ecf" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum``1_3_11665b41" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum``1_3_cefe5585" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum``1_3_7b0983cd" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum``1_3_acc883cf" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum``1_3_79fa242b" />
    </api>
    <api id="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" />
              <type api="T:System.Single" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Sum``1_3_e295ed73" />
    </api>
    <api id="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="Take" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Take``1_2_c1153dae" />
    </api>
    <api id="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="TakeWhile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.TakeWhile" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_TakeWhile``1_3_b28fb2d0" />
    </api>
    <api id="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
      <topicdata group="api" />
      <apidata name="TakeWhile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.TakeWhile" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
              <type api="T:System.Int32" ref="false" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_TakeWhile``1_4_620ec6a7" />
    </api>
    <api id="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.ThenBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_ThenBy``2_3_b2666733" />
    </api>
    <api id="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.ThenBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_ThenBy``2_4_9e64727f" />
    </api>
    <api id="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.ThenByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_ThenByDescending``2_3_b2666733" />
    </api>
    <api id="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.ThenByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_ThenByDescending``2_4_9e64727f" />
    </api>
    <api id="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="ToArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_ToArray``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="ToDictionary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.ToDictionary" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_ToDictionary``2_3_b0b02bc8" />
    </api>
    <api id="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <topicdata group="api" />
      <apidata name="ToDictionary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.ToDictionary" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_ToDictionary``2_4_e50e280d" />
    </api>
    <api id="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <topicdata group="api" />
      <apidata name="ToDictionary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.ToDictionary" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="elementSelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_ToDictionary``3_5_a9dab3b1" />
    </api>
    <api id="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <topicdata group="api" />
      <apidata name="ToDictionary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.ToDictionary" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="elementSelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_ToDictionary``3_6_5e12b3c1" />
    </api>
    <api id="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="ToList" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_ToList``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="ToLookup" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.ToLookup" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.ILookup`2" ref="true">
          <specialization>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_ToLookup``2_3_b0b02bc8" />
    </api>
    <api id="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <topicdata group="api" />
      <apidata name="ToLookup" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.ToLookup" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.ILookup`2" ref="true">
          <specialization>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_ToLookup``2_4_e50e280d" />
    </api>
    <api id="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <topicdata group="api" />
      <apidata name="ToLookup" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.ToLookup" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="elementSelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.ILookup`2" ref="true">
          <specialization>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_ToLookup``3_5_a9dab3b1" />
    </api>
    <api id="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <topicdata group="api" />
      <apidata name="ToLookup" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.ToLookup" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="elementSelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.ILookup`2" ref="true">
          <specialization>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_ToLookup``3_6_5e12b3c1" />
    </api>
    <api id="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Union" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="first">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="second">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Union``1_2_3d7fa0a1" />
    </api>
    <api id="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <topicdata group="api" />
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Union" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="first">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="second">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Union``1_3_6063c852" />
    </api>
    <api id="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="Where" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Where" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Where``1_3_b28fb2d0" />
    </api>
    <api id="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
      <topicdata group="api" />
      <apidata name="Where" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Enumerable.Where" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
              <type api="T:System.Int32" ref="false" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Enumerable" ref="true" />
      </containers>
      <file name="M_System_Linq_Enumerable_Where``1_4_620ec6a7" />
    </api>
    <api id="T:System.Linq.IGrouping`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.IGrouping`2" />
      <apidata name="IGrouping" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TElement" index="1" api="T:System.Linq.IGrouping`2" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="T_System_Linq_IGrouping`2" />
    </api>
    <api id="AllMembers.T:System.Linq.IGrouping`2">
      <topicdata name="IGrouping" group="list" subgroup="members" typeTopicId="T:System.Linq.IGrouping`2" />
      <apidata name="IGrouping" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <elements>
        <element api="Overload:System.Linq.IGrouping`2.GetEnumerator">
          <element api="M:System.Collections.IEnumerable.GetEnumerator" />
          <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        </element>
        <element api="P:System.Linq.IGrouping`2.Key" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="AllMembers_T_System_Linq_IGrouping`2" />
    </api>
    <api id="Properties.T:System.Linq.IGrouping`2">
      <topicdata name="IGrouping" group="list" subgroup="Properties" typeTopicId="T:System.Linq.IGrouping`2" />
      <apidata name="IGrouping" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <elements>
        <element api="P:System.Linq.IGrouping`2.Key" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="Properties_T_System_Linq_IGrouping`2" />
    </api>
    <api id="Overload:System.Linq.IGrouping`2.GetEnumerator">
      <topicdata name="GetEnumerator" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.IGrouping`2" allInherited="true" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.IGrouping`2" />
      </containers>
      <file name="O_T_System_Linq_IGrouping`2_GetEnumerator" />
    </api>
    <api id="P:System.Linq.IGrouping`2.Key">
      <topicdata group="api" />
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <template name="TKey" index="0" api="T:System.Linq.IGrouping`2" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.IGrouping`2" ref="true" />
      </containers>
      <file name="P_System_Linq_IGrouping`2_Key" />
    </api>
    <api id="T:System.Linq.ILookup`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.ILookup`2" />
      <apidata name="ILookup" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Linq.IGrouping`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:System.Linq.ILookup`2" />
                <template name="TElement" index="1" api="T:System.Linq.ILookup`2" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Linq.Lookup`2" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="T_System_Linq_ILookup`2" />
    </api>
    <api id="AllMembers.T:System.Linq.ILookup`2">
      <topicdata name="ILookup" group="list" subgroup="members" typeTopicId="T:System.Linq.ILookup`2" />
      <apidata name="ILookup" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <elements>
        <element api="Overload:System.Linq.ILookup`2.GetEnumerator">
          <element api="M:System.Collections.IEnumerable.GetEnumerator" />
          <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        </element>
        <element api="M:System.Linq.ILookup`2.Contains(`0)" />
        <element api="P:System.Linq.ILookup`2.Count" />
        <element api="P:System.Linq.ILookup`2.Item(`0)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="AllMembers_T_System_Linq_ILookup`2" />
    </api>
    <api id="Methods.T:System.Linq.ILookup`2">
      <topicdata name="ILookup" group="list" subgroup="Methods" typeTopicId="T:System.Linq.ILookup`2" />
      <apidata name="ILookup" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <elements>
        <element api="Overload:System.Linq.ILookup`2.GetEnumerator">
          <element api="M:System.Collections.IEnumerable.GetEnumerator" />
          <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        </element>
        <element api="M:System.Linq.ILookup`2.Contains(`0)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="Methods_T_System_Linq_ILookup`2" />
    </api>
    <api id="Properties.T:System.Linq.ILookup`2">
      <topicdata name="ILookup" group="list" subgroup="Properties" typeTopicId="T:System.Linq.ILookup`2" />
      <apidata name="ILookup" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <elements>
        <element api="P:System.Linq.ILookup`2.Count" />
        <element api="P:System.Linq.ILookup`2.Item(`0)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="Properties_T_System_Linq_ILookup`2" />
    </api>
    <api id="Overload:System.Linq.ILookup`2.GetEnumerator">
      <topicdata name="GetEnumerator" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.ILookup`2" allInherited="true" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.ILookup`2" />
      </containers>
      <file name="O_T_System_Linq_ILookup`2_GetEnumerator" />
    </api>
    <api id="M:System.Linq.ILookup`2.Contains(`0)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:System.Linq.ILookup`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.ILookup`2" ref="true" />
      </containers>
      <file name="M_System_Linq_ILookup`2_Contains_1_1a965722" />
    </api>
    <api id="P:System.Linq.ILookup`2.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.ILookup`2" ref="true" />
      </containers>
      <file name="P_System_Linq_ILookup`2_Count" />
    </api>
    <api id="P:System.Linq.ILookup`2.Item(`0)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:System.Linq.ILookup`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TElement" index="1" api="T:System.Linq.ILookup`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.ILookup`2" ref="true" />
      </containers>
      <file name="P_System_Linq_ILookup`2_Item_1_1a965722" />
    </api>
    <api id="T:System.Linq.IOrderedEnumerable`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.IOrderedEnumerable`1" />
      <apidata name="IOrderedEnumerable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TElement" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Linq.IQueryable`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="T_System_Linq_IOrderedEnumerable`1" />
    </api>
    <api id="AllMembers.T:System.Linq.IOrderedEnumerable`1">
      <topicdata name="IOrderedEnumerable" group="list" subgroup="members" typeTopicId="T:System.Linq.IOrderedEnumerable`1" />
      <apidata name="IOrderedEnumerable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TElement" />
      </templates>
      <elements>
        <element api="Overload:System.Linq.IOrderedEnumerable`1.GetEnumerator">
          <element api="M:System.Collections.IEnumerable.GetEnumerator" />
          <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        </element>
        <element api="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="AllMembers_T_System_Linq_IOrderedEnumerable`1" />
    </api>
    <api id="Methods.T:System.Linq.IOrderedEnumerable`1">
      <topicdata name="IOrderedEnumerable" group="list" subgroup="Methods" typeTopicId="T:System.Linq.IOrderedEnumerable`1" />
      <apidata name="IOrderedEnumerable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TElement" />
      </templates>
      <elements>
        <element api="Overload:System.Linq.IOrderedEnumerable`1.GetEnumerator">
          <element api="M:System.Collections.IEnumerable.GetEnumerator" />
          <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        </element>
        <element api="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="Methods_T_System_Linq_IOrderedEnumerable`1" />
    </api>
    <api id="Overload:System.Linq.IOrderedEnumerable`1.GetEnumerator">
      <topicdata name="GetEnumerator" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.IOrderedEnumerable`1" allInherited="true" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.IOrderedEnumerable`1" />
      </containers>
      <file name="O_T_System_Linq_IOrderedEnumerable`1_GetEnumerator" />
    </api>
    <api id="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateOrderedEnumerable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TElement" index="0" api="T:System.Linq.IOrderedEnumerable`1" />
              <template name="TKey" index="0" api="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="0" api="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="descending">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
          <specialization>
            <template name="TElement" index="0" api="T:System.Linq.IOrderedEnumerable`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.IOrderedEnumerable`1" ref="true" />
      </containers>
      <file name="M_System_Linq_IOrderedEnumerable`1_CreateOrderedEnumerable``1_4_b58be05e" />
    </api>
    <api id="T:System.Linq.IOrderedQueryable">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.IOrderedQueryable" />
      <apidata name="IOrderedQueryable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:System.Linq.IQueryable" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Linq.IOrderedQueryable`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="T_System_Linq_IOrderedQueryable" />
    </api>
    <api id="AllMembers.T:System.Linq.IOrderedQueryable">
      <topicdata name="IOrderedQueryable" group="list" subgroup="members" typeTopicId="T:System.Linq.IOrderedQueryable" />
      <apidata name="IOrderedQueryable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="P:System.Linq.IQueryable.ElementType" />
        <element api="P:System.Linq.IQueryable.Expression" />
        <element api="P:System.Linq.IQueryable.Provider" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="AllMembers_T_System_Linq_IOrderedQueryable" />
    </api>
    <api id="T:System.Linq.IOrderedQueryable`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.IOrderedQueryable`1" />
      <apidata name="IOrderedQueryable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Linq.IOrderedQueryable`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Linq.IQueryable`1" />
          </specialization>
        </type>
        <type api="T:System.Linq.IOrderedQueryable" ref="true" />
        <type api="T:System.Linq.IQueryable" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="T_System_Linq_IOrderedQueryable`1" />
    </api>
    <api id="AllMembers.T:System.Linq.IOrderedQueryable`1">
      <topicdata name="IOrderedQueryable" group="list" subgroup="members" typeTopicId="T:System.Linq.IOrderedQueryable`1" />
      <apidata name="IOrderedQueryable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.Linq.IOrderedQueryable`1.GetEnumerator">
          <element api="M:System.Collections.IEnumerable.GetEnumerator" />
          <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        </element>
        <element api="P:System.Linq.IQueryable.ElementType" />
        <element api="P:System.Linq.IQueryable.Expression" />
        <element api="P:System.Linq.IQueryable.Provider" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="AllMembers_T_System_Linq_IOrderedQueryable`1" />
    </api>
    <api id="Overload:System.Linq.IOrderedQueryable`1.GetEnumerator">
      <topicdata name="GetEnumerator" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.IOrderedQueryable`1" allInherited="true" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.IOrderedQueryable`1" />
      </containers>
      <file name="O_T_System_Linq_IOrderedQueryable`1_GetEnumerator" />
    </api>
    <api id="T:System.Linq.IQueryable">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.IQueryable" />
      <apidata name="IQueryable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Linq.IQueryable`1" ref="true" />
        <type api="T:System.Linq.IOrderedQueryable" ref="true" />
        <type api="T:System.Linq.IOrderedQueryable`1" ref="true" />
        <type api="T:System.Data.Linq.ITable" ref="true" />
        <type api="T:System.Data.Linq.Table`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="T_System_Linq_IQueryable" />
    </api>
    <api id="AllMembers.T:System.Linq.IQueryable">
      <topicdata name="IQueryable" group="list" subgroup="members" typeTopicId="T:System.Linq.IQueryable" />
      <apidata name="IQueryable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="P:System.Linq.IQueryable.ElementType" />
        <element api="P:System.Linq.IQueryable.Expression" />
        <element api="P:System.Linq.IQueryable.Provider" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="AllMembers_T_System_Linq_IQueryable" />
    </api>
    <api id="Properties.T:System.Linq.IQueryable">
      <topicdata name="IQueryable" group="list" subgroup="Properties" typeTopicId="T:System.Linq.IQueryable" />
      <apidata name="IQueryable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.IQueryable.ElementType" />
        <element api="P:System.Linq.IQueryable.Expression" />
        <element api="P:System.Linq.IQueryable.Provider" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="Properties_T_System_Linq_IQueryable" />
    </api>
    <api id="P:System.Linq.IQueryable.ElementType">
      <topicdata group="api" />
      <apidata name="ElementType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.IQueryable" ref="true" />
      </containers>
      <file name="P_System_Linq_IQueryable_ElementType" />
    </api>
    <api id="P:System.Linq.IQueryable.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.IQueryable" ref="true" />
      </containers>
      <file name="P_System_Linq_IQueryable_Expression" />
    </api>
    <api id="P:System.Linq.IQueryable.Provider">
      <topicdata group="api" />
      <apidata name="Provider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.IQueryProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.IQueryable" ref="true" />
      </containers>
      <file name="P_System_Linq_IQueryable_Provider" />
    </api>
    <api id="T:System.Linq.IQueryable`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.IQueryable`1" />
      <apidata name="IQueryable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Linq.IQueryable`1" />
          </specialization>
        </type>
        <type api="T:System.Linq.IQueryable" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Linq.IOrderedQueryable`1" ref="true" />
        <type api="T:System.Data.Linq.Table`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="T_System_Linq_IQueryable`1" />
    </api>
    <api id="AllMembers.T:System.Linq.IQueryable`1">
      <topicdata name="IQueryable" group="list" subgroup="members" typeTopicId="T:System.Linq.IQueryable`1" />
      <apidata name="IQueryable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.Linq.IQueryable`1.GetEnumerator">
          <element api="M:System.Collections.IEnumerable.GetEnumerator" />
          <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        </element>
        <element api="P:System.Linq.IQueryable.ElementType" />
        <element api="P:System.Linq.IQueryable.Expression" />
        <element api="P:System.Linq.IQueryable.Provider" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="AllMembers_T_System_Linq_IQueryable`1" />
    </api>
    <api id="Overload:System.Linq.IQueryable`1.GetEnumerator">
      <topicdata name="GetEnumerator" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.IQueryable`1" allInherited="true" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.IQueryable`1" />
      </containers>
      <file name="O_T_System_Linq_IQueryable`1_GetEnumerator" />
    </api>
    <api id="T:System.Linq.IQueryProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.IQueryProvider" />
      <apidata name="IQueryProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:System.Data.Linq.Table`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="T_System_Linq_IQueryProvider" />
    </api>
    <api id="AllMembers.T:System.Linq.IQueryProvider">
      <topicdata name="IQueryProvider" group="list" subgroup="members" typeTopicId="T:System.Linq.IQueryProvider" />
      <apidata name="IQueryProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.Linq.IQueryProvider.CreateQuery">
          <element api="M:System.Linq.IQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.IQueryProvider.CreateQuery(System.Linq.Expressions.Expression)" />
        </element>
        <element api="Overload:System.Linq.IQueryProvider.Execute">
          <element api="M:System.Linq.IQueryProvider.Execute``1(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.IQueryProvider.Execute(System.Linq.Expressions.Expression)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="AllMembers_T_System_Linq_IQueryProvider" />
    </api>
    <api id="Methods.T:System.Linq.IQueryProvider">
      <topicdata name="IQueryProvider" group="list" subgroup="Methods" typeTopicId="T:System.Linq.IQueryProvider" />
      <apidata name="IQueryProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.Linq.IQueryProvider.CreateQuery">
          <element api="M:System.Linq.IQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.IQueryProvider.CreateQuery(System.Linq.Expressions.Expression)" />
        </element>
        <element api="Overload:System.Linq.IQueryProvider.Execute">
          <element api="M:System.Linq.IQueryProvider.Execute``1(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.IQueryProvider.Execute(System.Linq.Expressions.Expression)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="Methods_T_System_Linq_IQueryProvider" />
    </api>
    <api id="Overload:System.Linq.IQueryProvider.CreateQuery">
      <topicdata name="CreateQuery" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.IQueryProvider" />
      <apidata name="CreateQuery" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.IQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.IQueryProvider.CreateQuery(System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.IQueryProvider" ref="true" />
      </containers>
      <file name="O_T_System_Linq_IQueryProvider_CreateQuery" />
    </api>
    <api id="Overload:System.Linq.IQueryProvider.Execute">
      <topicdata name="Execute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.IQueryProvider" />
      <apidata name="Execute" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.IQueryProvider.Execute``1(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.IQueryProvider.Execute(System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.IQueryProvider" ref="true" />
      </containers>
      <file name="O_T_System_Linq_IQueryProvider_Execute" />
    </api>
    <api id="M:System.Linq.IQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="CreateQuery" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Linq.IQueryProvider.CreateQuery" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="TElement" />
      </templates>
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TElement" index="0" api="M:System.Linq.IQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.IQueryProvider" ref="true" />
      </containers>
      <file name="M_System_Linq_IQueryProvider_CreateQuery``1_1_31cd44d4" />
    </api>
    <api id="M:System.Linq.IQueryProvider.CreateQuery(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="CreateQuery" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Linq.IQueryProvider.CreateQuery" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.IQueryProvider" ref="true" />
      </containers>
      <file name="M_System_Linq_IQueryProvider_CreateQuery_1_31cd44d4" />
    </api>
    <api id="M:System.Linq.IQueryProvider.Execute``1(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Linq.IQueryProvider.Execute" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="0" api="M:System.Linq.IQueryProvider.Execute``1(System.Linq.Expressions.Expression)" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.IQueryProvider" ref="true" />
      </containers>
      <file name="M_System_Linq_IQueryProvider_Execute``1_1_31cd44d4" />
    </api>
    <api id="M:System.Linq.IQueryProvider.Execute(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Linq.IQueryProvider.Execute" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.IQueryProvider" ref="true" />
      </containers>
      <file name="M_System_Linq_IQueryProvider_Execute_1_31cd44d4" />
    </api>
    <api id="T:System.Linq.Lookup`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Lookup`2" />
      <apidata name="Lookup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <implements>
        <type api="T:System.Linq.ILookup`2" ref="true">
          <specialization>
            <template name="TKey" index="0" api="T:System.Linq.Lookup`2" />
            <template name="TElement" index="1" api="T:System.Linq.Lookup`2" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Linq.IGrouping`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:System.Linq.ILookup`2" />
                <template name="TElement" index="1" api="T:System.Linq.ILookup`2" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="T_System_Linq_Lookup`2" />
    </api>
    <api id="AllMembers.T:System.Linq.Lookup`2">
      <topicdata name="Lookup" group="list" subgroup="members" typeTopicId="T:System.Linq.Lookup`2" />
      <apidata name="Lookup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})" />
        <element api="M:System.Linq.Lookup`2.Contains(`0)" />
        <element api="P:System.Linq.Lookup`2.Count" />
        <element api="M:System.Linq.Lookup`2.GetEnumerator" />
        <element api="P:System.Linq.Lookup`2.Item(`0)" />
        <element api="M:System.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="AllMembers_T_System_Linq_Lookup`2" />
    </api>
    <api id="Methods.T:System.Linq.Lookup`2">
      <topicdata name="Lookup" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Lookup`2" />
      <apidata name="Lookup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})" />
        <element api="M:System.Linq.Lookup`2.Contains(`0)" />
        <element api="M:System.Linq.Lookup`2.GetEnumerator" />
        <element api="M:System.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="Methods_T_System_Linq_Lookup`2" />
    </api>
    <api id="Properties.T:System.Linq.Lookup`2">
      <topicdata name="Lookup" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Lookup`2" />
      <apidata name="Lookup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <elements>
        <element api="P:System.Linq.Lookup`2.Count" />
        <element api="P:System.Linq.Lookup`2.Item(`0)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="Properties_T_System_Linq_Lookup`2" />
    </api>
    <api id="M:System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})">
      <topicdata group="api" />
      <apidata name="ApplyResultSelector" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="resultSelector">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:System.Linq.Lookup`2" />
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TElement" index="1" api="T:System.Linq.Lookup`2" />
                </specialization>
              </type>
              <template name="TResult" index="0" api="M:System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Lookup`2" ref="true" />
      </containers>
      <file name="M_System_Linq_Lookup`2_ApplyResultSelector``1_3_eb42e643" />
    </api>
    <api id="M:System.Linq.Lookup`2.Contains(`0)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:System.Linq.Lookup`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Linq.ILookup`2.Contains(`0)">
          <type api="T:System.Linq.ILookup`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:System.Linq.Lookup`2" />
              <template name="TElement" index="1" api="T:System.Linq.Lookup`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Lookup`2" ref="true" />
      </containers>
      <file name="M_System_Linq_Lookup`2_Contains_1_1a965722" />
    </api>
    <api id="P:System.Linq.Lookup`2.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Linq.ILookup`2.Count">
          <type api="T:System.Linq.ILookup`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:System.Linq.Lookup`2" />
              <template name="TElement" index="1" api="T:System.Linq.Lookup`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Lookup`2" ref="true" />
      </containers>
      <file name="P_System_Linq_Lookup`2_Count" />
    </api>
    <api id="M:System.Linq.Lookup`2.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Linq.IGrouping`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:System.Linq.Lookup`2" />
                <template name="TElement" index="1" api="T:System.Linq.Lookup`2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Lookup`2" ref="true" />
      </containers>
      <file name="M_System_Linq_Lookup`2_GetEnumerator" />
    </api>
    <api id="P:System.Linq.Lookup`2.Item(`0)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:System.Linq.Lookup`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TElement" index="1" api="T:System.Linq.Lookup`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.Linq.ILookup`2.Item(`0)">
          <type api="T:System.Linq.ILookup`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:System.Linq.Lookup`2" />
              <template name="TElement" index="1" api="T:System.Linq.Lookup`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Lookup`2" ref="true" />
      </containers>
      <file name="P_System_Linq_Lookup`2_Item_1_1a965722" />
    </api>
    <api id="M:System.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Lookup`2" ref="true" />
      </containers>
      <file name="M_System_Linq_Lookup`2_System_Collections_IEnumerable_GetEnumerator" />
    </api>
    <api id="T:System.Linq.Queryable">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Queryable" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="T_System_Linq_Queryable" />
    </api>
    <api id="AllMembers.T:System.Linq.Queryable">
      <topicdata name="Queryable" group="list" subgroup="members" typeTopicId="T:System.Linq.Queryable" />
      <apidata name="Queryable" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.Linq.Queryable.Aggregate">
          <element api="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})" />
          <element api="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})" />
          <element api="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
        </element>
        <element api="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        <element api="Overload:System.Linq.Queryable.Any">
          <element api="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.AsQueryable">
          <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" />
        </element>
        <element api="Overload:System.Linq.Queryable.Average">
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
        </element>
        <element api="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)" />
        <element api="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="Overload:System.Linq.Queryable.Contains">
          <element api="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)" />
          <element api="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Count">
          <element api="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.DefaultIfEmpty">
          <element api="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)" />
        </element>
        <element api="Overload:System.Linq.Queryable.Distinct">
          <element api="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)" />
        <element api="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)" />
        <element api="Overload:System.Linq.Queryable.Except">
          <element api="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Queryable.First">
          <element api="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.FirstOrDefault">
          <element api="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.GroupBy">
          <element api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          <element api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})" />
          <element api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})" />
          <element api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})" />
          <element api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})" />
          <element api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})" />
          <element api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})" />
          <element api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
        </element>
        <element api="Overload:System.Linq.Queryable.GroupJoin">
          <element api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
          <element api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Intersect">
          <element api="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Join">
          <element api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
          <element api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Last">
          <element api="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.LastOrDefault">
          <element api="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.LongCount">
          <element api="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Max">
          <element api="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Min">
          <element api="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        </element>
        <element api="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)" />
        <element api="Overload:System.Linq.Queryable.OrderBy">
          <element api="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          <element api="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Linq.Queryable.OrderByDescending">
          <element api="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          <element api="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})" />
        <element api="Overload:System.Linq.Queryable.Select">
          <element api="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          <element api="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.SelectMany">
          <element api="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})" />
          <element api="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})" />
          <element api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
          <element api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.SequenceEqual">
          <element api="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Single">
          <element api="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.SingleOrDefault">
          <element api="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)" />
        <element api="Overload:System.Linq.Queryable.SkipWhile">
          <element api="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
          <element api="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Sum">
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
        </element>
        <element api="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)" />
        <element api="Overload:System.Linq.Queryable.TakeWhile">
          <element api="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
          <element api="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.ThenBy">
          <element api="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          <element api="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Linq.Queryable.ThenByDescending">
          <element api="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          <element api="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Union">
          <element api="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Where">
          <element api="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
          <element api="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="AllMembers_T_System_Linq_Queryable" />
    </api>
    <api id="Methods.T:System.Linq.Queryable">
      <topicdata name="Queryable" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Queryable" />
      <apidata name="Queryable" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.Linq.Queryable.Aggregate">
          <element api="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})" />
          <element api="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})" />
          <element api="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
        </element>
        <element api="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        <element api="Overload:System.Linq.Queryable.Any">
          <element api="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.AsQueryable">
          <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" />
        </element>
        <element api="Overload:System.Linq.Queryable.Average">
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})" />
          <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
          <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
        </element>
        <element api="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)" />
        <element api="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="Overload:System.Linq.Queryable.Contains">
          <element api="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)" />
          <element api="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Count">
          <element api="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.DefaultIfEmpty">
          <element api="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)" />
        </element>
        <element api="Overload:System.Linq.Queryable.Distinct">
          <element api="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)" />
        <element api="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)" />
        <element api="Overload:System.Linq.Queryable.Except">
          <element api="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Queryable.First">
          <element api="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.FirstOrDefault">
          <element api="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.GroupBy">
          <element api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          <element api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})" />
          <element api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})" />
          <element api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})" />
          <element api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})" />
          <element api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})" />
          <element api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})" />
          <element api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
        </element>
        <element api="Overload:System.Linq.Queryable.GroupJoin">
          <element api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
          <element api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Intersect">
          <element api="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Join">
          <element api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
          <element api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Last">
          <element api="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.LastOrDefault">
          <element api="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.LongCount">
          <element api="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Max">
          <element api="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Min">
          <element api="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        </element>
        <element api="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)" />
        <element api="Overload:System.Linq.Queryable.OrderBy">
          <element api="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          <element api="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Linq.Queryable.OrderByDescending">
          <element api="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          <element api="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})" />
        <element api="Overload:System.Linq.Queryable.Select">
          <element api="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          <element api="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.SelectMany">
          <element api="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})" />
          <element api="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})" />
          <element api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
          <element api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.SequenceEqual">
          <element api="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Single">
          <element api="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.SingleOrDefault">
          <element api="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})" />
          <element api="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        </element>
        <element api="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)" />
        <element api="Overload:System.Linq.Queryable.SkipWhile">
          <element api="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
          <element api="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Sum">
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})" />
          <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
          <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
        </element>
        <element api="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)" />
        <element api="Overload:System.Linq.Queryable.TakeWhile">
          <element api="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
          <element api="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
        </element>
        <element api="Overload:System.Linq.Queryable.ThenBy">
          <element api="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          <element api="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Linq.Queryable.ThenByDescending">
          <element api="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          <element api="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Union">
          <element api="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
        </element>
        <element api="Overload:System.Linq.Queryable.Where">
          <element api="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
          <element api="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
      </containers>
      <file name="Methods_T_System_Linq_Queryable" />
    </api>
    <api id="Overload:System.Linq.Queryable.Aggregate">
      <topicdata name="Aggregate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Aggregate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})" />
        <element api="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})" />
        <element api="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Aggregate" />
    </api>
    <api id="Overload:System.Linq.Queryable.Any">
      <topicdata name="Any" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Any" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})" />
        <element api="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Any" />
    </api>
    <api id="Overload:System.Linq.Queryable.AsQueryable">
      <topicdata name="AsQueryable" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="AsQueryable" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_AsQueryable" />
    </api>
    <api id="Overload:System.Linq.Queryable.Average">
      <topicdata name="Average" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Average" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})" />
        <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})" />
        <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})" />
        <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})" />
        <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})" />
        <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})" />
        <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})" />
        <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})" />
        <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})" />
        <element api="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})" />
        <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
        <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
        <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
        <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
        <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
        <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
        <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
        <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
        <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
        <element api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Average" />
    </api>
    <api id="Overload:System.Linq.Queryable.Contains">
      <topicdata name="Contains" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Contains" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)" />
        <element api="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Contains" />
    </api>
    <api id="Overload:System.Linq.Queryable.Count">
      <topicdata name="Count" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Count" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})" />
        <element api="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Count" />
    </api>
    <api id="Overload:System.Linq.Queryable.DefaultIfEmpty">
      <topicdata name="DefaultIfEmpty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="DefaultIfEmpty" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})" />
        <element api="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_DefaultIfEmpty" />
    </api>
    <api id="Overload:System.Linq.Queryable.Distinct">
      <topicdata name="Distinct" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Distinct" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})" />
        <element api="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Distinct" />
    </api>
    <api id="Overload:System.Linq.Queryable.Except">
      <topicdata name="Except" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Except" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Except" />
    </api>
    <api id="Overload:System.Linq.Queryable.First">
      <topicdata name="First" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="First" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})" />
        <element api="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_First" />
    </api>
    <api id="Overload:System.Linq.Queryable.FirstOrDefault">
      <topicdata name="FirstOrDefault" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="FirstOrDefault" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})" />
        <element api="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_FirstOrDefault" />
    </api>
    <api id="Overload:System.Linq.Queryable.GroupBy">
      <topicdata name="GroupBy" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <element api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})" />
        <element api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})" />
        <element api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})" />
        <element api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})" />
        <element api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})" />
        <element api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})" />
        <element api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_GroupBy" />
    </api>
    <api id="Overload:System.Linq.Queryable.GroupJoin">
      <topicdata name="GroupJoin" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="GroupJoin" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
        <element api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_GroupJoin" />
    </api>
    <api id="Overload:System.Linq.Queryable.Intersect">
      <topicdata name="Intersect" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Intersect" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Intersect" />
    </api>
    <api id="Overload:System.Linq.Queryable.Join">
      <topicdata name="Join" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Join" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
        <element api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Join" />
    </api>
    <api id="Overload:System.Linq.Queryable.Last">
      <topicdata name="Last" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Last" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})" />
        <element api="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Last" />
    </api>
    <api id="Overload:System.Linq.Queryable.LastOrDefault">
      <topicdata name="LastOrDefault" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="LastOrDefault" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})" />
        <element api="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_LastOrDefault" />
    </api>
    <api id="Overload:System.Linq.Queryable.LongCount">
      <topicdata name="LongCount" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="LongCount" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})" />
        <element api="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_LongCount" />
    </api>
    <api id="Overload:System.Linq.Queryable.Max">
      <topicdata name="Max" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Max" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})" />
        <element api="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Max" />
    </api>
    <api id="Overload:System.Linq.Queryable.Min">
      <topicdata name="Min" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Min" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})" />
        <element api="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Min" />
    </api>
    <api id="Overload:System.Linq.Queryable.OrderBy">
      <topicdata name="OrderBy" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <element api="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_OrderBy" />
    </api>
    <api id="Overload:System.Linq.Queryable.OrderByDescending">
      <topicdata name="OrderByDescending" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <element api="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_OrderByDescending" />
    </api>
    <api id="Overload:System.Linq.Queryable.Select">
      <topicdata name="Select" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Select" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <element api="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Select" />
    </api>
    <api id="Overload:System.Linq.Queryable.SelectMany">
      <topicdata name="SelectMany" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="SelectMany" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})" />
        <element api="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})" />
        <element api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
        <element api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_SelectMany" />
    </api>
    <api id="Overload:System.Linq.Queryable.SequenceEqual">
      <topicdata name="SequenceEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="SequenceEqual" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_SequenceEqual" />
    </api>
    <api id="Overload:System.Linq.Queryable.Single">
      <topicdata name="Single" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Single" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})" />
        <element api="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Single" />
    </api>
    <api id="Overload:System.Linq.Queryable.SingleOrDefault">
      <topicdata name="SingleOrDefault" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="SingleOrDefault" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})" />
        <element api="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_SingleOrDefault" />
    </api>
    <api id="Overload:System.Linq.Queryable.SkipWhile">
      <topicdata name="SkipWhile" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="SkipWhile" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        <element api="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_SkipWhile" />
    </api>
    <api id="Overload:System.Linq.Queryable.Sum">
      <topicdata name="Sum" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Sum" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})" />
        <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})" />
        <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})" />
        <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})" />
        <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})" />
        <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})" />
        <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})" />
        <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})" />
        <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})" />
        <element api="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})" />
        <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
        <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
        <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
        <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
        <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
        <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
        <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
        <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
        <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
        <element api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Sum" />
    </api>
    <api id="Overload:System.Linq.Queryable.TakeWhile">
      <topicdata name="TakeWhile" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="TakeWhile" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        <element api="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_TakeWhile" />
    </api>
    <api id="Overload:System.Linq.Queryable.ThenBy">
      <topicdata name="ThenBy" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <element api="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_ThenBy" />
    </api>
    <api id="Overload:System.Linq.Queryable.ThenByDescending">
      <topicdata name="ThenByDescending" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <element api="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_ThenByDescending" />
    </api>
    <api id="Overload:System.Linq.Queryable.Union">
      <topicdata name="Union" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Union" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Union" />
    </api>
    <api id="Overload:System.Linq.Queryable.Where">
      <topicdata name="Where" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Queryable" />
      <apidata name="Where" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
        <element api="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Queryable_Where" />
    </api>
    <api id="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})">
      <topicdata group="api" />
      <apidata name="Aggregate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Aggregate" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="func">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})" />
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})" />
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Aggregate``1_4_11df586d" />
    </api>
    <api id="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
      <topicdata group="api" />
      <apidata name="Aggregate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Aggregate" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TAccumulate" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="seed">
          <template name="TAccumulate" index="1" api="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})" />
        </parameter>
        <parameter name="func">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})" />
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TAccumulate" index="1" api="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Aggregate``2_5_d0721f38" />
    </api>
    <api id="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
      <topicdata group="api" />
      <apidata name="Aggregate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Aggregate" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TAccumulate" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="seed">
          <template name="TAccumulate" index="1" api="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
        </parameter>
        <parameter name="func">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
                  <template name="TResult" index="2" api="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="2" api="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Aggregate``3_7_5cdce181" />
    </api>
    <api id="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="All" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_All``1_3_831869a8" />
    </api>
    <api id="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})">
      <topicdata group="api" />
      <apidata name="Any" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Any" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Any``1_1_65b0f736" />
    </api>
    <api id="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="Any" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Any" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Any``1_3_831869a8" />
    </api>
    <api id="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="AsQueryable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.AsQueryable" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TElement" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TElement" index="0" api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TElement" index="0" api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_AsQueryable``1_1_d81add7c" />
    </api>
    <api id="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="AsQueryable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.AsQueryable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_AsQueryable_1_2fa4d2ad" />
    </api>
    <api id="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Decimal" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average_1_0f350c4f" />
    </api>
    <api id="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average_1_d4e16cd8" />
    </api>
    <api id="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average_1_b0375fbd" />
    </api>
    <api id="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average_1_b17701ec" />
    </api>
    <api id="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average_1_1c56d843" />
    </api>
    <api id="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average_1_bc167ff7" />
    </api>
    <api id="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average_1_a2c51721" />
    </api>
    <api id="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average_1_4d5e054e" />
    </api>
    <api id="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average_1_78f4d4e8" />
    </api>
    <api id="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Single" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average_1_c141552d" />
    </api>
    <api id="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average``1_3_260ea9b7" />
    </api>
    <api id="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average``1_3_16d483e3" />
    </api>
    <api id="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average``1_3_a01d3dbb" />
    </api>
    <api id="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average``1_3_35bed84a" />
    </api>
    <api id="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average``1_3_d10d3c68" />
    </api>
    <api id="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average``1_3_d3c4fddc" />
    </api>
    <api id="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average``1_3_4e3d7e66" />
    </api>
    <api id="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average``1_3_eaf69de1" />
    </api>
    <api id="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average``1_3_eefde76a" />
    </api>
    <api id="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Average" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Average``1_3_a6b5ff8e" />
    </api>
    <api id="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)">
      <topicdata group="api" />
      <apidata name="Cast" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Cast``1_1_b9a36cac" />
    </api>
    <api id="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Concat" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source1">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source2">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Concat``1_2_e2a696ed" />
    </api>
    <api id="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Contains" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="item">
          <template name="TSource" index="0" api="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Contains``1_2_2dce31aa" />
    </api>
    <api id="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Contains" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="item">
          <template name="TSource" index="0" api="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Contains``1_3_fad6aceb" />
    </api>
    <api id="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Count" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Count``1_1_65b0f736" />
    </api>
    <api id="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Count" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Count``1_3_831869a8" />
    </api>
    <api id="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})">
      <topicdata group="api" />
      <apidata name="DefaultIfEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.DefaultIfEmpty" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_DefaultIfEmpty``1_1_65b0f736" />
    </api>
    <api id="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)">
      <topicdata group="api" />
      <apidata name="DefaultIfEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.DefaultIfEmpty" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="defaultValue">
          <template name="TSource" index="0" api="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_DefaultIfEmpty``1_2_2dce31aa" />
    </api>
    <api id="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})">
      <topicdata group="api" />
      <apidata name="Distinct" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Distinct" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Distinct``1_1_65b0f736" />
    </api>
    <api id="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <topicdata group="api" />
      <apidata name="Distinct" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Distinct" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Distinct``1_2_4a47fa5c" />
    </api>
    <api id="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="ElementAt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_ElementAt``1_2_af9a32e4" />
    </api>
    <api id="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="ElementAtOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_ElementAtOrDefault``1_2_af9a32e4" />
    </api>
    <api id="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Except" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Except" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source1">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source2">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Except``1_2_e2a696ed" />
    </api>
    <api id="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <topicdata group="api" />
      <apidata name="Except" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Except" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source1">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source2">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Except``1_3_1c99d631" />
    </api>
    <api id="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})">
      <topicdata group="api" />
      <apidata name="First" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.First" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_First``1_1_65b0f736" />
    </api>
    <api id="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="First" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.First" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_First``1_3_831869a8" />
    </api>
    <api id="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})">
      <topicdata group="api" />
      <apidata name="FirstOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.FirstOrDefault" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_FirstOrDefault``1_1_65b0f736" />
    </api>
    <api id="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="FirstOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.FirstOrDefault" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_FirstOrDefault``1_3_831869a8" />
    </api>
    <api id="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.GroupBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <type api="T:System.Linq.IGrouping`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_GroupBy``2_3_251f847d" />
    </api>
    <api id="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.GroupBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <type api="T:System.Linq.IGrouping`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_GroupBy``2_4_2cb90789" />
    </api>
    <api id="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.GroupBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})" />
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="elementSelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})" />
                  <template name="TElement" index="2" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <type api="T:System.Linq.IGrouping`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})" />
                <template name="TElement" index="2" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_GroupBy``3_5_0509ee3f" />
    </api>
    <api id="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.GroupBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TElement" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="elementSelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})" />
                  <template name="TElement" index="2" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <type api="T:System.Linq.IGrouping`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_GroupBy``3_6_8004ff30" />
    </api>
    <api id="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.GroupBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TElement" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})" />
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="elementSelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})" />
                  <template name="TElement" index="2" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TResult" index="3" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_GroupBy``4_8_30f7029e" />
    </api>
    <api id="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.GroupBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TElement" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="elementSelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
                  <template name="TElement" index="2" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TResult" index="3" api="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_GroupBy``4_9_c6c8a01c" />
    </api>
    <api id="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.GroupBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})" />
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TResult" index="2" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_GroupBy``3_6_4d9d8af3" />
    </api>
    <api id="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.GroupBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TSource" index="0" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TResult" index="2" api="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_GroupBy``3_7_13c4ca85" />
    </api>
    <api id="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
      <topicdata group="api" />
      <apidata name="GroupJoin" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.GroupJoin" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TOuter" />
        <template name="TInner" />
        <template name="TKey" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="outer">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="inner">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TInner" index="1" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="outerKeySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TOuter" index="0" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
                  <template name="TKey" index="2" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="innerKeySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
                  <template name="TKey" index="2" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TOuter" index="0" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TResult" index="3" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_GroupJoin``4_9_724896d4" />
    </api>
    <api id="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
      <topicdata group="api" />
      <apidata name="GroupJoin" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.GroupJoin" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TOuter" />
        <template name="TInner" />
        <template name="TKey" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="outer">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="inner">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TInner" index="1" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="outerKeySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TOuter" index="0" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="innerKeySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TOuter" index="0" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="2" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TResult" index="3" api="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_GroupJoin``4_10_7edd62a4" />
    </api>
    <api id="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Intersect" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Intersect" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source1">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source2">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Intersect``1_2_e2a696ed" />
    </api>
    <api id="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <topicdata group="api" />
      <apidata name="Intersect" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Intersect" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source1">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source2">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Intersect``1_3_1c99d631" />
    </api>
    <api id="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
      <topicdata group="api" />
      <apidata name="Join" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Join" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TOuter" />
        <template name="TInner" />
        <template name="TKey" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="outer">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="inner">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TInner" index="1" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="outerKeySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TOuter" index="0" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
                  <template name="TKey" index="2" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="innerKeySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
                  <template name="TKey" index="2" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TOuter" index="0" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
                  <template name="TInner" index="1" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
                  <template name="TResult" index="3" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TResult" index="3" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Join``4_9_5e7f758d" />
    </api>
    <api id="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
      <topicdata group="api" />
      <apidata name="Join" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Join" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TOuter" />
        <template name="TInner" />
        <template name="TKey" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="outer">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="inner">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TInner" index="1" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="outerKeySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TOuter" index="0" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="innerKeySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TOuter" index="0" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TInner" index="1" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="2" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TResult" index="3" api="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Join``4_10_699acdee" />
    </api>
    <api id="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})">
      <topicdata group="api" />
      <apidata name="Last" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Last" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Last``1_1_65b0f736" />
    </api>
    <api id="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="Last" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Last" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Last``1_3_831869a8" />
    </api>
    <api id="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})">
      <topicdata group="api" />
      <apidata name="LastOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.LastOrDefault" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_LastOrDefault``1_1_65b0f736" />
    </api>
    <api id="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="LastOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.LastOrDefault" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_LastOrDefault``1_3_831869a8" />
    </api>
    <api id="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})">
      <topicdata group="api" />
      <apidata name="LongCount" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.LongCount" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_LongCount``1_1_65b0f736" />
    </api>
    <api id="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="LongCount" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.LongCount" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_LongCount``1_3_831869a8" />
    </api>
    <api id="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Max" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Max``1_1_65b0f736" />
    </api>
    <api id="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Max" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                  <template name="TResult" index="1" api="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="1" api="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Max``2_3_251f847d" />
    </api>
    <api id="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Min" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Min``1_1_65b0f736" />
    </api>
    <api id="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Min" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                  <template name="TResult" index="1" api="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="1" api="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Min``2_3_251f847d" />
    </api>
    <api id="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)">
      <topicdata group="api" />
      <apidata name="OfType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_OfType``1_1_b9a36cac" />
    </api>
    <api id="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <topicdata group="api" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.OrderBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_OrderBy``2_3_251f847d" />
    </api>
    <api id="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.OrderBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_OrderBy``2_4_d51301a4" />
    </api>
    <api id="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <topicdata group="api" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.OrderByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_OrderByDescending``2_3_251f847d" />
    </api>
    <api id="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.OrderByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_OrderByDescending``2_4_d51301a4" />
    </api>
    <api id="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})">
      <topicdata group="api" />
      <apidata name="Reverse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Reverse``1_1_65b0f736" />
    </api>
    <api id="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Select" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                  <template name="TResult" index="1" api="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Select``2_3_251f847d" />
    </api>
    <api id="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Select" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Select``2_4_9f0ee2b8" />
    </api>
    <api id="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
      <topicdata group="api" />
      <apidata name="SelectMany" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.SelectMany" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TCollection" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="collectionSelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
                  <template name="TCollection" index="1" api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
                  <template name="TResult" index="2" api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TResult" index="2" api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_SelectMany``3_6_6344faa1" />
    </api>
    <api id="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
      <topicdata group="api" />
      <apidata name="SelectMany" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.SelectMany" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_SelectMany``2_3_4040f3da" />
    </api>
    <api id="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
      <topicdata group="api" />
      <apidata name="SelectMany" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.SelectMany" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TCollection" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="collectionSelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
                  <template name="TCollection" index="1" api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
                  <template name="TResult" index="2" api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TResult" index="2" api="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_SelectMany``3_7_8b7edb96" />
    </api>
    <api id="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
      <topicdata group="api" />
      <apidata name="SelectMany" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.SelectMany" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_SelectMany``2_4_ea05e697" />
    </api>
    <api id="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="SequenceEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.SequenceEqual" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source1">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source2">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_SequenceEqual``1_2_e2a696ed" />
    </api>
    <api id="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <topicdata group="api" />
      <apidata name="SequenceEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.SequenceEqual" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source1">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source2">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_SequenceEqual``1_3_1c99d631" />
    </api>
    <api id="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})">
      <topicdata group="api" />
      <apidata name="Single" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Single" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Single``1_1_65b0f736" />
    </api>
    <api id="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="Single" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Single" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Single``1_3_831869a8" />
    </api>
    <api id="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})">
      <topicdata group="api" />
      <apidata name="SingleOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.SingleOrDefault" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_SingleOrDefault``1_1_65b0f736" />
    </api>
    <api id="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="SingleOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.SingleOrDefault" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TSource" index="0" api="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_SingleOrDefault``1_3_831869a8" />
    </api>
    <api id="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="Skip" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Skip``1_2_af9a32e4" />
    </api>
    <api id="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="SkipWhile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.SkipWhile" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_SkipWhile``1_3_831869a8" />
    </api>
    <api id="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="SkipWhile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.SkipWhile" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_SkipWhile``1_4_7e34208e" />
    </api>
    <api id="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Decimal" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum_1_0f350c4f" />
    </api>
    <api id="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum_1_d4e16cd8" />
    </api>
    <api id="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum_1_b0375fbd" />
    </api>
    <api id="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum_1_b17701ec" />
    </api>
    <api id="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum_1_1c56d843" />
    </api>
    <api id="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum_1_bc167ff7" />
    </api>
    <api id="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum_1_a2c51721" />
    </api>
    <api id="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum_1_4d5e054e" />
    </api>
    <api id="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum_1_78f4d4e8" />
    </api>
    <api id="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <type api="T:System.Single" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum_1_c141552d" />
    </api>
    <api id="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum``1_3_260ea9b7" />
    </api>
    <api id="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum``1_3_16d483e3" />
    </api>
    <api id="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum``1_3_a01d3dbb" />
    </api>
    <api id="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum``1_3_35bed84a" />
    </api>
    <api id="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum``1_3_d10d3c68" />
    </api>
    <api id="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum``1_3_d3c4fddc" />
    </api>
    <api id="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum``1_3_4e3d7e66" />
    </api>
    <api id="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum``1_3_eaf69de1" />
    </api>
    <api id="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum``1_3_eefde76a" />
    </api>
    <api id="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Sum" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Sum``1_3_a6b5ff8e" />
    </api>
    <api id="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="Take" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Take``1_2_af9a32e4" />
    </api>
    <api id="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="TakeWhile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.TakeWhile" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_TakeWhile``1_3_831869a8" />
    </api>
    <api id="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="TakeWhile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.TakeWhile" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_TakeWhile``1_4_7e34208e" />
    </api>
    <api id="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <topicdata group="api" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.ThenBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IOrderedQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_ThenBy``2_3_69d7572c" />
    </api>
    <api id="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.ThenBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IOrderedQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_ThenBy``2_4_e37859f1" />
    </api>
    <api id="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <topicdata group="api" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.ThenByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IOrderedQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_ThenByDescending``2_3_69d7572c" />
    </api>
    <api id="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.ThenByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IOrderedQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IOrderedQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_ThenByDescending``2_4_e37859f1" />
    </api>
    <api id="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Union" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source1">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source2">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Union``1_2_e2a696ed" />
    </api>
    <api id="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <topicdata group="api" />
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Union" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source1">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source2">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Union``1_3_1c99d631" />
    </api>
    <api id="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="Where" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Where" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Where``1_3_831869a8" />
    </api>
    <api id="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="Where" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Queryable.Where" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TSource" index="0" api="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="TSource" index="0" api="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq" />
        <type api="T:System.Linq.Queryable" ref="true" />
      </containers>
      <file name="M_System_Linq_Queryable_Where``1_4_7e34208e" />
    </api>
    <api id="T:System.Linq.Expressions.BinaryExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.BinaryExpression" />
      <apidata name="BinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_BinaryExpression" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.BinaryExpression">
      <topicdata name="BinaryExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.BinaryExpression" />
      <apidata name="BinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.BinaryExpression.Conversion" />
        <element api="P:System.Linq.Expressions.BinaryExpression.IsLifted" />
        <element api="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />
        <element api="P:System.Linq.Expressions.BinaryExpression.Left" />
        <element api="P:System.Linq.Expressions.BinaryExpression.Method" />
        <element api="P:System.Linq.Expressions.BinaryExpression.Right" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_BinaryExpression" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.BinaryExpression">
      <topicdata name="BinaryExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.BinaryExpression" />
      <apidata name="BinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.BinaryExpression.Conversion" />
        <element api="P:System.Linq.Expressions.BinaryExpression.IsLifted" />
        <element api="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />
        <element api="P:System.Linq.Expressions.BinaryExpression.Left" />
        <element api="P:System.Linq.Expressions.BinaryExpression.Method" />
        <element api="P:System.Linq.Expressions.BinaryExpression.Right" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_BinaryExpression" />
    </api>
    <api id="P:System.Linq.Expressions.BinaryExpression.Conversion">
      <topicdata group="api" />
      <apidata name="Conversion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_BinaryExpression_Conversion" />
    </api>
    <api id="P:System.Linq.Expressions.BinaryExpression.IsLifted">
      <topicdata group="api" />
      <apidata name="IsLifted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_BinaryExpression_IsLifted" />
    </api>
    <api id="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull">
      <topicdata group="api" />
      <apidata name="IsLiftedToNull" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_BinaryExpression_IsLiftedToNull" />
    </api>
    <api id="P:System.Linq.Expressions.BinaryExpression.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_BinaryExpression_Left" />
    </api>
    <api id="P:System.Linq.Expressions.BinaryExpression.Method">
      <topicdata group="api" />
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_BinaryExpression_Method" />
    </api>
    <api id="P:System.Linq.Expressions.BinaryExpression.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_BinaryExpression_Right" />
    </api>
    <api id="T:System.Linq.Expressions.ConditionalExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.ConditionalExpression" />
      <apidata name="ConditionalExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_ConditionalExpression" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.ConditionalExpression">
      <topicdata name="ConditionalExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.ConditionalExpression" />
      <apidata name="ConditionalExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.ConditionalExpression.IfFalse" />
        <element api="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />
        <element api="P:System.Linq.Expressions.ConditionalExpression.Test" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_ConditionalExpression" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.ConditionalExpression">
      <topicdata name="ConditionalExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.ConditionalExpression" />
      <apidata name="ConditionalExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.ConditionalExpression.IfFalse" />
        <element api="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />
        <element api="P:System.Linq.Expressions.ConditionalExpression.Test" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_ConditionalExpression" />
    </api>
    <api id="P:System.Linq.Expressions.ConditionalExpression.IfFalse">
      <topicdata group="api" />
      <apidata name="IfFalse" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_ConditionalExpression_IfFalse" />
    </api>
    <api id="P:System.Linq.Expressions.ConditionalExpression.IfTrue">
      <topicdata group="api" />
      <apidata name="IfTrue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_ConditionalExpression_IfTrue" />
    </api>
    <api id="P:System.Linq.Expressions.ConditionalExpression.Test">
      <topicdata group="api" />
      <apidata name="Test" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_ConditionalExpression_Test" />
    </api>
    <api id="T:System.Linq.Expressions.ConstantExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.ConstantExpression" />
      <apidata name="ConstantExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_ConstantExpression" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.ConstantExpression">
      <topicdata name="ConstantExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.ConstantExpression" />
      <apidata name="ConstantExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.ConstantExpression.Value" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_ConstantExpression" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.ConstantExpression">
      <topicdata name="ConstantExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.ConstantExpression" />
      <apidata name="ConstantExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.ConstantExpression.Value" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_ConstantExpression" />
    </api>
    <api id="P:System.Linq.Expressions.ConstantExpression.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConstantExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_ConstantExpression_Value" />
    </api>
    <api id="T:System.Linq.Expressions.ElementInit">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.ElementInit" />
      <apidata name="ElementInit" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_ElementInit" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.ElementInit">
      <topicdata name="ElementInit" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.ElementInit" />
      <apidata name="ElementInit" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.ElementInit.AddMethod" />
        <element api="P:System.Linq.Expressions.ElementInit.Arguments" />
        <element api="M:System.Linq.Expressions.ElementInit.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_ElementInit" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.ElementInit">
      <topicdata name="ElementInit" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.ElementInit" />
      <apidata name="ElementInit" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.ElementInit.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Methods_T_System_Linq_Expressions_ElementInit" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.ElementInit">
      <topicdata name="ElementInit" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.ElementInit" />
      <apidata name="ElementInit" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.ElementInit.AddMethod" />
        <element api="P:System.Linq.Expressions.ElementInit.Arguments" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_ElementInit" />
    </api>
    <api id="P:System.Linq.Expressions.ElementInit.AddMethod">
      <topicdata group="api" />
      <apidata name="AddMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_ElementInit_AddMethod" />
    </api>
    <api id="P:System.Linq.Expressions.ElementInit.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_ElementInit_Arguments" />
    </api>
    <api id="M:System.Linq.Expressions.ElementInit.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_ElementInit_ToString" />
    </api>
    <api id="T:System.Linq.Expressions.Expression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
          <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
          <type api="T:System.Linq.Expressions.ConstantExpression" ref="true" />
          <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
          <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
          <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
          <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
          <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
          <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
          <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
          <type api="T:System.Linq.Expressions.TypeBinaryExpression" ref="true" />
          <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_Expression" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.Expression">
      <topicdata name="Expression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.Expression" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.Expression.#ctor(System.Linq.Expressions.ExpressionType,System.Type)" />
        <element api="Overload:System.Linq.Expressions.Expression.Add">
          <element api="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.AddChecked">
          <element api="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.And">
          <element api="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.AndAlso">
          <element api="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ArrayIndex">
          <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)" />
        <element api="Overload:System.Linq.Expressions.Expression.Bind">
          <element api="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Call">
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Coalesce">
          <element api="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="Overload:System.Linq.Expressions.Expression.Constant">
          <element api="M:System.Linq.Expressions.Expression.Constant(System.Object)" />
          <element api="M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Convert">
          <element api="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ConvertChecked">
          <element api="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Divide">
          <element api="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ElementInit">
          <element api="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Equal">
          <element api="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ExclusiveOr">
          <element api="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Field">
          <element api="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
          <element api="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.GetActionType(System.Type[])" />
        <element api="M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])" />
        <element api="Overload:System.Linq.Expressions.Expression.GreaterThan">
          <element api="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.GreaterThanOrEqual">
          <element api="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Invoke">
          <element api="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Lambda">
          <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
          <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.LeftShift">
          <element api="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.LessThan">
          <element api="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.LessThanOrEqual">
          <element api="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ListBind">
          <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
          <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])" />
          <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
          <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ListInit">
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MakeBinary">
          <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)" />
        <element api="Overload:System.Linq.Expressions.Expression.MakeUnary">
          <element api="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MemberBind">
          <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
          <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])" />
          <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
          <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MemberInit">
          <element api="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
          <element api="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Modulo">
          <element api="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Multiply">
          <element api="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MultiplyChecked">
          <element api="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Negate">
          <element api="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.NegateChecked">
          <element api="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.New">
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.NewArrayBounds">
          <element api="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.NewArrayInit">
          <element api="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="Overload:System.Linq.Expressions.Expression.Not">
          <element api="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.NotEqual">
          <element api="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Or">
          <element api="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.OrElse">
          <element api="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)" />
        <element api="Overload:System.Linq.Expressions.Expression.Power">
          <element api="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Property">
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)" />
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)" />
        <element api="M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)" />
        <element api="Overload:System.Linq.Expressions.Expression.RightShift">
          <element api="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Subtract">
          <element api="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.SubtractChecked">
          <element api="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)" />
        <element api="Overload:System.Linq.Expressions.Expression.UnaryPlus">
          <element api="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_Expression" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.Expression">
      <topicdata name="Expression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.Expression" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Linq.Expressions.Expression.Add">
          <element api="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.AddChecked">
          <element api="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.And">
          <element api="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.AndAlso">
          <element api="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ArrayIndex">
          <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)" />
        <element api="Overload:System.Linq.Expressions.Expression.Bind">
          <element api="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Call">
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Coalesce">
          <element api="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="Overload:System.Linq.Expressions.Expression.Constant">
          <element api="M:System.Linq.Expressions.Expression.Constant(System.Object)" />
          <element api="M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Convert">
          <element api="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ConvertChecked">
          <element api="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Divide">
          <element api="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ElementInit">
          <element api="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Equal">
          <element api="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ExclusiveOr">
          <element api="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Field">
          <element api="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
          <element api="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.GetActionType(System.Type[])" />
        <element api="M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])" />
        <element api="Overload:System.Linq.Expressions.Expression.GreaterThan">
          <element api="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.GreaterThanOrEqual">
          <element api="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Invoke">
          <element api="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Lambda">
          <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
          <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.LeftShift">
          <element api="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.LessThan">
          <element api="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.LessThanOrEqual">
          <element api="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ListBind">
          <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
          <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])" />
          <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
          <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ListInit">
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MakeBinary">
          <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)" />
        <element api="Overload:System.Linq.Expressions.Expression.MakeUnary">
          <element api="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MemberBind">
          <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
          <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])" />
          <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
          <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MemberInit">
          <element api="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
          <element api="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Modulo">
          <element api="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Multiply">
          <element api="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MultiplyChecked">
          <element api="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Negate">
          <element api="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.NegateChecked">
          <element api="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.New">
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.NewArrayBounds">
          <element api="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.NewArrayInit">
          <element api="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Not">
          <element api="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.NotEqual">
          <element api="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Or">
          <element api="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.OrElse">
          <element api="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)" />
        <element api="Overload:System.Linq.Expressions.Expression.Power">
          <element api="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Property">
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)" />
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)" />
        <element api="M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)" />
        <element api="Overload:System.Linq.Expressions.Expression.RightShift">
          <element api="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Subtract">
          <element api="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.SubtractChecked">
          <element api="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)" />
        <element api="Overload:System.Linq.Expressions.Expression.UnaryPlus">
          <element api="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Methods_T_System_Linq_Expressions_Expression" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.Expression">
      <topicdata name="Expression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.Expression" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_Expression" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Add" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.AddChecked">
      <topicdata name="AddChecked" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="AddChecked" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_AddChecked" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.And">
      <topicdata name="And" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="And" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_And" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.AndAlso">
      <topicdata name="AndAlso" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="AndAlso" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_AndAlso" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.ArrayIndex">
      <topicdata name="ArrayIndex" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="ArrayIndex" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_ArrayIndex" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Bind">
      <topicdata name="Bind" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Bind" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Bind" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Call">
      <topicdata name="Call" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Call" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Call" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Coalesce">
      <topicdata name="Coalesce" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Coalesce" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Coalesce" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Constant">
      <topicdata name="Constant" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Constant" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Constant(System.Object)" />
        <element api="M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Constant" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Convert">
      <topicdata name="Convert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Convert" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Convert" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.ConvertChecked">
      <topicdata name="ConvertChecked" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="ConvertChecked" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_ConvertChecked" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Divide">
      <topicdata name="Divide" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Divide" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Divide" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.ElementInit">
      <topicdata name="ElementInit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="ElementInit" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_ElementInit" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Equal">
      <topicdata name="Equal" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Equal" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Equal" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.ExclusiveOr">
      <topicdata name="ExclusiveOr" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="ExclusiveOr" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_ExclusiveOr" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Field">
      <topicdata name="Field" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Field" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
        <element api="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Field" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.GreaterThan">
      <topicdata name="GreaterThan" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="GreaterThan" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_GreaterThan" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.GreaterThanOrEqual">
      <topicdata name="GreaterThanOrEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_GreaterThanOrEqual" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Invoke" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Lambda">
      <topicdata name="Lambda" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
        <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
        <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Lambda" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.LeftShift">
      <topicdata name="LeftShift" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="LeftShift" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_LeftShift" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.LessThan">
      <topicdata name="LessThan" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="LessThan" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_LessThan" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.LessThanOrEqual">
      <topicdata name="LessThanOrEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_LessThanOrEqual" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.ListBind">
      <topicdata name="ListBind" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="ListBind" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
        <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])" />
        <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
        <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_ListBind" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.ListInit">
      <topicdata name="ListInit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="ListInit" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
        <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])" />
        <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_ListInit" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.MakeBinary">
      <topicdata name="MakeBinary" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="MakeBinary" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_MakeBinary" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.MakeUnary">
      <topicdata name="MakeUnary" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="MakeUnary" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_MakeUnary" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.MemberBind">
      <topicdata name="MemberBind" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="MemberBind" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
        <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])" />
        <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
        <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_MemberBind" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.MemberInit">
      <topicdata name="MemberInit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="MemberInit" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
        <element api="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_MemberInit" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Modulo">
      <topicdata name="Modulo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Modulo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Modulo" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Multiply">
      <topicdata name="Multiply" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Multiply" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Multiply" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.MultiplyChecked">
      <topicdata name="MultiplyChecked" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="MultiplyChecked" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_MultiplyChecked" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Negate">
      <topicdata name="Negate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Negate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Negate" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.NegateChecked">
      <topicdata name="NegateChecked" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="NegateChecked" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_NegateChecked" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.New">
      <topicdata name="New" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="New" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)" />
        <element api="M:System.Linq.Expressions.Expression.New(System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})" />
        <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_New" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.NewArrayBounds">
      <topicdata name="NewArrayBounds" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="NewArrayBounds" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_NewArrayBounds" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.NewArrayInit">
      <topicdata name="NewArrayInit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="NewArrayInit" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_NewArrayInit" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Not">
      <topicdata name="Not" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Not" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Not" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.NotEqual">
      <topicdata name="NotEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="NotEqual" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_NotEqual" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Or">
      <topicdata name="Or" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Or" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Or" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.OrElse">
      <topicdata name="OrElse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="OrElse" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_OrElse" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Power">
      <topicdata name="Power" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Power" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Power" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Property">
      <topicdata name="Property" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Property" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)" />
        <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Property" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.RightShift">
      <topicdata name="RightShift" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="RightShift" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_RightShift" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Subtract">
      <topicdata name="Subtract" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Subtract" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_Subtract" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.SubtractChecked">
      <topicdata name="SubtractChecked" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="SubtractChecked" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_SubtractChecked" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.UnaryPlus">
      <topicdata name="UnaryPlus" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="UnaryPlus" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="O_T_System_Linq_Expressions_Expression_UnaryPlus" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.#ctor(System.Linq.Expressions.ExpressionType,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="nodeType">
          <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="C_System_Linq_Expressions_Expression_ctor_2_2a022a68" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Add_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Add_3_04cac5f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="AddChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AddChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_AddChecked_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="AddChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AddChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_AddChecked_3_04cac5f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="And" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.And" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_And_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="And" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.And" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_And_3_04cac5f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="AndAlso" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AndAlso" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_AndAlso_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="AndAlso" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AndAlso" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_AndAlso_3_04cac5f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="ArrayIndex" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ArrayIndex" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="indexes">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ArrayIndex_2_7e66802a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="ArrayIndex" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ArrayIndex" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ArrayIndex_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="ArrayIndex" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ArrayIndex" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="indexes">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ArrayIndex_2_3de1e47d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="ArrayLength" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ArrayLength_1_31cd44d4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Bind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Bind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberAssignment" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Bind_2_b499a87d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Bind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Bind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyAccessor">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberAssignment" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Bind_2_5474394d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Call_2_85739567" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Call_3_97188893" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Call_3_5a0edde2" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="typeArguments">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="arguments">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Call_4_aae2798c" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Call_2_f2b9ec35" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="typeArguments">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="arguments">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Call_4_d397f6f3" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Coalesce" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Coalesce" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Coalesce_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="Coalesce" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Coalesce" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Coalesce_3_b9624bc2" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="test">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="ifTrue">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="ifFalse">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Condition_3_a0ba2c89" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Constant(System.Object)">
      <topicdata group="api" />
      <apidata name="Constant" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Constant" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ConstantExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Constant_1_2572741a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="Constant" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Constant" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ConstantExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Constant_2_41b70156" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Convert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Convert_2_8c17e9bc" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Convert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Convert_3_ee36c256" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ConvertChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ConvertChecked_2_8c17e9bc" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="ConvertChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ConvertChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ConvertChecked_3_ee36c256" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Divide" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Divide" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Divide_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Divide" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Divide" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Divide_3_04cac5f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="ElementInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ElementInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="addMethod">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ElementInit_2_aceb123c" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="ElementInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ElementInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="addMethod">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ElementInit_2_f2b9ec35" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Equal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Equal" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Equal_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Equal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Equal" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="liftToNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Equal_4_6ce47ac9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="ExclusiveOr" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ExclusiveOr" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ExclusiveOr_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="ExclusiveOr" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ExclusiveOr" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ExclusiveOr_3_04cac5f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Field" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="field">
          <type api="T:System.Reflection.FieldInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Field_2_6b5e8fd6" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Field" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Field_2_459edca7" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.GetActionType(System.Type[])">
      <topicdata group="api" />
      <apidata name="GetActionType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeArgs">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_GetActionType_1_a221b361" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])">
      <topicdata group="api" />
      <apidata name="GetFuncType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeArgs">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_GetFuncType_1_a221b361" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.GreaterThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_GreaterThan_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.GreaterThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="liftToNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_GreaterThan_4_6ce47ac9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.GreaterThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_GreaterThanOrEqual_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.GreaterThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="liftToNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_GreaterThanOrEqual_4_6ce47ac9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Invoke_2_7e66802a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arguments">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Invoke_2_3de1e47d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TDelegate" />
      </templates>
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression`1" ref="true">
          <specialization>
            <template name="TDelegate" index="0" api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Lambda``1_2_f445abb9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Lambda_2_86118c1e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TDelegate" />
      </templates>
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression`1" ref="true">
          <specialization>
            <template name="TDelegate" index="0" api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Lambda``1_2_86118c1e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Lambda_3_f1661bb1" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Lambda_3_1e20c852" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="LeftShift" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.LeftShift" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_LeftShift_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="LeftShift" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.LeftShift" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_LeftShift_3_04cac5f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.LessThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_LessThan_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.LessThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="liftToNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_LessThan_4_6ce47ac9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.LessThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_LessThanOrEqual_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.LessThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="liftToNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_LessThanOrEqual_4_6ce47ac9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
      <topicdata group="api" />
      <apidata name="ListBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListBind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="initializers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberListBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ListBind_2_93d375ee" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])">
      <topicdata group="api" />
      <apidata name="ListBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListBind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="initializers">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberListBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ListBind_2_79a0b646" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
      <topicdata group="api" />
      <apidata name="ListBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListBind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyAccessor">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="initializers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberListBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ListBind_2_8c385715" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])">
      <topicdata group="api" />
      <apidata name="ListBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListBind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyAccessor">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="initializers">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberListBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ListBind_2_a0a66ae2" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
      <topicdata group="api" />
      <apidata name="ListInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="initializers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ListInit_2_5b5788b0" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="ListInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="initializers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ListInit_2_b6eb4f23" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])">
      <topicdata group="api" />
      <apidata name="ListInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="initializers">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ListInit_2_5de1da0d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="ListInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="initializers">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ListInit_2_b8598508" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="ListInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="addMethod">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="initializers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ListInit_3_fb35672c" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="ListInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="addMethod">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="initializers">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ListInit_3_2248413b" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="MakeBinary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MakeBinary" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binaryType">
          <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
        </parameter>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_MakeBinary_3_52736454" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="MakeBinary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MakeBinary" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binaryType">
          <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
        </parameter>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="liftToNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_MakeBinary_5_85eb3108" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="MakeBinary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MakeBinary" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binaryType">
          <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
        </parameter>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="liftToNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_MakeBinary_6_f0b48ced" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)">
      <topicdata group="api" />
      <apidata name="MakeMemberAccess" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_MakeMemberAccess_2_4cf67416" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="MakeUnary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MakeUnary" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="unaryType">
          <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
        </parameter>
        <parameter name="operand">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_MakeUnary_3_87a9cc69" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="MakeUnary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MakeUnary" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="unaryType">
          <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
        </parameter>
        <parameter name="operand">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_MakeUnary_4_c9eb1dff" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
      <topicdata group="api" />
      <apidata name="MemberBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MemberBind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="bindings">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberMemberBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_MemberBind_2_a3b95ef6" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])">
      <topicdata group="api" />
      <apidata name="MemberBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MemberBind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="bindings">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberMemberBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_MemberBind_2_9cdc2478" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
      <topicdata group="api" />
      <apidata name="MemberBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MemberBind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyAccessor">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="bindings">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberMemberBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_MemberBind_2_b9f8a96e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])">
      <topicdata group="api" />
      <apidata name="MemberBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MemberBind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyAccessor">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="bindings">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberMemberBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_MemberBind_2_185e9451" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
      <topicdata group="api" />
      <apidata name="MemberInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MemberInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="bindings">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_MemberInit_2_2d208f07" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])">
      <topicdata group="api" />
      <apidata name="MemberInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MemberInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="bindings">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_MemberInit_2_0c66fafd" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Modulo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Modulo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Modulo_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Modulo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Modulo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Modulo_3_04cac5f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Multiply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Multiply" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Multiply_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Multiply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Multiply" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Multiply_3_04cac5f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="MultiplyChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MultiplyChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_MultiplyChecked_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="MultiplyChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MultiplyChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_MultiplyChecked_3_04cac5f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Negate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Negate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Negate_1_31cd44d4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Negate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Negate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Negate_2_85739567" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="NegateChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.NegateChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_NegateChecked_1_31cd44d4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="NegateChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.NegateChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_NegateChecked_2_85739567" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)">
      <topicdata group="api" />
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.New" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constructor">
          <type api="T:System.Reflection.ConstructorInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_New_1_875d2a95" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.New" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constructor">
          <type api="T:System.Reflection.ConstructorInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_New_2_ab78b0e8" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})">
      <topicdata group="api" />
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.New" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constructor">
          <type api="T:System.Reflection.ConstructorInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="members">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_New_3_31fe96f6" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])">
      <topicdata group="api" />
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.New" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constructor">
          <type api="T:System.Reflection.ConstructorInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="members">
          <arrayOf rank="1">
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_New_3_a9682926" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.New" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constructor">
          <type api="T:System.Reflection.ConstructorInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_New_2_96b1dcbe" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.New(System.Type)">
      <topicdata group="api" />
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.New" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_New_1_61b1ab37" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="NewArrayBounds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.NewArrayBounds" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="bounds">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_NewArrayBounds_2_4f89b5d3" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="NewArrayBounds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.NewArrayBounds" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="bounds">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_NewArrayBounds_2_329ef45a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="NewArrayInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.NewArrayInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="initializers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_NewArrayInit_2_4f89b5d3" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="NewArrayInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.NewArrayInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="initializers">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_NewArrayInit_2_329ef45a" />
    </api>
    <api id="P:System.Linq.Expressions.Expression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_Expression_NodeType" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Not" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Not" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Not_1_31cd44d4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Not" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Not" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Not_2_85739567" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="NotEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.NotEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_NotEqual_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="NotEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.NotEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="liftToNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_NotEqual_4_6ce47ac9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Or" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Or" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Or_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Or" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Or" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Or_3_04cac5f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="OrElse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.OrElse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_OrElse_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="OrElse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.OrElse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_OrElse_3_04cac5f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="Parameter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Parameter_2_2147db6e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Power" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Power" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Power_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Power" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Power" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Power_3_04cac5f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Property" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="propertyAccessor">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Property_2_85739567" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Property" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="property">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Property_2_d5db9ba5" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Property" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Property_2_459edca7" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)">
      <topicdata group="api" />
      <apidata name="PropertyOrField" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="propertyOrFieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_PropertyOrField_2_459edca7" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Quote" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Quote_1_31cd44d4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="RightShift" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.RightShift" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_RightShift_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="RightShift" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.RightShift" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_RightShift_3_04cac5f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Subtract" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Subtract" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Subtract_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Subtract" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Subtract" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_Subtract_3_04cac5f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="SubtractChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.SubtractChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_SubtractChecked_2_d66d97e4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="SubtractChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.SubtractChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_SubtractChecked_3_04cac5f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_ToString" />
    </api>
    <api id="P:System.Linq.Expressions.Expression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_Expression_Type" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="TypeAs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_TypeAs_2_8c17e9bc" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="TypeIs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.TypeBinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_TypeIs_2_8c17e9bc" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="UnaryPlus" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.UnaryPlus" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_UnaryPlus_1_31cd44d4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="UnaryPlus" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.UnaryPlus" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression_UnaryPlus_2_85739567" />
    </api>
    <api id="T:System.Linq.Expressions.Expression`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression`1" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TDelegate" />
      </templates>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_Expression`1" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.Expression`1">
      <topicdata name="Expression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.Expression`1" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TDelegate" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="M:System.Linq.Expressions.Expression`1.Compile" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Body" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Parameters" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_Expression`1" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.Expression`1">
      <topicdata name="Expression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.Expression`1" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TDelegate" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression`1.Compile" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Methods_T_System_Linq_Expressions_Expression`1" />
    </api>
    <api id="M:System.Linq.Expressions.Expression`1.Compile">
      <topicdata group="api" />
      <apidata name="Compile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <template name="TDelegate" index="0" api="T:System.Linq.Expressions.Expression`1" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression`1" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_Expression`1_Compile" />
    </api>
    <api id="T:System.Linq.Expressions.ExpressionType">
      <topicdata group="api" />
      <apidata name="ExpressionType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Linq.Expressions.ExpressionType.Add" />
        <element api="F:System.Linq.Expressions.ExpressionType.AddChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.And" />
        <element api="F:System.Linq.Expressions.ExpressionType.AndAlso" />
        <element api="F:System.Linq.Expressions.ExpressionType.ArrayLength" />
        <element api="F:System.Linq.Expressions.ExpressionType.ArrayIndex" />
        <element api="F:System.Linq.Expressions.ExpressionType.Call" />
        <element api="F:System.Linq.Expressions.ExpressionType.Coalesce" />
        <element api="F:System.Linq.Expressions.ExpressionType.Conditional" />
        <element api="F:System.Linq.Expressions.ExpressionType.Constant" />
        <element api="F:System.Linq.Expressions.ExpressionType.Convert" />
        <element api="F:System.Linq.Expressions.ExpressionType.ConvertChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.Divide" />
        <element api="F:System.Linq.Expressions.ExpressionType.Equal" />
        <element api="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" />
        <element api="F:System.Linq.Expressions.ExpressionType.GreaterThan" />
        <element api="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" />
        <element api="F:System.Linq.Expressions.ExpressionType.Invoke" />
        <element api="F:System.Linq.Expressions.ExpressionType.Lambda" />
        <element api="F:System.Linq.Expressions.ExpressionType.LeftShift" />
        <element api="F:System.Linq.Expressions.ExpressionType.LessThan" />
        <element api="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" />
        <element api="F:System.Linq.Expressions.ExpressionType.ListInit" />
        <element api="F:System.Linq.Expressions.ExpressionType.MemberAccess" />
        <element api="F:System.Linq.Expressions.ExpressionType.MemberInit" />
        <element api="F:System.Linq.Expressions.ExpressionType.Modulo" />
        <element api="F:System.Linq.Expressions.ExpressionType.Multiply" />
        <element api="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.Negate" />
        <element api="F:System.Linq.Expressions.ExpressionType.UnaryPlus" />
        <element api="F:System.Linq.Expressions.ExpressionType.NegateChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.New" />
        <element api="F:System.Linq.Expressions.ExpressionType.NewArrayInit" />
        <element api="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" />
        <element api="F:System.Linq.Expressions.ExpressionType.Not" />
        <element api="F:System.Linq.Expressions.ExpressionType.NotEqual" />
        <element api="F:System.Linq.Expressions.ExpressionType.Or" />
        <element api="F:System.Linq.Expressions.ExpressionType.OrElse" />
        <element api="F:System.Linq.Expressions.ExpressionType.Parameter" />
        <element api="F:System.Linq.Expressions.ExpressionType.Power" />
        <element api="F:System.Linq.Expressions.ExpressionType.Quote" />
        <element api="F:System.Linq.Expressions.ExpressionType.RightShift" />
        <element api="F:System.Linq.Expressions.ExpressionType.Subtract" />
        <element api="F:System.Linq.Expressions.ExpressionType.SubtractChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.TypeAs" />
        <element api="F:System.Linq.Expressions.ExpressionType.TypeIs" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_ExpressionType" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Add">
      <topicdata group="api" notopic="" />
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Add" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.AddChecked">
      <topicdata group="api" notopic="" />
      <apidata name="AddChecked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_AddChecked" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.And">
      <topicdata group="api" notopic="" />
      <apidata name="And" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_And" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.AndAlso">
      <topicdata group="api" notopic="" />
      <apidata name="AndAlso" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_AndAlso" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.ArrayIndex">
      <topicdata group="api" notopic="" />
      <apidata name="ArrayIndex" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_ArrayIndex" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.ArrayLength">
      <topicdata group="api" notopic="" />
      <apidata name="ArrayLength" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_ArrayLength" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Call">
      <topicdata group="api" notopic="" />
      <apidata name="Call" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Call" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Coalesce">
      <topicdata group="api" notopic="" />
      <apidata name="Coalesce" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Coalesce" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Conditional">
      <topicdata group="api" notopic="" />
      <apidata name="Conditional" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Conditional" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Constant">
      <topicdata group="api" notopic="" />
      <apidata name="Constant" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Constant" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Convert">
      <topicdata group="api" notopic="" />
      <apidata name="Convert" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Convert" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.ConvertChecked">
      <topicdata group="api" notopic="" />
      <apidata name="ConvertChecked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_ConvertChecked" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Divide">
      <topicdata group="api" notopic="" />
      <apidata name="Divide" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Divide" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Equal">
      <topicdata group="api" notopic="" />
      <apidata name="Equal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Equal" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.ExclusiveOr">
      <topicdata group="api" notopic="" />
      <apidata name="ExclusiveOr" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_ExclusiveOr" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.GreaterThan">
      <topicdata group="api" notopic="" />
      <apidata name="GreaterThan" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_GreaterThan" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual">
      <topicdata group="api" notopic="" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_GreaterThanOrEqual" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Invoke">
      <topicdata group="api" notopic="" />
      <apidata name="Invoke" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Invoke" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Lambda">
      <topicdata group="api" notopic="" />
      <apidata name="Lambda" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Lambda" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.LeftShift">
      <topicdata group="api" notopic="" />
      <apidata name="LeftShift" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>19</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_LeftShift" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.LessThan">
      <topicdata group="api" notopic="" />
      <apidata name="LessThan" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_LessThan" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual">
      <topicdata group="api" notopic="" />
      <apidata name="LessThanOrEqual" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>21</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_LessThanOrEqual" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.ListInit">
      <topicdata group="api" notopic="" />
      <apidata name="ListInit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>22</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_ListInit" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.MemberAccess">
      <topicdata group="api" notopic="" />
      <apidata name="MemberAccess" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>23</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_MemberAccess" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.MemberInit">
      <topicdata group="api" notopic="" />
      <apidata name="MemberInit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>24</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_MemberInit" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Modulo">
      <topicdata group="api" notopic="" />
      <apidata name="Modulo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>25</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Modulo" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Multiply">
      <topicdata group="api" notopic="" />
      <apidata name="Multiply" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>26</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Multiply" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.MultiplyChecked">
      <topicdata group="api" notopic="" />
      <apidata name="MultiplyChecked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>27</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_MultiplyChecked" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Negate">
      <topicdata group="api" notopic="" />
      <apidata name="Negate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>28</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Negate" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.NegateChecked">
      <topicdata group="api" notopic="" />
      <apidata name="NegateChecked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>30</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_NegateChecked" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.New">
      <topicdata group="api" notopic="" />
      <apidata name="New" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>31</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_New" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.NewArrayBounds">
      <topicdata group="api" notopic="" />
      <apidata name="NewArrayBounds" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>33</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_NewArrayBounds" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.NewArrayInit">
      <topicdata group="api" notopic="" />
      <apidata name="NewArrayInit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_NewArrayInit" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Not">
      <topicdata group="api" notopic="" />
      <apidata name="Not" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>34</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Not" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.NotEqual">
      <topicdata group="api" notopic="" />
      <apidata name="NotEqual" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>35</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_NotEqual" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Or">
      <topicdata group="api" notopic="" />
      <apidata name="Or" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>36</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Or" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.OrElse">
      <topicdata group="api" notopic="" />
      <apidata name="OrElse" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>37</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_OrElse" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Parameter">
      <topicdata group="api" notopic="" />
      <apidata name="Parameter" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>38</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Parameter" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Power">
      <topicdata group="api" notopic="" />
      <apidata name="Power" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>39</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Power" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Quote">
      <topicdata group="api" notopic="" />
      <apidata name="Quote" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>40</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Quote" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.RightShift">
      <topicdata group="api" notopic="" />
      <apidata name="RightShift" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>41</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_RightShift" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Subtract">
      <topicdata group="api" notopic="" />
      <apidata name="Subtract" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>42</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_Subtract" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.SubtractChecked">
      <topicdata group="api" notopic="" />
      <apidata name="SubtractChecked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>43</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_SubtractChecked" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.TypeAs">
      <topicdata group="api" notopic="" />
      <apidata name="TypeAs" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>44</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_TypeAs" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.TypeIs">
      <topicdata group="api" notopic="" />
      <apidata name="TypeIs" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>45</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_TypeIs" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.UnaryPlus">
      <topicdata group="api" notopic="" />
      <apidata name="UnaryPlus" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </returns>
      <value>29</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_ExpressionType_UnaryPlus" />
    </api>
    <api id="T:System.Linq.Expressions.InvocationExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.InvocationExpression" />
      <apidata name="InvocationExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_InvocationExpression" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.InvocationExpression">
      <topicdata name="InvocationExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.InvocationExpression" />
      <apidata name="InvocationExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.InvocationExpression.Arguments" />
        <element api="P:System.Linq.Expressions.InvocationExpression.Expression" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_InvocationExpression" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.InvocationExpression">
      <topicdata name="InvocationExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.InvocationExpression" />
      <apidata name="InvocationExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.InvocationExpression.Arguments" />
        <element api="P:System.Linq.Expressions.InvocationExpression.Expression" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_InvocationExpression" />
    </api>
    <api id="P:System.Linq.Expressions.InvocationExpression.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_InvocationExpression_Arguments" />
    </api>
    <api id="P:System.Linq.Expressions.InvocationExpression.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_InvocationExpression_Expression" />
    </api>
    <api id="T:System.Linq.Expressions.LambdaExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.LambdaExpression" />
      <apidata name="LambdaExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Linq.Expressions.Expression`1" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_LambdaExpression" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.LambdaExpression">
      <topicdata name="LambdaExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.LambdaExpression" />
      <apidata name="LambdaExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Body" />
        <element api="M:System.Linq.Expressions.LambdaExpression.Compile" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Parameters" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_LambdaExpression" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.LambdaExpression">
      <topicdata name="LambdaExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.LambdaExpression" />
      <apidata name="LambdaExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.LambdaExpression.Compile" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Methods_T_System_Linq_Expressions_LambdaExpression" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.LambdaExpression">
      <topicdata name="LambdaExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.LambdaExpression" />
      <apidata name="LambdaExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Body" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Parameters" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_LambdaExpression" />
    </api>
    <api id="P:System.Linq.Expressions.LambdaExpression.Body">
      <topicdata group="api" />
      <apidata name="Body" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_LambdaExpression_Body" />
    </api>
    <api id="M:System.Linq.Expressions.LambdaExpression.Compile">
      <topicdata group="api" />
      <apidata name="Compile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Delegate" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_LambdaExpression_Compile" />
    </api>
    <api id="P:System.Linq.Expressions.LambdaExpression.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_LambdaExpression_Parameters" />
    </api>
    <api id="T:System.Linq.Expressions.ListInitExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.ListInitExpression" />
      <apidata name="ListInitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_ListInitExpression" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.ListInitExpression">
      <topicdata name="ListInitExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.ListInitExpression" />
      <apidata name="ListInitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.ListInitExpression.Initializers" />
        <element api="P:System.Linq.Expressions.ListInitExpression.NewExpression" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_ListInitExpression" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.ListInitExpression">
      <topicdata name="ListInitExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.ListInitExpression" />
      <apidata name="ListInitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.ListInitExpression.Initializers" />
        <element api="P:System.Linq.Expressions.ListInitExpression.NewExpression" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_ListInitExpression" />
    </api>
    <api id="P:System.Linq.Expressions.ListInitExpression.Initializers">
      <topicdata group="api" />
      <apidata name="Initializers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_ListInitExpression_Initializers" />
    </api>
    <api id="P:System.Linq.Expressions.ListInitExpression.NewExpression">
      <topicdata group="api" />
      <apidata name="NewExpression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_ListInitExpression_NewExpression" />
    </api>
    <api id="T:System.Linq.Expressions.MemberAssignment">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.MemberAssignment" />
      <apidata name="MemberAssignment" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_MemberAssignment" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.MemberAssignment">
      <topicdata name="MemberAssignment" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.MemberAssignment" />
      <apidata name="MemberAssignment" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.MemberAssignment.Expression" />
        <element api="P:System.Linq.Expressions.MemberBinding.BindingType" />
        <element api="P:System.Linq.Expressions.MemberBinding.Member" />
        <element api="M:System.Linq.Expressions.MemberBinding.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_MemberAssignment" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.MemberAssignment">
      <topicdata name="MemberAssignment" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.MemberAssignment" />
      <apidata name="MemberAssignment" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.MemberAssignment.Expression" />
        <element api="P:System.Linq.Expressions.MemberBinding.BindingType" />
        <element api="P:System.Linq.Expressions.MemberBinding.Member" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_MemberAssignment" />
    </api>
    <api id="P:System.Linq.Expressions.MemberAssignment.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberAssignment" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_MemberAssignment_Expression" />
    </api>
    <api id="T:System.Linq.Expressions.MemberBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.MemberBinding" />
      <apidata name="MemberBinding" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Linq.Expressions.MemberAssignment" ref="true" />
          <type api="T:System.Linq.Expressions.MemberMemberBinding" ref="true" />
          <type api="T:System.Linq.Expressions.MemberListBinding" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_MemberBinding" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.MemberBinding">
      <topicdata name="MemberBinding" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.MemberBinding" />
      <apidata name="MemberBinding" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.MemberBinding.#ctor(System.Linq.Expressions.MemberBindingType,System.Reflection.MemberInfo)" />
        <element api="P:System.Linq.Expressions.MemberBinding.BindingType" />
        <element api="P:System.Linq.Expressions.MemberBinding.Member" />
        <element api="M:System.Linq.Expressions.MemberBinding.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_MemberBinding" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.MemberBinding">
      <topicdata name="MemberBinding" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.MemberBinding" />
      <apidata name="MemberBinding" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.MemberBinding.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Methods_T_System_Linq_Expressions_MemberBinding" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.MemberBinding">
      <topicdata name="MemberBinding" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.MemberBinding" />
      <apidata name="MemberBinding" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.MemberBinding.BindingType" />
        <element api="P:System.Linq.Expressions.MemberBinding.Member" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_MemberBinding" />
    </api>
    <api id="M:System.Linq.Expressions.MemberBinding.#ctor(System.Linq.Expressions.MemberBindingType,System.Reflection.MemberInfo)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Linq.Expressions.MemberBindingType" ref="false" />
        </parameter>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
      </containers>
      <file name="C_System_Linq_Expressions_MemberBinding_ctor_2_3e3945d0" />
    </api>
    <api id="P:System.Linq.Expressions.MemberBinding.BindingType">
      <topicdata group="api" />
      <apidata name="BindingType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.MemberBindingType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_MemberBinding_BindingType" />
    </api>
    <api id="P:System.Linq.Expressions.MemberBinding.Member">
      <topicdata group="api" />
      <apidata name="Member" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_MemberBinding_Member" />
    </api>
    <api id="M:System.Linq.Expressions.MemberBinding.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
      </containers>
      <file name="M_System_Linq_Expressions_MemberBinding_ToString" />
    </api>
    <api id="T:System.Linq.Expressions.MemberBindingType">
      <topicdata group="api" />
      <apidata name="MemberBindingType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Linq.Expressions.MemberBindingType.Assignment" />
        <element api="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />
        <element api="F:System.Linq.Expressions.MemberBindingType.ListBinding" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_MemberBindingType" />
    </api>
    <api id="F:System.Linq.Expressions.MemberBindingType.Assignment">
      <topicdata group="api" notopic="" />
      <apidata name="Assignment" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.MemberBindingType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBindingType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_MemberBindingType_Assignment" />
    </api>
    <api id="F:System.Linq.Expressions.MemberBindingType.ListBinding">
      <topicdata group="api" notopic="" />
      <apidata name="ListBinding" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.MemberBindingType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBindingType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_MemberBindingType_ListBinding" />
    </api>
    <api id="F:System.Linq.Expressions.MemberBindingType.MemberBinding">
      <topicdata group="api" notopic="" />
      <apidata name="MemberBinding" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.MemberBindingType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBindingType" ref="false" />
      </containers>
      <file name="F_System_Linq_Expressions_MemberBindingType_MemberBinding" />
    </api>
    <api id="T:System.Linq.Expressions.MemberExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.MemberExpression" />
      <apidata name="MemberExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_MemberExpression" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.MemberExpression">
      <topicdata name="MemberExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.MemberExpression" />
      <apidata name="MemberExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.MemberExpression.Expression" />
        <element api="P:System.Linq.Expressions.MemberExpression.Member" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_MemberExpression" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.MemberExpression">
      <topicdata name="MemberExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.MemberExpression" />
      <apidata name="MemberExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.MemberExpression.Expression" />
        <element api="P:System.Linq.Expressions.MemberExpression.Member" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_MemberExpression" />
    </api>
    <api id="P:System.Linq.Expressions.MemberExpression.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_MemberExpression_Expression" />
    </api>
    <api id="P:System.Linq.Expressions.MemberExpression.Member">
      <topicdata group="api" />
      <apidata name="Member" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_MemberExpression_Member" />
    </api>
    <api id="T:System.Linq.Expressions.MemberInitExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.MemberInitExpression" />
      <apidata name="MemberInitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_MemberInitExpression" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.MemberInitExpression">
      <topicdata name="MemberInitExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.MemberInitExpression" />
      <apidata name="MemberInitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.MemberInitExpression.Bindings" />
        <element api="P:System.Linq.Expressions.MemberInitExpression.NewExpression" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_MemberInitExpression" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.MemberInitExpression">
      <topicdata name="MemberInitExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.MemberInitExpression" />
      <apidata name="MemberInitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.MemberInitExpression.Bindings" />
        <element api="P:System.Linq.Expressions.MemberInitExpression.NewExpression" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_MemberInitExpression" />
    </api>
    <api id="P:System.Linq.Expressions.MemberInitExpression.Bindings">
      <topicdata group="api" />
      <apidata name="Bindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_MemberInitExpression_Bindings" />
    </api>
    <api id="P:System.Linq.Expressions.MemberInitExpression.NewExpression">
      <topicdata group="api" />
      <apidata name="NewExpression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_MemberInitExpression_NewExpression" />
    </api>
    <api id="T:System.Linq.Expressions.MemberListBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.MemberListBinding" />
      <apidata name="MemberListBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_MemberListBinding" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.MemberListBinding">
      <topicdata name="MemberListBinding" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.MemberListBinding" />
      <apidata name="MemberListBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.MemberBinding.BindingType" />
        <element api="P:System.Linq.Expressions.MemberBinding.Member" />
        <element api="M:System.Linq.Expressions.MemberBinding.ToString" />
        <element api="P:System.Linq.Expressions.MemberListBinding.Initializers" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_MemberListBinding" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.MemberListBinding">
      <topicdata name="MemberListBinding" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.MemberListBinding" />
      <apidata name="MemberListBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.MemberBinding.BindingType" />
        <element api="P:System.Linq.Expressions.MemberBinding.Member" />
        <element api="P:System.Linq.Expressions.MemberListBinding.Initializers" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_MemberListBinding" />
    </api>
    <api id="P:System.Linq.Expressions.MemberListBinding.Initializers">
      <topicdata group="api" />
      <apidata name="Initializers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberListBinding" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_MemberListBinding_Initializers" />
    </api>
    <api id="T:System.Linq.Expressions.MemberMemberBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.MemberMemberBinding" />
      <apidata name="MemberMemberBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_MemberMemberBinding" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.MemberMemberBinding">
      <topicdata name="MemberMemberBinding" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.MemberMemberBinding" />
      <apidata name="MemberMemberBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.MemberBinding.BindingType" />
        <element api="P:System.Linq.Expressions.MemberBinding.Member" />
        <element api="M:System.Linq.Expressions.MemberBinding.ToString" />
        <element api="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_MemberMemberBinding" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.MemberMemberBinding">
      <topicdata name="MemberMemberBinding" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.MemberMemberBinding" />
      <apidata name="MemberMemberBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.MemberBinding.BindingType" />
        <element api="P:System.Linq.Expressions.MemberBinding.Member" />
        <element api="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_MemberMemberBinding" />
    </api>
    <api id="P:System.Linq.Expressions.MemberMemberBinding.Bindings">
      <topicdata group="api" />
      <apidata name="Bindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberMemberBinding" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_MemberMemberBinding_Bindings" />
    </api>
    <api id="T:System.Linq.Expressions.MethodCallExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.MethodCallExpression" />
      <apidata name="MethodCallExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_MethodCallExpression" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.MethodCallExpression">
      <topicdata name="MethodCallExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.MethodCallExpression" />
      <apidata name="MethodCallExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.Arguments" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.Method" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.Object" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_MethodCallExpression" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.MethodCallExpression">
      <topicdata name="MethodCallExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.MethodCallExpression" />
      <apidata name="MethodCallExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.Arguments" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.Method" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.Object" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_MethodCallExpression" />
    </api>
    <api id="P:System.Linq.Expressions.MethodCallExpression.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_MethodCallExpression_Arguments" />
    </api>
    <api id="P:System.Linq.Expressions.MethodCallExpression.Method">
      <topicdata group="api" />
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_MethodCallExpression_Method" />
    </api>
    <api id="P:System.Linq.Expressions.MethodCallExpression.Object">
      <topicdata group="api" />
      <apidata name="Object" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_MethodCallExpression_Object" />
    </api>
    <api id="T:System.Linq.Expressions.NewArrayExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.NewArrayExpression" />
      <apidata name="NewArrayExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_NewArrayExpression" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.NewArrayExpression">
      <topicdata name="NewArrayExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.NewArrayExpression" />
      <apidata name="NewArrayExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.NewArrayExpression.Expressions" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_NewArrayExpression" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.NewArrayExpression">
      <topicdata name="NewArrayExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.NewArrayExpression" />
      <apidata name="NewArrayExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.NewArrayExpression.Expressions" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_NewArrayExpression" />
    </api>
    <api id="P:System.Linq.Expressions.NewArrayExpression.Expressions">
      <topicdata group="api" />
      <apidata name="Expressions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_NewArrayExpression_Expressions" />
    </api>
    <api id="T:System.Linq.Expressions.NewExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.NewExpression" />
      <apidata name="NewExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_NewExpression" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.NewExpression">
      <topicdata name="NewExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.NewExpression" />
      <apidata name="NewExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.NewExpression.Arguments" />
        <element api="P:System.Linq.Expressions.NewExpression.Constructor" />
        <element api="P:System.Linq.Expressions.NewExpression.Members" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_NewExpression" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.NewExpression">
      <topicdata name="NewExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.NewExpression" />
      <apidata name="NewExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.NewExpression.Arguments" />
        <element api="P:System.Linq.Expressions.NewExpression.Constructor" />
        <element api="P:System.Linq.Expressions.NewExpression.Members" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_NewExpression" />
    </api>
    <api id="P:System.Linq.Expressions.NewExpression.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_NewExpression_Arguments" />
    </api>
    <api id="P:System.Linq.Expressions.NewExpression.Constructor">
      <topicdata group="api" />
      <apidata name="Constructor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Reflection.ConstructorInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_NewExpression_Constructor" />
    </api>
    <api id="P:System.Linq.Expressions.NewExpression.Members">
      <topicdata group="api" />
      <apidata name="Members" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_NewExpression_Members" />
    </api>
    <api id="T:System.Linq.Expressions.ParameterExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.ParameterExpression" />
      <apidata name="ParameterExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_ParameterExpression" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.ParameterExpression">
      <topicdata name="ParameterExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.ParameterExpression" />
      <apidata name="ParameterExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.ParameterExpression.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_ParameterExpression" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.ParameterExpression">
      <topicdata name="ParameterExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.ParameterExpression" />
      <apidata name="ParameterExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.ParameterExpression.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_ParameterExpression" />
    </api>
    <api id="P:System.Linq.Expressions.ParameterExpression.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_ParameterExpression_Name" />
    </api>
    <api id="T:System.Linq.Expressions.TypeBinaryExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.TypeBinaryExpression" />
      <apidata name="TypeBinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_TypeBinaryExpression" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.TypeBinaryExpression">
      <topicdata name="TypeBinaryExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.TypeBinaryExpression" />
      <apidata name="TypeBinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.TypeBinaryExpression.Expression" />
        <element api="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_TypeBinaryExpression" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.TypeBinaryExpression">
      <topicdata name="TypeBinaryExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.TypeBinaryExpression" />
      <apidata name="TypeBinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.TypeBinaryExpression.Expression" />
        <element api="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_TypeBinaryExpression" />
    </api>
    <api id="P:System.Linq.Expressions.TypeBinaryExpression.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TypeBinaryExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_TypeBinaryExpression_Expression" />
    </api>
    <api id="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand">
      <topicdata group="api" />
      <apidata name="TypeOperand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TypeBinaryExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_TypeBinaryExpression_TypeOperand" />
    </api>
    <api id="T:System.Linq.Expressions.UnaryExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.UnaryExpression" />
      <apidata name="UnaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="T_System_Linq_Expressions_UnaryExpression" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.UnaryExpression">
      <topicdata name="UnaryExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.UnaryExpression" />
      <apidata name="UnaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.UnaryExpression.IsLifted" />
        <element api="P:System.Linq.Expressions.UnaryExpression.IsLiftedToNull" />
        <element api="P:System.Linq.Expressions.UnaryExpression.Method" />
        <element api="P:System.Linq.Expressions.UnaryExpression.Operand" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="AllMembers_T_System_Linq_Expressions_UnaryExpression" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.UnaryExpression">
      <topicdata name="UnaryExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.UnaryExpression" />
      <apidata name="UnaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.UnaryExpression.IsLifted" />
        <element api="P:System.Linq.Expressions.UnaryExpression.IsLiftedToNull" />
        <element api="P:System.Linq.Expressions.UnaryExpression.Method" />
        <element api="P:System.Linq.Expressions.UnaryExpression.Operand" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="Properties_T_System_Linq_Expressions_UnaryExpression" />
    </api>
    <api id="P:System.Linq.Expressions.UnaryExpression.IsLifted">
      <topicdata group="api" />
      <apidata name="IsLifted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_UnaryExpression_IsLifted" />
    </api>
    <api id="P:System.Linq.Expressions.UnaryExpression.IsLiftedToNull">
      <topicdata group="api" />
      <apidata name="IsLiftedToNull" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_UnaryExpression_IsLiftedToNull" />
    </api>
    <api id="P:System.Linq.Expressions.UnaryExpression.Method">
      <topicdata group="api" />
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_UnaryExpression_Method" />
    </api>
    <api id="P:System.Linq.Expressions.UnaryExpression.Operand">
      <topicdata group="api" />
      <apidata name="Operand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </containers>
      <file name="P_System_Linq_Expressions_UnaryExpression_Operand" />
    </api>
    <api id="T:System.Management.Instrumentation.InstanceNotFoundException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.InstanceNotFoundException" />
      <apidata name="InstanceNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.InstrumentationException" ref="true" />
          <type api="T:System.Management.Instrumentation.InstrumentationBaseException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_InstanceNotFoundException" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.InstanceNotFoundException">
      <topicdata name="InstanceNotFoundException" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.InstanceNotFoundException" />
      <apidata name="InstanceNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Management.Instrumentation.InstanceNotFoundException.#ctor">
          <element api="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor" />
          <element api="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.String)" />
          <element api="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_InstanceNotFoundException" />
    </api>
    <api id="Overload:System.Management.Instrumentation.InstanceNotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.InstanceNotFoundException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor" />
        <element api="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.String)" />
        <element api="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstanceNotFoundException" ref="true" />
      </containers>
      <file name="O_T_System_Management_Instrumentation_InstanceNotFoundException_ctor" />
    </api>
    <api id="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstanceNotFoundException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstanceNotFoundException" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_InstanceNotFoundException_ctor" />
    </api>
    <api id="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Management.Instrumentation.InstanceNotFoundException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstanceNotFoundException" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_InstanceNotFoundException_ctor_2_4075724f" />
    </api>
    <api id="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstanceNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstanceNotFoundException" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_InstanceNotFoundException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstanceNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstanceNotFoundException" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_InstanceNotFoundException_ctor_2_3ec47892" />
    </api>
    <api id="T:System.Management.Instrumentation.InstrumentationBaseException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.InstrumentationBaseException" />
      <apidata name="InstrumentationBaseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Management.Instrumentation.InstrumentationException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_InstrumentationBaseException" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.InstrumentationBaseException">
      <topicdata name="InstrumentationBaseException" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.InstrumentationBaseException" />
      <apidata name="InstrumentationBaseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Management.Instrumentation.InstrumentationBaseException.#ctor">
          <element api="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor" />
          <element api="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.String)" />
          <element api="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_InstrumentationBaseException" />
    </api>
    <api id="Overload:System.Management.Instrumentation.InstrumentationBaseException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.InstrumentationBaseException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor" />
        <element api="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.String)" />
        <element api="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationBaseException" ref="true" />
      </containers>
      <file name="O_T_System_Management_Instrumentation_InstrumentationBaseException_ctor" />
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationBaseException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationBaseException" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_InstrumentationBaseException_ctor" />
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationBaseException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationBaseException" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_InstrumentationBaseException_ctor_2_4075724f" />
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationBaseException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationBaseException" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_InstrumentationBaseException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationBaseException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationBaseException" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_InstrumentationBaseException_ctor_2_3ec47892" />
    </api>
    <api id="T:System.Management.Instrumentation.InstrumentationException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.InstrumentationException" />
      <apidata name="InstrumentationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.InstrumentationBaseException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Management.Instrumentation.InstanceNotFoundException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_InstrumentationException" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.InstrumentationException">
      <topicdata name="InstrumentationException" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.InstrumentationException" />
      <apidata name="InstrumentationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Management.Instrumentation.InstrumentationException.#ctor">
          <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor" />
          <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.Exception)" />
          <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.String)" />
          <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_InstrumentationException" />
    </api>
    <api id="Overload:System.Management.Instrumentation.InstrumentationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.InstrumentationException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor" />
        <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.Exception)" />
        <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.String)" />
        <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationException" ref="true" />
      </containers>
      <file name="O_T_System_Management_Instrumentation_InstrumentationException_ctor" />
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationException" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_InstrumentationException_ctor" />
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationException.#ctor" />
      <parameters>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationException" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_InstrumentationException_ctor_1_8d535e04" />
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationException" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_InstrumentationException_ctor_2_4075724f" />
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationException" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_InstrumentationException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationException" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_InstrumentationException_ctor_2_3ec47892" />
    </api>
    <api id="T:System.Management.Instrumentation.ManagementBindAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.ManagementBindAttribute" />
      <apidata name="ManagementBindAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementNewInstanceAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Constructor" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_ManagementBindAttribute" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.ManagementBindAttribute">
      <topicdata name="ManagementBindAttribute" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.ManagementBindAttribute" />
      <apidata name="ManagementBindAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Management.Instrumentation.ManagementBindAttribute.#ctor" />
        <element api="P:System.Management.Instrumentation.ManagementBindAttribute.Schema" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_ManagementBindAttribute" />
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementBindAttribute">
      <topicdata name="ManagementBindAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementBindAttribute" />
      <apidata name="ManagementBindAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementBindAttribute.Schema" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="Properties_T_System_Management_Instrumentation_ManagementBindAttribute" />
    </api>
    <api id="M:System.Management.Instrumentation.ManagementBindAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementBindAttribute" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_ManagementBindAttribute_ctor" />
    </api>
    <api id="P:System.Management.Instrumentation.ManagementBindAttribute.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementBindAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_ManagementBindAttribute_Schema" />
    </api>
    <api id="T:System.Management.Instrumentation.ManagementCommitAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.ManagementCommitAttribute" />
      <apidata name="ManagementCommitAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_ManagementCommitAttribute" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.ManagementCommitAttribute">
      <topicdata name="ManagementCommitAttribute" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.ManagementCommitAttribute" />
      <apidata name="ManagementCommitAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Management.Instrumentation.ManagementCommitAttribute.#ctor" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_ManagementCommitAttribute" />
    </api>
    <api id="M:System.Management.Instrumentation.ManagementCommitAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementCommitAttribute" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_ManagementCommitAttribute_ctor" />
    </api>
    <api id="T:System.Management.Instrumentation.ManagementConfigurationAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
      <apidata name="ManagementConfigurationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_ManagementConfigurationAttribute" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.ManagementConfigurationAttribute">
      <topicdata name="ManagementConfigurationAttribute" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
      <apidata name="ManagementConfigurationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Management.Instrumentation.ManagementConfigurationAttribute.#ctor" />
        <element api="P:System.Management.Instrumentation.ManagementConfigurationAttribute.Mode" />
        <element api="P:System.Management.Instrumentation.ManagementConfigurationAttribute.Schema" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_ManagementConfigurationAttribute" />
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementConfigurationAttribute">
      <topicdata name="ManagementConfigurationAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
      <apidata name="ManagementConfigurationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementConfigurationAttribute.Mode" />
        <element api="P:System.Management.Instrumentation.ManagementConfigurationAttribute.Schema" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="Properties_T_System_Management_Instrumentation_ManagementConfigurationAttribute" />
    </api>
    <api id="M:System.Management.Instrumentation.ManagementConfigurationAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementConfigurationAttribute" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_ManagementConfigurationAttribute_ctor" />
    </api>
    <api id="P:System.Management.Instrumentation.ManagementConfigurationAttribute.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementConfigurationType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementConfigurationAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_ManagementConfigurationAttribute_Mode" />
    </api>
    <api id="P:System.Management.Instrumentation.ManagementConfigurationAttribute.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementConfigurationAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_ManagementConfigurationAttribute_Schema" />
    </api>
    <api id="T:System.Management.Instrumentation.ManagementConfigurationType">
      <topicdata group="api" />
      <apidata name="ManagementConfigurationType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Management.Instrumentation.ManagementConfigurationType.Apply" />
        <element api="F:System.Management.Instrumentation.ManagementConfigurationType.OnCommit" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="T_System_Management_Instrumentation_ManagementConfigurationType" />
    </api>
    <api id="F:System.Management.Instrumentation.ManagementConfigurationType.Apply">
      <topicdata group="api" notopic="" />
      <apidata name="Apply" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementConfigurationType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementConfigurationType" ref="false" />
      </containers>
      <file name="F_System_Management_Instrumentation_ManagementConfigurationType_Apply" />
    </api>
    <api id="F:System.Management.Instrumentation.ManagementConfigurationType.OnCommit">
      <topicdata group="api" notopic="" />
      <apidata name="OnCommit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementConfigurationType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementConfigurationType" ref="false" />
      </containers>
      <file name="F_System_Management_Instrumentation_ManagementConfigurationType_OnCommit" />
    </api>
    <api id="T:System.Management.Instrumentation.ManagementCreateAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.ManagementCreateAttribute" />
      <apidata name="ManagementCreateAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementNewInstanceAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Constructor" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_ManagementCreateAttribute" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.ManagementCreateAttribute">
      <topicdata name="ManagementCreateAttribute" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.ManagementCreateAttribute" />
      <apidata name="ManagementCreateAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Management.Instrumentation.ManagementCreateAttribute.#ctor" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_ManagementCreateAttribute" />
    </api>
    <api id="M:System.Management.Instrumentation.ManagementCreateAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementCreateAttribute" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_ManagementCreateAttribute_ctor" />
    </api>
    <api id="T:System.Management.Instrumentation.ManagementEntityAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.ManagementEntityAttribute" />
      <apidata name="ManagementEntityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_ManagementEntityAttribute" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.ManagementEntityAttribute">
      <topicdata name="ManagementEntityAttribute" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.ManagementEntityAttribute" />
      <apidata name="ManagementEntityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Management.Instrumentation.ManagementEntityAttribute.#ctor" />
        <element api="P:System.Management.Instrumentation.ManagementEntityAttribute.External" />
        <element api="P:System.Management.Instrumentation.ManagementEntityAttribute.Name" />
        <element api="P:System.Management.Instrumentation.ManagementEntityAttribute.Singleton" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_ManagementEntityAttribute" />
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementEntityAttribute">
      <topicdata name="ManagementEntityAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementEntityAttribute" />
      <apidata name="ManagementEntityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementEntityAttribute.External" />
        <element api="P:System.Management.Instrumentation.ManagementEntityAttribute.Name" />
        <element api="P:System.Management.Instrumentation.ManagementEntityAttribute.Singleton" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="Properties_T_System_Management_Instrumentation_ManagementEntityAttribute" />
    </api>
    <api id="M:System.Management.Instrumentation.ManagementEntityAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementEntityAttribute" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_ManagementEntityAttribute_ctor" />
    </api>
    <api id="P:System.Management.Instrumentation.ManagementEntityAttribute.External">
      <topicdata group="api" />
      <apidata name="External" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementEntityAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_ManagementEntityAttribute_External" />
    </api>
    <api id="P:System.Management.Instrumentation.ManagementEntityAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementEntityAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_ManagementEntityAttribute_Name" />
    </api>
    <api id="P:System.Management.Instrumentation.ManagementEntityAttribute.Singleton">
      <topicdata group="api" />
      <apidata name="Singleton" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementEntityAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_ManagementEntityAttribute_Singleton" />
    </api>
    <api id="T:System.Management.Instrumentation.ManagementEnumeratorAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.ManagementEnumeratorAttribute" />
      <apidata name="ManagementEnumeratorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementNewInstanceAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Constructor" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_ManagementEnumeratorAttribute" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.ManagementEnumeratorAttribute">
      <topicdata name="ManagementEnumeratorAttribute" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" />
      <apidata name="ManagementEnumeratorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Management.Instrumentation.ManagementEnumeratorAttribute.#ctor" />
        <element api="P:System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_ManagementEnumeratorAttribute" />
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementEnumeratorAttribute">
      <topicdata name="ManagementEnumeratorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" />
      <apidata name="ManagementEnumeratorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="Properties_T_System_Management_Instrumentation_ManagementEnumeratorAttribute" />
    </api>
    <api id="M:System.Management.Instrumentation.ManagementEnumeratorAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_ManagementEnumeratorAttribute_ctor" />
    </api>
    <api id="P:System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_ManagementEnumeratorAttribute_Schema" />
    </api>
    <api id="T:System.Management.Instrumentation.ManagementHostingModel">
      <topicdata group="api" />
      <apidata name="ManagementHostingModel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Management.Instrumentation.ManagementHostingModel.Decoupled" />
        <element api="F:System.Management.Instrumentation.ManagementHostingModel.NetworkService" />
        <element api="F:System.Management.Instrumentation.ManagementHostingModel.LocalService" />
        <element api="F:System.Management.Instrumentation.ManagementHostingModel.LocalSystem" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="T_System_Management_Instrumentation_ManagementHostingModel" />
    </api>
    <api id="F:System.Management.Instrumentation.ManagementHostingModel.Decoupled">
      <topicdata group="api" notopic="" />
      <apidata name="Decoupled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </containers>
      <file name="F_System_Management_Instrumentation_ManagementHostingModel_Decoupled" />
    </api>
    <api id="F:System.Management.Instrumentation.ManagementHostingModel.LocalService">
      <topicdata group="api" notopic="" />
      <apidata name="LocalService" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </containers>
      <file name="F_System_Management_Instrumentation_ManagementHostingModel_LocalService" />
    </api>
    <api id="F:System.Management.Instrumentation.ManagementHostingModel.LocalSystem">
      <topicdata group="api" notopic="" />
      <apidata name="LocalSystem" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </containers>
      <file name="F_System_Management_Instrumentation_ManagementHostingModel_LocalSystem" />
    </api>
    <api id="F:System.Management.Instrumentation.ManagementHostingModel.NetworkService">
      <topicdata group="api" notopic="" />
      <apidata name="NetworkService" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </containers>
      <file name="F_System_Management_Instrumentation_ManagementHostingModel_NetworkService" />
    </api>
    <api id="T:System.Management.Instrumentation.ManagementKeyAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.ManagementKeyAttribute" />
      <apidata name="ManagementKeyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_ManagementKeyAttribute" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.ManagementKeyAttribute">
      <topicdata name="ManagementKeyAttribute" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.ManagementKeyAttribute" />
      <apidata name="ManagementKeyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Management.Instrumentation.ManagementKeyAttribute.#ctor" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_ManagementKeyAttribute" />
    </api>
    <api id="M:System.Management.Instrumentation.ManagementKeyAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementKeyAttribute" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_ManagementKeyAttribute_ctor" />
    </api>
    <api id="T:System.Management.Instrumentation.ManagementMemberAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.ManagementMemberAttribute" />
      <apidata name="ManagementMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Management.Instrumentation.ManagementNewInstanceAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementRemoveAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementProbeAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementTaskAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementKeyAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementConfigurationAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementCommitAttribute" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_ManagementMemberAttribute" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.ManagementMemberAttribute">
      <topicdata name="ManagementMemberAttribute" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.ManagementMemberAttribute" />
      <apidata name="ManagementMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Management.Instrumentation.ManagementMemberAttribute.#ctor" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_ManagementMemberAttribute" />
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementMemberAttribute">
      <topicdata name="ManagementMemberAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementMemberAttribute" />
      <apidata name="ManagementMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="Properties_T_System_Management_Instrumentation_ManagementMemberAttribute" />
    </api>
    <api id="M:System.Management.Instrumentation.ManagementMemberAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_ManagementMemberAttribute_ctor" />
    </api>
    <api id="P:System.Management.Instrumentation.ManagementMemberAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_ManagementMemberAttribute_Name" />
    </api>
    <api id="T:System.Management.Instrumentation.ManagementNameAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.ManagementNameAttribute" />
      <apidata name="ManagementNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Parameter" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_ManagementNameAttribute" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.ManagementNameAttribute">
      <topicdata name="ManagementNameAttribute" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.ManagementNameAttribute" />
      <apidata name="ManagementNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Management.Instrumentation.ManagementNameAttribute.#ctor(System.String)" />
        <element api="P:System.Management.Instrumentation.ManagementNameAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_ManagementNameAttribute" />
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementNameAttribute">
      <topicdata name="ManagementNameAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementNameAttribute" />
      <apidata name="ManagementNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementNameAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="Properties_T_System_Management_Instrumentation_ManagementNameAttribute" />
    </api>
    <api id="M:System.Management.Instrumentation.ManagementNameAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementNameAttribute" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_ManagementNameAttribute_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Management.Instrumentation.ManagementNameAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementNameAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_ManagementNameAttribute_Name" />
    </api>
    <api id="T:System.Management.Instrumentation.ManagementNewInstanceAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.ManagementNewInstanceAttribute" />
      <apidata name="ManagementNewInstanceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Management.Instrumentation.ManagementBindAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementCreateAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Constructor" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_ManagementNewInstanceAttribute" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.ManagementNewInstanceAttribute">
      <topicdata name="ManagementNewInstanceAttribute" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.ManagementNewInstanceAttribute" />
      <apidata name="ManagementNewInstanceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
        <element api="M:System.Management.Instrumentation.ManagementNewInstanceAttribute.#ctor" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_ManagementNewInstanceAttribute" />
    </api>
    <api id="M:System.Management.Instrumentation.ManagementNewInstanceAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementNewInstanceAttribute" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_ManagementNewInstanceAttribute_ctor" />
    </api>
    <api id="T:System.Management.Instrumentation.ManagementProbeAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.ManagementProbeAttribute" />
      <apidata name="ManagementProbeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_ManagementProbeAttribute" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.ManagementProbeAttribute">
      <topicdata name="ManagementProbeAttribute" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.ManagementProbeAttribute" />
      <apidata name="ManagementProbeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
        <element api="M:System.Management.Instrumentation.ManagementProbeAttribute.#ctor" />
        <element api="P:System.Management.Instrumentation.ManagementProbeAttribute.Schema" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_ManagementProbeAttribute" />
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementProbeAttribute">
      <topicdata name="ManagementProbeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementProbeAttribute" />
      <apidata name="ManagementProbeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
        <element api="P:System.Management.Instrumentation.ManagementProbeAttribute.Schema" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="Properties_T_System_Management_Instrumentation_ManagementProbeAttribute" />
    </api>
    <api id="M:System.Management.Instrumentation.ManagementProbeAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementProbeAttribute" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_ManagementProbeAttribute_ctor" />
    </api>
    <api id="P:System.Management.Instrumentation.ManagementProbeAttribute.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementProbeAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_ManagementProbeAttribute_Schema" />
    </api>
    <api id="T:System.Management.Instrumentation.ManagementReferenceAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.ManagementReferenceAttribute" />
      <apidata name="ManagementReferenceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_ManagementReferenceAttribute" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.ManagementReferenceAttribute">
      <topicdata name="ManagementReferenceAttribute" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.ManagementReferenceAttribute" />
      <apidata name="ManagementReferenceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Management.Instrumentation.ManagementReferenceAttribute.#ctor" />
        <element api="P:System.Management.Instrumentation.ManagementReferenceAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_ManagementReferenceAttribute" />
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementReferenceAttribute">
      <topicdata name="ManagementReferenceAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementReferenceAttribute" />
      <apidata name="ManagementReferenceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementReferenceAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="Properties_T_System_Management_Instrumentation_ManagementReferenceAttribute" />
    </api>
    <api id="M:System.Management.Instrumentation.ManagementReferenceAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementReferenceAttribute" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_ManagementReferenceAttribute_ctor" />
    </api>
    <api id="P:System.Management.Instrumentation.ManagementReferenceAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementReferenceAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_ManagementReferenceAttribute_Type" />
    </api>
    <api id="T:System.Management.Instrumentation.ManagementRemoveAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.ManagementRemoveAttribute" />
      <apidata name="ManagementRemoveAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_ManagementRemoveAttribute" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.ManagementRemoveAttribute">
      <topicdata name="ManagementRemoveAttribute" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.ManagementRemoveAttribute" />
      <apidata name="ManagementRemoveAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
        <element api="M:System.Management.Instrumentation.ManagementRemoveAttribute.#ctor" />
        <element api="P:System.Management.Instrumentation.ManagementRemoveAttribute.Schema" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_ManagementRemoveAttribute" />
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementRemoveAttribute">
      <topicdata name="ManagementRemoveAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementRemoveAttribute" />
      <apidata name="ManagementRemoveAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
        <element api="P:System.Management.Instrumentation.ManagementRemoveAttribute.Schema" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="Properties_T_System_Management_Instrumentation_ManagementRemoveAttribute" />
    </api>
    <api id="M:System.Management.Instrumentation.ManagementRemoveAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementRemoveAttribute" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_ManagementRemoveAttribute_ctor" />
    </api>
    <api id="P:System.Management.Instrumentation.ManagementRemoveAttribute.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementRemoveAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_ManagementRemoveAttribute_Schema" />
    </api>
    <api id="T:System.Management.Instrumentation.ManagementTaskAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.ManagementTaskAttribute" />
      <apidata name="ManagementTaskAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_ManagementTaskAttribute" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.ManagementTaskAttribute">
      <topicdata name="ManagementTaskAttribute" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.ManagementTaskAttribute" />
      <apidata name="ManagementTaskAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
        <element api="M:System.Management.Instrumentation.ManagementTaskAttribute.#ctor" />
        <element api="P:System.Management.Instrumentation.ManagementTaskAttribute.Schema" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_ManagementTaskAttribute" />
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementTaskAttribute">
      <topicdata name="ManagementTaskAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementTaskAttribute" />
      <apidata name="ManagementTaskAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
        <element api="P:System.Management.Instrumentation.ManagementTaskAttribute.Schema" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="Properties_T_System_Management_Instrumentation_ManagementTaskAttribute" />
    </api>
    <api id="M:System.Management.Instrumentation.ManagementTaskAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementTaskAttribute" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_ManagementTaskAttribute_ctor" />
    </api>
    <api id="P:System.Management.Instrumentation.ManagementTaskAttribute.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementTaskAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_ManagementTaskAttribute_Schema" />
    </api>
    <api id="T:System.Management.Instrumentation.WmiConfigurationAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Management.Instrumentation.WmiConfigurationAttribute" />
      <apidata name="WmiConfigurationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Management_Instrumentation_WmiConfigurationAttribute" />
    </api>
    <api id="AllMembers.T:System.Management.Instrumentation.WmiConfigurationAttribute">
      <topicdata name="WmiConfigurationAttribute" group="list" subgroup="members" typeTopicId="T:System.Management.Instrumentation.WmiConfigurationAttribute" />
      <apidata name="WmiConfigurationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="AllMembers_T_System_Management_Instrumentation_WmiConfigurationAttribute" />
    </api>
    <api id="Properties.T:System.Management.Instrumentation.WmiConfigurationAttribute">
      <topicdata name="WmiConfigurationAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.WmiConfigurationAttribute" />
      <apidata name="WmiConfigurationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <file name="Properties_T_System_Management_Instrumentation_WmiConfigurationAttribute" />
    </api>
    <api id="M:System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="scope">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiConfigurationAttribute" ref="true" />
      </containers>
      <file name="C_System_Management_Instrumentation_WmiConfigurationAttribute_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup">
      <topicdata group="api" />
      <apidata name="HostingGroup" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiConfigurationAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_WmiConfigurationAttribute_HostingGroup" />
    </api>
    <api id="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel">
      <topicdata group="api" />
      <apidata name="HostingModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiConfigurationAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_WmiConfigurationAttribute_HostingModel" />
    </api>
    <api id="P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel">
      <topicdata group="api" />
      <apidata name="IdentifyLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiConfigurationAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_WmiConfigurationAttribute_IdentifyLevel" />
    </api>
    <api id="P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity">
      <topicdata group="api" />
      <apidata name="NamespaceSecurity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiConfigurationAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_WmiConfigurationAttribute_NamespaceSecurity" />
    </api>
    <api id="P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope">
      <topicdata group="api" />
      <apidata name="Scope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiConfigurationAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_WmiConfigurationAttribute_Scope" />
    </api>
    <api id="P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction">
      <topicdata group="api" />
      <apidata name="SecurityRestriction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiConfigurationAttribute" ref="true" />
      </containers>
      <file name="P_System_Management_Instrumentation_WmiConfigurationAttribute_SecurityRestriction" />
    </api>
    <api id="T:System.Runtime.CompilerServices.ExecutionScope">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Runtime.CompilerServices.ExecutionScope" />
      <apidata name="ExecutionScope" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
      </containers>
      <file name="T_System_Runtime_CompilerServices_ExecutionScope" />
    </api>
    <api id="AllMembers.T:System.Runtime.CompilerServices.ExecutionScope">
      <topicdata name="ExecutionScope" group="list" subgroup="members" typeTopicId="T:System.Runtime.CompilerServices.ExecutionScope" />
      <apidata name="ExecutionScope" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.CompilerServices.ExecutionScope.CreateDelegate(System.Int32,System.Object[])" />
        <element api="M:System.Runtime.CompilerServices.ExecutionScope.CreateHoistedLocals" />
        <element api="F:System.Runtime.CompilerServices.ExecutionScope.Globals" />
        <element api="M:System.Runtime.CompilerServices.ExecutionScope.IsolateExpression(System.Linq.Expressions.Expression,System.Object[])" />
        <element api="F:System.Runtime.CompilerServices.ExecutionScope.Locals" />
        <element api="F:System.Runtime.CompilerServices.ExecutionScope.Parent" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
      </containers>
      <file name="AllMembers_T_System_Runtime_CompilerServices_ExecutionScope" />
    </api>
    <api id="Methods.T:System.Runtime.CompilerServices.ExecutionScope">
      <topicdata name="ExecutionScope" group="list" subgroup="Methods" typeTopicId="T:System.Runtime.CompilerServices.ExecutionScope" />
      <apidata name="ExecutionScope" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.CompilerServices.ExecutionScope.CreateDelegate(System.Int32,System.Object[])" />
        <element api="M:System.Runtime.CompilerServices.ExecutionScope.CreateHoistedLocals" />
        <element api="M:System.Runtime.CompilerServices.ExecutionScope.IsolateExpression(System.Linq.Expressions.Expression,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
      </containers>
      <file name="Methods_T_System_Runtime_CompilerServices_ExecutionScope" />
    </api>
    <api id="Fields.T:System.Runtime.CompilerServices.ExecutionScope">
      <topicdata name="ExecutionScope" group="list" subgroup="Fields" typeTopicId="T:System.Runtime.CompilerServices.ExecutionScope" />
      <apidata name="ExecutionScope" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Runtime.CompilerServices.ExecutionScope.Globals" />
        <element api="F:System.Runtime.CompilerServices.ExecutionScope.Locals" />
        <element api="F:System.Runtime.CompilerServices.ExecutionScope.Parent" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
      </containers>
      <file name="Fields_T_System_Runtime_CompilerServices_ExecutionScope" />
    </api>
    <api id="M:System.Runtime.CompilerServices.ExecutionScope.CreateDelegate(System.Int32,System.Object[])">
      <topicdata group="api" />
      <apidata name="CreateDelegate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="indexLambda">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="locals">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Delegate" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
        <type api="T:System.Runtime.CompilerServices.ExecutionScope" ref="true" />
      </containers>
      <file name="M_System_Runtime_CompilerServices_ExecutionScope_CreateDelegate_2_ad3bab40" />
    </api>
    <api id="M:System.Runtime.CompilerServices.ExecutionScope.CreateHoistedLocals">
      <topicdata group="api" />
      <apidata name="CreateHoistedLocals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
        <type api="T:System.Runtime.CompilerServices.ExecutionScope" ref="true" />
      </containers>
      <file name="M_System_Runtime_CompilerServices_ExecutionScope_CreateHoistedLocals" />
    </api>
    <api id="F:System.Runtime.CompilerServices.ExecutionScope.Globals">
      <topicdata group="api" />
      <apidata name="Globals" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
        <type api="T:System.Runtime.CompilerServices.ExecutionScope" ref="true" />
      </containers>
      <file name="F_System_Runtime_CompilerServices_ExecutionScope_Globals" />
    </api>
    <api id="M:System.Runtime.CompilerServices.ExecutionScope.IsolateExpression(System.Linq.Expressions.Expression,System.Object[])">
      <topicdata group="api" />
      <apidata name="IsolateExpression" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="locals">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
        <type api="T:System.Runtime.CompilerServices.ExecutionScope" ref="true" />
      </containers>
      <file name="M_System_Runtime_CompilerServices_ExecutionScope_IsolateExpression_2_5fc0fb7e" />
    </api>
    <api id="F:System.Runtime.CompilerServices.ExecutionScope.Locals">
      <topicdata group="api" />
      <apidata name="Locals" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
        <type api="T:System.Runtime.CompilerServices.ExecutionScope" ref="true" />
      </containers>
      <file name="F_System_Runtime_CompilerServices_ExecutionScope_Locals" />
    </api>
    <api id="F:System.Runtime.CompilerServices.ExecutionScope.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Runtime.CompilerServices.ExecutionScope" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
        <type api="T:System.Runtime.CompilerServices.ExecutionScope" ref="true" />
      </containers>
      <file name="F_System_Runtime_CompilerServices_ExecutionScope_Parent" />
    </api>
    <api id="T:System.Runtime.CompilerServices.ExtensionAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Runtime.CompilerServices.ExtensionAttribute" />
      <apidata name="ExtensionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Method" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Runtime_CompilerServices_ExtensionAttribute" />
    </api>
    <api id="AllMembers.T:System.Runtime.CompilerServices.ExtensionAttribute">
      <topicdata name="ExtensionAttribute" group="list" subgroup="members" typeTopicId="T:System.Runtime.CompilerServices.ExtensionAttribute" />
      <apidata name="ExtensionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.CompilerServices.ExtensionAttribute.#ctor" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
      </containers>
      <file name="AllMembers_T_System_Runtime_CompilerServices_ExtensionAttribute" />
    </api>
    <api id="M:System.Runtime.CompilerServices.ExtensionAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
        <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
      </containers>
      <file name="C_System_Runtime_CompilerServices_ExtensionAttribute_ctor" />
    </api>
    <api id="T:System.Runtime.CompilerServices.IStrongBox">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Runtime.CompilerServices.IStrongBox" />
      <apidata name="IStrongBox" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:System.Runtime.CompilerServices.StrongBox`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
      </containers>
      <file name="T_System_Runtime_CompilerServices_IStrongBox" />
    </api>
    <api id="AllMembers.T:System.Runtime.CompilerServices.IStrongBox">
      <topicdata name="IStrongBox" group="list" subgroup="members" typeTopicId="T:System.Runtime.CompilerServices.IStrongBox" />
      <apidata name="IStrongBox" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Runtime.CompilerServices.IStrongBox.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
      </containers>
      <file name="AllMembers_T_System_Runtime_CompilerServices_IStrongBox" />
    </api>
    <api id="Properties.T:System.Runtime.CompilerServices.IStrongBox">
      <topicdata name="IStrongBox" group="list" subgroup="Properties" typeTopicId="T:System.Runtime.CompilerServices.IStrongBox" />
      <apidata name="IStrongBox" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Runtime.CompilerServices.IStrongBox.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
      </containers>
      <file name="Properties_T_System_Runtime_CompilerServices_IStrongBox" />
    </api>
    <api id="P:System.Runtime.CompilerServices.IStrongBox.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
        <type api="T:System.Runtime.CompilerServices.IStrongBox" ref="true" />
      </containers>
      <file name="P_System_Runtime_CompilerServices_IStrongBox_Value" />
    </api>
    <api id="T:System.Runtime.CompilerServices.StrongBox`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Runtime.CompilerServices.StrongBox`1" />
      <apidata name="StrongBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.Runtime.CompilerServices.IStrongBox" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
      </containers>
      <file name="T_System_Runtime_CompilerServices_StrongBox`1" />
    </api>
    <api id="AllMembers.T:System.Runtime.CompilerServices.StrongBox`1">
      <topicdata name="StrongBox" group="list" subgroup="members" typeTopicId="T:System.Runtime.CompilerServices.StrongBox`1" />
      <apidata name="StrongBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Runtime.CompilerServices.StrongBox`1.#ctor(`0)" />
        <element api="P:System.Runtime.CompilerServices.StrongBox`1.System#Runtime#CompilerServices#IStrongBox#Value" />
        <element api="F:System.Runtime.CompilerServices.StrongBox`1.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
      </containers>
      <file name="AllMembers_T_System_Runtime_CompilerServices_StrongBox`1" />
    </api>
    <api id="Properties.T:System.Runtime.CompilerServices.StrongBox`1">
      <topicdata name="StrongBox" group="list" subgroup="Properties" typeTopicId="T:System.Runtime.CompilerServices.StrongBox`1" />
      <apidata name="StrongBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Runtime.CompilerServices.StrongBox`1.System#Runtime#CompilerServices#IStrongBox#Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
      </containers>
      <file name="Properties_T_System_Runtime_CompilerServices_StrongBox`1" />
    </api>
    <api id="Fields.T:System.Runtime.CompilerServices.StrongBox`1">
      <topicdata name="StrongBox" group="list" subgroup="Fields" typeTopicId="T:System.Runtime.CompilerServices.StrongBox`1" />
      <apidata name="StrongBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="F:System.Runtime.CompilerServices.StrongBox`1.Value" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
      </containers>
      <file name="Fields_T_System_Runtime_CompilerServices_StrongBox`1" />
    </api>
    <api id="M:System.Runtime.CompilerServices.StrongBox`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Runtime.CompilerServices.StrongBox`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
        <type api="T:System.Runtime.CompilerServices.StrongBox`1" ref="true" />
      </containers>
      <file name="C_System_Runtime_CompilerServices_StrongBox`1_ctor_1_337c34c5" />
    </api>
    <api id="P:System.Runtime.CompilerServices.StrongBox`1.System#Runtime#CompilerServices#IStrongBox#Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.CompilerServices.IStrongBox.Value">
          <type api="T:System.Runtime.CompilerServices.IStrongBox" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
        <type api="T:System.Runtime.CompilerServices.StrongBox`1" ref="true" />
      </containers>
      <file name="P_System_Runtime_CompilerServices_StrongBox`1_System_Runtime_CompilerServices_IStrongBox_Value" />
    </api>
    <api id="F:System.Runtime.CompilerServices.StrongBox`1.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="T" index="0" api="T:System.Runtime.CompilerServices.StrongBox`1" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Runtime.CompilerServices" />
        <type api="T:System.Runtime.CompilerServices.StrongBox`1" ref="true" />
      </containers>
      <file name="F_System_Runtime_CompilerServices_StrongBox`1_Value" />
    </api>
    <api id="T:System.Security.ManifestKinds">
      <topicdata group="api" />
      <apidata name="ManifestKinds" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Security.ManifestKinds.None" />
        <element api="F:System.Security.ManifestKinds.Deployment" />
        <element api="F:System.Security.ManifestKinds.Application" />
        <element api="F:System.Security.ManifestKinds.ApplicationAndDeployment" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_Security_ManifestKinds" />
    </api>
    <api id="F:System.Security.ManifestKinds.Application">
      <topicdata group="api" notopic="" />
      <apidata name="Application" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.ManifestKinds" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security" />
        <type api="T:System.Security.ManifestKinds" ref="false" />
      </containers>
      <file name="F_System_Security_ManifestKinds_Application" />
    </api>
    <api id="F:System.Security.ManifestKinds.ApplicationAndDeployment">
      <topicdata group="api" notopic="" />
      <apidata name="ApplicationAndDeployment" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.ManifestKinds" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security" />
        <type api="T:System.Security.ManifestKinds" ref="false" />
      </containers>
      <file name="F_System_Security_ManifestKinds_ApplicationAndDeployment" />
    </api>
    <api id="F:System.Security.ManifestKinds.Deployment">
      <topicdata group="api" notopic="" />
      <apidata name="Deployment" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.ManifestKinds" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security" />
        <type api="T:System.Security.ManifestKinds" ref="false" />
      </containers>
      <file name="F_System_Security_ManifestKinds_Deployment" />
    </api>
    <api id="F:System.Security.ManifestKinds.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.ManifestKinds" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security" />
        <type api="T:System.Security.ManifestKinds" ref="false" />
      </containers>
      <file name="F_System_Security_ManifestKinds_None" />
    </api>
    <api id="T:System.Security.Cryptography.Aes">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.Aes" />
      <apidata name="Aes" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Security.Cryptography.AesCryptoServiceProvider" ref="true" />
          <type api="T:System.Security.Cryptography.AesManaged" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_Aes" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.Aes">
      <topicdata name="Aes" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.Aes" />
      <apidata name="Aes" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.Aes.#ctor" />
        <element api="Overload:System.Security.Cryptography.Aes.Create">
          <element api="M:System.Security.Cryptography.Aes.Create" />
          <element api="M:System.Security.Cryptography.Aes.Create(System.String)" />
        </element>
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.BlockSize" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.Aes.CreateDecryptor">
          <element api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor" />
          <element api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])" />
        </element>
        <element api="Overload:System.Security.Cryptography.Aes.CreateEncryptor">
          <element api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor" />
          <element api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])" />
        </element>
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.IVValue" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.KeySize" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.KeyValue" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.ModeValue" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.Padding" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.PaddingValue" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_Aes" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.Aes">
      <topicdata name="Aes" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.Aes" />
      <apidata name="Aes" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Security.Cryptography.Aes.Create">
          <element api="M:System.Security.Cryptography.Aes.Create" />
          <element api="M:System.Security.Cryptography.Aes.Create(System.String)" />
        </element>
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.Aes.CreateDecryptor">
          <element api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor" />
          <element api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])" />
        </element>
        <element api="Overload:System.Security.Cryptography.Aes.CreateEncryptor">
          <element api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor" />
          <element api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])" />
        </element>
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_Aes" />
    </api>
    <api id="Overload:System.Security.Cryptography.Aes.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.Aes" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.Aes.Create" />
        <element api="M:System.Security.Cryptography.Aes.Create(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.Aes" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_Aes_Create" />
    </api>
    <api id="Overload:System.Security.Cryptography.Aes.CreateDecryptor">
      <topicdata name="CreateDecryptor" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.Aes" allInherited="true" />
      <apidata name="CreateDecryptor" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.Aes" />
      </containers>
      <file name="O_T_System_Security_Cryptography_Aes_CreateDecryptor" />
    </api>
    <api id="Overload:System.Security.Cryptography.Aes.CreateEncryptor">
      <topicdata name="CreateEncryptor" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.Aes" allInherited="true" />
      <apidata name="CreateEncryptor" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.Aes" />
      </containers>
      <file name="O_T_System_Security_Cryptography_Aes_CreateEncryptor" />
    </api>
    <api id="M:System.Security.Cryptography.Aes.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.Aes" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_Aes_ctor" />
    </api>
    <api id="M:System.Security.Cryptography.Aes.Create">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.Aes.Create" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Security.Cryptography.Aes" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.Aes" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_Aes_Create" />
    </api>
    <api id="M:System.Security.Cryptography.Aes.Create(System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.Aes.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="algorithmName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.Aes" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.Aes" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_Aes_Create_1_72eac341" />
    </api>
    <api id="T:System.Security.Cryptography.AesCryptoServiceProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.AesCryptoServiceProvider" />
      <apidata name="AesCryptoServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.Aes" ref="true" />
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_AesCryptoServiceProvider" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.AesCryptoServiceProvider">
      <topicdata name="AesCryptoServiceProvider" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.AesCryptoServiceProvider" />
      <apidata name="AesCryptoServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.#ctor" />
        <element api="Overload:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor">
          <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor" />
          <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])" />
        </element>
        <element api="Overload:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor">
          <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor" />
          <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])" />
        </element>
        <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV" />
        <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey" />
        <element api="P:System.Security.Cryptography.AesCryptoServiceProvider.Key" />
        <element api="P:System.Security.Cryptography.AesCryptoServiceProvider.KeySize" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.BlockSize" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.Clear" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.IVValue" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.KeyValue" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.ModeValue" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.Padding" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.PaddingValue" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_AesCryptoServiceProvider" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.AesCryptoServiceProvider">
      <topicdata name="AesCryptoServiceProvider" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.AesCryptoServiceProvider" />
      <apidata name="AesCryptoServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor">
          <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor" />
          <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])" />
        </element>
        <element api="Overload:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor">
          <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor" />
          <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])" />
        </element>
        <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV" />
        <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.Clear" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_AesCryptoServiceProvider" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.AesCryptoServiceProvider">
      <topicdata name="AesCryptoServiceProvider" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.AesCryptoServiceProvider" />
      <apidata name="AesCryptoServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.AesCryptoServiceProvider.Key" />
        <element api="P:System.Security.Cryptography.AesCryptoServiceProvider.KeySize" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.BlockSize" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.Padding" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_AesCryptoServiceProvider" />
    </api>
    <api id="Overload:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor">
      <topicdata name="CreateDecryptor" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.AesCryptoServiceProvider" />
      <apidata name="CreateDecryptor" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor" />
        <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesCryptoServiceProvider" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_AesCryptoServiceProvider_CreateDecryptor" />
    </api>
    <api id="Overload:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor">
      <topicdata name="CreateEncryptor" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.AesCryptoServiceProvider" />
      <apidata name="CreateEncryptor" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor" />
        <element api="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesCryptoServiceProvider" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_AesCryptoServiceProvider_CreateEncryptor" />
    </api>
    <api id="M:System.Security.Cryptography.AesCryptoServiceProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesCryptoServiceProvider" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_AesCryptoServiceProvider_ctor" />
    </api>
    <api id="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor">
      <topicdata group="api" />
      <apidata name="CreateDecryptor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesCryptoServiceProvider" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_AesCryptoServiceProvider_CreateDecryptor" />
    </api>
    <api id="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
      <topicdata group="api" />
      <apidata name="CreateDecryptor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesCryptoServiceProvider" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_AesCryptoServiceProvider_CreateDecryptor_2_7aaea447" />
    </api>
    <api id="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor">
      <topicdata group="api" />
      <apidata name="CreateEncryptor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesCryptoServiceProvider" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_AesCryptoServiceProvider_CreateEncryptor" />
    </api>
    <api id="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
      <topicdata group="api" />
      <apidata name="CreateEncryptor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesCryptoServiceProvider" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_AesCryptoServiceProvider_CreateEncryptor_2_7aaea447" />
    </api>
    <api id="M:System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV">
      <topicdata group="api" />
      <apidata name="GenerateIV" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesCryptoServiceProvider" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_AesCryptoServiceProvider_GenerateIV" />
    </api>
    <api id="M:System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey">
      <topicdata group="api" />
      <apidata name="GenerateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesCryptoServiceProvider" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_AesCryptoServiceProvider_GenerateKey" />
    </api>
    <api id="P:System.Security.Cryptography.AesCryptoServiceProvider.Key">
      <topicdata group="api" />
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.SymmetricAlgorithm.Key">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesCryptoServiceProvider" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_AesCryptoServiceProvider_Key" />
    </api>
    <api id="P:System.Security.Cryptography.AesCryptoServiceProvider.KeySize">
      <topicdata group="api" />
      <apidata name="KeySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.SymmetricAlgorithm.KeySize">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesCryptoServiceProvider" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_AesCryptoServiceProvider_KeySize" />
    </api>
    <api id="T:System.Security.Cryptography.AesManaged">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.AesManaged" />
      <apidata name="AesManaged" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.Aes" ref="true" />
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_AesManaged" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.AesManaged">
      <topicdata name="AesManaged" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.AesManaged" />
      <apidata name="AesManaged" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.AesManaged.#ctor" />
        <element api="Overload:System.Security.Cryptography.AesManaged.CreateDecryptor">
          <element api="M:System.Security.Cryptography.AesManaged.CreateDecryptor" />
          <element api="M:System.Security.Cryptography.AesManaged.CreateDecryptor(System.Byte[],System.Byte[])" />
        </element>
        <element api="Overload:System.Security.Cryptography.AesManaged.CreateEncryptor">
          <element api="M:System.Security.Cryptography.AesManaged.CreateEncryptor" />
          <element api="M:System.Security.Cryptography.AesManaged.CreateEncryptor(System.Byte[],System.Byte[])" />
        </element>
        <element api="P:System.Security.Cryptography.AesManaged.FeedbackSize" />
        <element api="M:System.Security.Cryptography.AesManaged.GenerateIV" />
        <element api="M:System.Security.Cryptography.AesManaged.GenerateKey" />
        <element api="P:System.Security.Cryptography.AesManaged.IV" />
        <element api="P:System.Security.Cryptography.AesManaged.Key" />
        <element api="P:System.Security.Cryptography.AesManaged.KeySize" />
        <element api="P:System.Security.Cryptography.AesManaged.Mode" />
        <element api="P:System.Security.Cryptography.AesManaged.Padding" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.BlockSize" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.Clear" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.IVValue" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.KeyValue" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.ModeValue" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.PaddingValue" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_AesManaged" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.AesManaged">
      <topicdata name="AesManaged" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.AesManaged" />
      <apidata name="AesManaged" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Security.Cryptography.AesManaged.CreateDecryptor">
          <element api="M:System.Security.Cryptography.AesManaged.CreateDecryptor" />
          <element api="M:System.Security.Cryptography.AesManaged.CreateDecryptor(System.Byte[],System.Byte[])" />
        </element>
        <element api="Overload:System.Security.Cryptography.AesManaged.CreateEncryptor">
          <element api="M:System.Security.Cryptography.AesManaged.CreateEncryptor" />
          <element api="M:System.Security.Cryptography.AesManaged.CreateEncryptor(System.Byte[],System.Byte[])" />
        </element>
        <element api="M:System.Security.Cryptography.AesManaged.GenerateIV" />
        <element api="M:System.Security.Cryptography.AesManaged.GenerateKey" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.Clear" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_AesManaged" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.AesManaged">
      <topicdata name="AesManaged" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.AesManaged" />
      <apidata name="AesManaged" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.AesManaged.FeedbackSize" />
        <element api="P:System.Security.Cryptography.AesManaged.IV" />
        <element api="P:System.Security.Cryptography.AesManaged.Key" />
        <element api="P:System.Security.Cryptography.AesManaged.KeySize" />
        <element api="P:System.Security.Cryptography.AesManaged.Mode" />
        <element api="P:System.Security.Cryptography.AesManaged.Padding" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.BlockSize" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes" />
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_AesManaged" />
    </api>
    <api id="Overload:System.Security.Cryptography.AesManaged.CreateDecryptor">
      <topicdata name="CreateDecryptor" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.AesManaged" />
      <apidata name="CreateDecryptor" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.AesManaged.CreateDecryptor" />
        <element api="M:System.Security.Cryptography.AesManaged.CreateDecryptor(System.Byte[],System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesManaged" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_AesManaged_CreateDecryptor" />
    </api>
    <api id="Overload:System.Security.Cryptography.AesManaged.CreateEncryptor">
      <topicdata name="CreateEncryptor" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.AesManaged" />
      <apidata name="CreateEncryptor" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.AesManaged.CreateEncryptor" />
        <element api="M:System.Security.Cryptography.AesManaged.CreateEncryptor(System.Byte[],System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesManaged" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_AesManaged_CreateEncryptor" />
    </api>
    <api id="M:System.Security.Cryptography.AesManaged.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesManaged" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_AesManaged_ctor" />
    </api>
    <api id="M:System.Security.Cryptography.AesManaged.CreateDecryptor">
      <topicdata group="api" />
      <apidata name="CreateDecryptor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.AesManaged.CreateDecryptor" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesManaged" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_AesManaged_CreateDecryptor" />
    </api>
    <api id="M:System.Security.Cryptography.AesManaged.CreateDecryptor(System.Byte[],System.Byte[])">
      <topicdata group="api" />
      <apidata name="CreateDecryptor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.AesManaged.CreateDecryptor" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesManaged" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_AesManaged_CreateDecryptor_2_7aaea447" />
    </api>
    <api id="M:System.Security.Cryptography.AesManaged.CreateEncryptor">
      <topicdata group="api" />
      <apidata name="CreateEncryptor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.AesManaged.CreateEncryptor" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesManaged" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_AesManaged_CreateEncryptor" />
    </api>
    <api id="M:System.Security.Cryptography.AesManaged.CreateEncryptor(System.Byte[],System.Byte[])">
      <topicdata group="api" />
      <apidata name="CreateEncryptor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.AesManaged.CreateEncryptor" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesManaged" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_AesManaged_CreateEncryptor_2_7aaea447" />
    </api>
    <api id="P:System.Security.Cryptography.AesManaged.FeedbackSize">
      <topicdata group="api" />
      <apidata name="FeedbackSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesManaged" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_AesManaged_FeedbackSize" />
    </api>
    <api id="M:System.Security.Cryptography.AesManaged.GenerateIV">
      <topicdata group="api" />
      <apidata name="GenerateIV" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesManaged" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_AesManaged_GenerateIV" />
    </api>
    <api id="M:System.Security.Cryptography.AesManaged.GenerateKey">
      <topicdata group="api" />
      <apidata name="GenerateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesManaged" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_AesManaged_GenerateKey" />
    </api>
    <api id="P:System.Security.Cryptography.AesManaged.IV">
      <topicdata group="api" />
      <apidata name="IV" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.SymmetricAlgorithm.IV">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesManaged" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_AesManaged_IV" />
    </api>
    <api id="P:System.Security.Cryptography.AesManaged.Key">
      <topicdata group="api" />
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.SymmetricAlgorithm.Key">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesManaged" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_AesManaged_Key" />
    </api>
    <api id="P:System.Security.Cryptography.AesManaged.KeySize">
      <topicdata group="api" />
      <apidata name="KeySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.SymmetricAlgorithm.KeySize">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesManaged" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_AesManaged_KeySize" />
    </api>
    <api id="P:System.Security.Cryptography.AesManaged.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.SymmetricAlgorithm.Mode">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CipherMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesManaged" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_AesManaged_Mode" />
    </api>
    <api id="P:System.Security.Cryptography.AesManaged.Padding">
      <topicdata group="api" />
      <apidata name="Padding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.SymmetricAlgorithm.Padding">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Security.Cryptography.PaddingMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.AesManaged" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_AesManaged_Padding" />
    </api>
    <api id="T:System.Security.Cryptography.CngAlgorithm">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngAlgorithm" />
      <apidata name="CngAlgorithm" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_CngAlgorithm" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.CngAlgorithm">
      <topicdata name="CngAlgorithm" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.CngAlgorithm" />
      <apidata name="CngAlgorithm" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Security.Cryptography.CngAlgorithm.#ctor(System.String)" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.Algorithm" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.ECDsaP256" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.ECDsaP384" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.ECDsaP521" />
        <element api="Overload:System.Security.Cryptography.CngAlgorithm.Equals">
          <element api="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)" />
          <element api="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Object)" />
        </element>
        <element api="M:System.Security.Cryptography.CngAlgorithm.GetHashCode" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.MD5" />
        <element api="M:System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)" />
        <element api="M:System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.Sha1" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.Sha256" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.Sha384" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.Sha512" />
        <element api="M:System.Security.Cryptography.CngAlgorithm.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_CngAlgorithm" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.CngAlgorithm">
      <topicdata name="CngAlgorithm" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.CngAlgorithm" />
      <apidata name="CngAlgorithm" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Security.Cryptography.CngAlgorithm.Equals">
          <element api="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)" />
          <element api="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Object)" />
        </element>
        <element api="M:System.Security.Cryptography.CngAlgorithm.GetHashCode" />
        <element api="M:System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)" />
        <element api="M:System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)" />
        <element api="M:System.Security.Cryptography.CngAlgorithm.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_CngAlgorithm" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.CngAlgorithm">
      <topicdata name="CngAlgorithm" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.CngAlgorithm" />
      <apidata name="CngAlgorithm" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.CngAlgorithm.Algorithm" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.ECDsaP256" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.ECDsaP384" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.ECDsaP521" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.MD5" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.Sha1" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.Sha256" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.Sha384" />
        <element api="P:System.Security.Cryptography.CngAlgorithm.Sha512" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_CngAlgorithm" />
    </api>
    <api id="Overload:System.Security.Cryptography.CngAlgorithm.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngAlgorithm" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)" />
        <element api="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_CngAlgorithm_Equals" />
    </api>
    <api id="M:System.Security.Cryptography.CngAlgorithm.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_CngAlgorithm_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithm.Algorithm">
      <topicdata group="api" />
      <apidata name="Algorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithm_Algorithm" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256">
      <topicdata group="api" />
      <apidata name="ECDiffieHellmanP256" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithm_ECDiffieHellmanP256" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384">
      <topicdata group="api" />
      <apidata name="ECDiffieHellmanP384" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithm_ECDiffieHellmanP384" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521">
      <topicdata group="api" />
      <apidata name="ECDiffieHellmanP521" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithm_ECDiffieHellmanP521" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithm.ECDsaP256">
      <topicdata group="api" />
      <apidata name="ECDsaP256" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithm_ECDsaP256" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithm.ECDsaP384">
      <topicdata group="api" />
      <apidata name="ECDsaP384" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithm_ECDsaP384" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithm.ECDsaP521">
      <topicdata group="api" />
      <apidata name="ECDsaP521" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithm_ECDsaP521" />
    </api>
    <api id="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.CngAlgorithm.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngAlgorithm_Equals_1_2572741a" />
    </api>
    <api id="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.CngAlgorithm.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngAlgorithm_Equals_1_10eb6d5b" />
    </api>
    <api id="M:System.Security.Cryptography.CngAlgorithm.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngAlgorithm_GetHashCode" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithm.MD5">
      <topicdata group="api" />
      <apidata name="MD5" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithm_MD5" />
    </api>
    <api id="M:System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngAlgorithm_op_Equality_2_3f17e961" />
    </api>
    <api id="M:System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngAlgorithm_op_Inequality_2_3f17e961" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithm.Sha1">
      <topicdata group="api" />
      <apidata name="Sha1" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithm_Sha1" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithm.Sha256">
      <topicdata group="api" />
      <apidata name="Sha256" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithm_Sha256" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithm.Sha384">
      <topicdata group="api" />
      <apidata name="Sha384" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithm_Sha384" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithm.Sha512">
      <topicdata group="api" />
      <apidata name="Sha512" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithm_Sha512" />
    </api>
    <api id="M:System.Security.Cryptography.CngAlgorithm.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngAlgorithm_ToString" />
    </api>
    <api id="T:System.Security.Cryptography.CngAlgorithmGroup">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngAlgorithmGroup" />
      <apidata name="CngAlgorithmGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_CngAlgorithmGroup" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.CngAlgorithmGroup">
      <topicdata name="CngAlgorithmGroup" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.CngAlgorithmGroup" />
      <apidata name="CngAlgorithmGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)" />
        <element api="P:System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup" />
        <element api="P:System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman" />
        <element api="P:System.Security.Cryptography.CngAlgorithmGroup.Dsa" />
        <element api="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" />
        <element api="P:System.Security.Cryptography.CngAlgorithmGroup.ECDsa" />
        <element api="Overload:System.Security.Cryptography.CngAlgorithmGroup.Equals">
          <element api="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)" />
          <element api="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)" />
        </element>
        <element api="M:System.Security.Cryptography.CngAlgorithmGroup.GetHashCode" />
        <element api="M:System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)" />
        <element api="M:System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)" />
        <element api="P:System.Security.Cryptography.CngAlgorithmGroup.Rsa" />
        <element api="M:System.Security.Cryptography.CngAlgorithmGroup.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_CngAlgorithmGroup" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.CngAlgorithmGroup">
      <topicdata name="CngAlgorithmGroup" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.CngAlgorithmGroup" />
      <apidata name="CngAlgorithmGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Security.Cryptography.CngAlgorithmGroup.Equals">
          <element api="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)" />
          <element api="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)" />
        </element>
        <element api="M:System.Security.Cryptography.CngAlgorithmGroup.GetHashCode" />
        <element api="M:System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)" />
        <element api="M:System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)" />
        <element api="M:System.Security.Cryptography.CngAlgorithmGroup.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_CngAlgorithmGroup" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.CngAlgorithmGroup">
      <topicdata name="CngAlgorithmGroup" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.CngAlgorithmGroup" />
      <apidata name="CngAlgorithmGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup" />
        <element api="P:System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman" />
        <element api="P:System.Security.Cryptography.CngAlgorithmGroup.Dsa" />
        <element api="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" />
        <element api="P:System.Security.Cryptography.CngAlgorithmGroup.ECDsa" />
        <element api="P:System.Security.Cryptography.CngAlgorithmGroup.Rsa" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_CngAlgorithmGroup" />
    </api>
    <api id="Overload:System.Security.Cryptography.CngAlgorithmGroup.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngAlgorithmGroup" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)" />
        <element api="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_CngAlgorithmGroup_Equals" />
    </api>
    <api id="M:System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="algorithmGroup">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_CngAlgorithmGroup_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup">
      <topicdata group="api" />
      <apidata name="AlgorithmGroup" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithmGroup_AlgorithmGroup" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman">
      <topicdata group="api" />
      <apidata name="DiffieHellman" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithmGroup_DiffieHellman" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithmGroup.Dsa">
      <topicdata group="api" />
      <apidata name="Dsa" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithmGroup_Dsa" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman">
      <topicdata group="api" />
      <apidata name="ECDiffieHellman" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithmGroup_ECDiffieHellman" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithmGroup.ECDsa">
      <topicdata group="api" />
      <apidata name="ECDsa" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithmGroup_ECDsa" />
    </api>
    <api id="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.CngAlgorithmGroup.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngAlgorithmGroup_Equals_1_2572741a" />
    </api>
    <api id="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.CngAlgorithmGroup.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngAlgorithmGroup_Equals_1_5e019f90" />
    </api>
    <api id="M:System.Security.Cryptography.CngAlgorithmGroup.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngAlgorithmGroup_GetHashCode" />
    </api>
    <api id="M:System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngAlgorithmGroup_op_Equality_2_9042f9ac" />
    </api>
    <api id="M:System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngAlgorithmGroup_op_Inequality_2_9042f9ac" />
    </api>
    <api id="P:System.Security.Cryptography.CngAlgorithmGroup.Rsa">
      <topicdata group="api" />
      <apidata name="Rsa" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngAlgorithmGroup_Rsa" />
    </api>
    <api id="M:System.Security.Cryptography.CngAlgorithmGroup.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngAlgorithmGroup_ToString" />
    </api>
    <api id="T:System.Security.Cryptography.CngExportPolicies">
      <topicdata group="api" />
      <apidata name="CngExportPolicies" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Security.Cryptography.CngExportPolicies.None" />
        <element api="F:System.Security.Cryptography.CngExportPolicies.AllowExport" />
        <element api="F:System.Security.Cryptography.CngExportPolicies.AllowPlaintextExport" />
        <element api="F:System.Security.Cryptography.CngExportPolicies.AllowArchiving" />
        <element api="F:System.Security.Cryptography.CngExportPolicies.AllowPlaintextArchiving" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_CngExportPolicies" />
    </api>
    <api id="F:System.Security.Cryptography.CngExportPolicies.AllowArchiving">
      <topicdata group="api" notopic="" />
      <apidata name="AllowArchiving" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngExportPolicies" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngExportPolicies" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngExportPolicies_AllowArchiving" />
    </api>
    <api id="F:System.Security.Cryptography.CngExportPolicies.AllowExport">
      <topicdata group="api" notopic="" />
      <apidata name="AllowExport" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngExportPolicies" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngExportPolicies" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngExportPolicies_AllowExport" />
    </api>
    <api id="F:System.Security.Cryptography.CngExportPolicies.AllowPlaintextArchiving">
      <topicdata group="api" notopic="" />
      <apidata name="AllowPlaintextArchiving" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngExportPolicies" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngExportPolicies" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngExportPolicies_AllowPlaintextArchiving" />
    </api>
    <api id="F:System.Security.Cryptography.CngExportPolicies.AllowPlaintextExport">
      <topicdata group="api" notopic="" />
      <apidata name="AllowPlaintextExport" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngExportPolicies" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngExportPolicies" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngExportPolicies_AllowPlaintextExport" />
    </api>
    <api id="F:System.Security.Cryptography.CngExportPolicies.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngExportPolicies" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngExportPolicies" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngExportPolicies_None" />
    </api>
    <api id="T:System.Security.Cryptography.CngKey">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngKey" />
      <apidata name="CngKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_CngKey" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.CngKey">
      <topicdata name="CngKey" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.CngKey" />
      <apidata name="CngKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Security.Cryptography.CngKey.Algorithm" />
        <element api="P:System.Security.Cryptography.CngKey.AlgorithmGroup" />
        <element api="Overload:System.Security.Cryptography.CngKey.Create">
          <element api="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)" />
          <element api="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)" />
          <element api="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)" />
        </element>
        <element api="M:System.Security.Cryptography.CngKey.Delete" />
        <element api="M:System.Security.Cryptography.CngKey.Dispose" />
        <element api="Overload:System.Security.Cryptography.CngKey.Exists">
          <element api="M:System.Security.Cryptography.CngKey.Exists(System.String)" />
          <element api="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)" />
          <element api="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)" />
        </element>
        <element api="M:System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)" />
        <element api="P:System.Security.Cryptography.CngKey.ExportPolicy" />
        <element api="M:System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)" />
        <element api="P:System.Security.Cryptography.CngKey.Handle" />
        <element api="M:System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)" />
        <element api="Overload:System.Security.Cryptography.CngKey.Import">
          <element api="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)" />
          <element api="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)" />
        </element>
        <element api="P:System.Security.Cryptography.CngKey.IsEphemeral" />
        <element api="P:System.Security.Cryptography.CngKey.IsMachineKey" />
        <element api="P:System.Security.Cryptography.CngKey.KeyName" />
        <element api="P:System.Security.Cryptography.CngKey.KeySize" />
        <element api="P:System.Security.Cryptography.CngKey.KeyUsage" />
        <element api="Overload:System.Security.Cryptography.CngKey.Open">
          <element api="M:System.Security.Cryptography.CngKey.Open(System.String)" />
          <element api="M:System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)" />
          <element api="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)" />
          <element api="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)" />
        </element>
        <element api="P:System.Security.Cryptography.CngKey.ParentWindowHandle" />
        <element api="P:System.Security.Cryptography.CngKey.Provider" />
        <element api="P:System.Security.Cryptography.CngKey.ProviderHandle" />
        <element api="M:System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)" />
        <element api="P:System.Security.Cryptography.CngKey.UIPolicy" />
        <element api="P:System.Security.Cryptography.CngKey.UniqueName" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_CngKey" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.CngKey">
      <topicdata name="CngKey" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.CngKey" />
      <apidata name="CngKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Security.Cryptography.CngKey.Create">
          <element api="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)" />
          <element api="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)" />
          <element api="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)" />
        </element>
        <element api="M:System.Security.Cryptography.CngKey.Delete" />
        <element api="M:System.Security.Cryptography.CngKey.Dispose" />
        <element api="Overload:System.Security.Cryptography.CngKey.Exists">
          <element api="M:System.Security.Cryptography.CngKey.Exists(System.String)" />
          <element api="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)" />
          <element api="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)" />
        </element>
        <element api="M:System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)" />
        <element api="M:System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)" />
        <element api="M:System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)" />
        <element api="Overload:System.Security.Cryptography.CngKey.Import">
          <element api="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)" />
          <element api="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)" />
        </element>
        <element api="Overload:System.Security.Cryptography.CngKey.Open">
          <element api="M:System.Security.Cryptography.CngKey.Open(System.String)" />
          <element api="M:System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)" />
          <element api="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)" />
          <element api="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)" />
        </element>
        <element api="M:System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_CngKey" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.CngKey">
      <topicdata name="CngKey" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.CngKey" />
      <apidata name="CngKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.CngKey.Algorithm" />
        <element api="P:System.Security.Cryptography.CngKey.AlgorithmGroup" />
        <element api="P:System.Security.Cryptography.CngKey.ExportPolicy" />
        <element api="P:System.Security.Cryptography.CngKey.Handle" />
        <element api="P:System.Security.Cryptography.CngKey.IsEphemeral" />
        <element api="P:System.Security.Cryptography.CngKey.IsMachineKey" />
        <element api="P:System.Security.Cryptography.CngKey.KeyName" />
        <element api="P:System.Security.Cryptography.CngKey.KeySize" />
        <element api="P:System.Security.Cryptography.CngKey.KeyUsage" />
        <element api="P:System.Security.Cryptography.CngKey.ParentWindowHandle" />
        <element api="P:System.Security.Cryptography.CngKey.Provider" />
        <element api="P:System.Security.Cryptography.CngKey.ProviderHandle" />
        <element api="P:System.Security.Cryptography.CngKey.UIPolicy" />
        <element api="P:System.Security.Cryptography.CngKey.UniqueName" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_CngKey" />
    </api>
    <api id="Overload:System.Security.Cryptography.CngKey.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngKey" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)" />
        <element api="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)" />
        <element api="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_CngKey_Create" />
    </api>
    <api id="Overload:System.Security.Cryptography.CngKey.Exists">
      <topicdata name="Exists" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngKey" />
      <apidata name="Exists" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.CngKey.Exists(System.String)" />
        <element api="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)" />
        <element api="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_CngKey_Exists" />
    </api>
    <api id="Overload:System.Security.Cryptography.CngKey.Import">
      <topicdata name="Import" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngKey" />
      <apidata name="Import" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)" />
        <element api="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_CngKey_Import" />
    </api>
    <api id="Overload:System.Security.Cryptography.CngKey.Open">
      <topicdata name="Open" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngKey" />
      <apidata name="Open" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.CngKey.Open(System.String)" />
        <element api="M:System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)" />
        <element api="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)" />
        <element api="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_CngKey_Open" />
    </api>
    <api id="P:System.Security.Cryptography.CngKey.Algorithm">
      <topicdata group="api" />
      <apidata name="Algorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKey_Algorithm" />
    </api>
    <api id="P:System.Security.Cryptography.CngKey.AlgorithmGroup">
      <topicdata group="api" />
      <apidata name="AlgorithmGroup" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithmGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKey_AlgorithmGroup" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.CngKey.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKey_Create_1_10eb6d5b" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.CngKey.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
        </parameter>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKey_Create_2_0cc115d4" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.CngKey.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
        </parameter>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="creationParameters">
          <type api="T:System.Security.Cryptography.CngKeyCreationParameters" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKey_Create_3_7f3c69fd" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKey_Delete" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKey_Dispose" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.Exists(System.String)">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.CngKey.Exists" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKey_Exists_1_72eac341" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.CngKey.Exists" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKey_Exists_2_e5ea7811" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.CngKey.Exists" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Security.Cryptography.CngKeyOpenOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKey_Exists_3_d4abdc06" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)">
      <topicdata group="api" />
      <apidata name="Export" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKey_Export_1_c99f81df" />
    </api>
    <api id="P:System.Security.Cryptography.CngKey.ExportPolicy">
      <topicdata group="api" />
      <apidata name="ExportPolicy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngExportPolicies" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKey_ExportPolicy" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)">
      <topicdata group="api" />
      <apidata name="GetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Security.Cryptography.CngPropertyOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Security_Cryptography_CngKey_GetProperty_2_12fe3549" />
    </api>
    <api id="P:System.Security.Cryptography.CngKey.Handle">
      <topicdata group="api" />
      <apidata name="Handle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKey_Handle" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)">
      <topicdata group="api" />
      <apidata name="HasProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Security.Cryptography.CngPropertyOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Security_Cryptography_CngKey_HasProperty_2_12fe3549" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)">
      <topicdata group="api" />
      <apidata name="Import" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.CngKey.Import" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keyBlob">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="format">
          <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKey_Import_2_b69debd9" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)">
      <topicdata group="api" />
      <apidata name="Import" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.CngKey.Import" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keyBlob">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="format">
          <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKey_Import_3_64202384" />
    </api>
    <api id="P:System.Security.Cryptography.CngKey.IsEphemeral">
      <topicdata group="api" />
      <apidata name="IsEphemeral" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKey_IsEphemeral" />
    </api>
    <api id="P:System.Security.Cryptography.CngKey.IsMachineKey">
      <topicdata group="api" />
      <apidata name="IsMachineKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKey_IsMachineKey" />
    </api>
    <api id="P:System.Security.Cryptography.CngKey.KeyName">
      <topicdata group="api" />
      <apidata name="KeyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKey_KeyName" />
    </api>
    <api id="P:System.Security.Cryptography.CngKey.KeySize">
      <topicdata group="api" />
      <apidata name="KeySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKey_KeySize" />
    </api>
    <api id="P:System.Security.Cryptography.CngKey.KeyUsage">
      <topicdata group="api" />
      <apidata name="KeyUsage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyUsages" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKey_KeyUsage" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.CngKey.Open" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keyHandle">
          <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" ref="true" />
        </parameter>
        <parameter name="keyHandleOpenOptions">
          <type api="T:System.Security.Cryptography.CngKeyHandleOpenOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Security_Cryptography_CngKey_Open_2_619a7e4f" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.Open(System.String)">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.CngKey.Open" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKey_Open_1_72eac341" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.CngKey.Open" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKey_Open_2_e5ea7811" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.CngKey.Open" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
        </parameter>
        <parameter name="openOptions">
          <type api="T:System.Security.Cryptography.CngKeyOpenOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKey_Open_3_d4abdc06" />
    </api>
    <api id="P:System.Security.Cryptography.CngKey.ParentWindowHandle">
      <topicdata group="api" />
      <apidata name="ParentWindowHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKey_ParentWindowHandle" />
    </api>
    <api id="P:System.Security.Cryptography.CngKey.Provider">
      <topicdata group="api" />
      <apidata name="Provider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKey_Provider" />
    </api>
    <api id="P:System.Security.Cryptography.CngKey.ProviderHandle">
      <topicdata group="api" />
      <apidata name="ProviderHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKey_ProviderHandle" />
    </api>
    <api id="M:System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)">
      <topicdata group="api" />
      <apidata name="SetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="property">
          <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Security_Cryptography_CngKey_SetProperty_1_930e73e6" />
    </api>
    <api id="P:System.Security.Cryptography.CngKey.UIPolicy">
      <topicdata group="api" />
      <apidata name="UIPolicy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngUIPolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKey_UIPolicy" />
    </api>
    <api id="P:System.Security.Cryptography.CngKey.UniqueName">
      <topicdata group="api" />
      <apidata name="UniqueName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKey_UniqueName" />
    </api>
    <api id="T:System.Security.Cryptography.CngKeyBlobFormat">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngKeyBlobFormat" />
      <apidata name="CngKeyBlobFormat" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_CngKeyBlobFormat" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.CngKeyBlobFormat">
      <topicdata name="CngKeyBlobFormat" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.CngKeyBlobFormat" />
      <apidata name="CngKeyBlobFormat" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Security.Cryptography.CngKeyBlobFormat.#ctor(System.String)" />
        <element api="P:System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob" />
        <element api="P:System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob" />
        <element api="Overload:System.Security.Cryptography.CngKeyBlobFormat.Equals">
          <element api="M:System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)" />
          <element api="M:System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)" />
        </element>
        <element api="P:System.Security.Cryptography.CngKeyBlobFormat.Format" />
        <element api="P:System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob" />
        <element api="P:System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob" />
        <element api="M:System.Security.Cryptography.CngKeyBlobFormat.GetHashCode" />
        <element api="M:System.Security.Cryptography.CngKeyBlobFormat.op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)" />
        <element api="M:System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)" />
        <element api="P:System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob" />
        <element api="P:System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob" />
        <element api="M:System.Security.Cryptography.CngKeyBlobFormat.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_CngKeyBlobFormat" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.CngKeyBlobFormat">
      <topicdata name="CngKeyBlobFormat" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.CngKeyBlobFormat" />
      <apidata name="CngKeyBlobFormat" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Security.Cryptography.CngKeyBlobFormat.Equals">
          <element api="M:System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)" />
          <element api="M:System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)" />
        </element>
        <element api="M:System.Security.Cryptography.CngKeyBlobFormat.GetHashCode" />
        <element api="M:System.Security.Cryptography.CngKeyBlobFormat.op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)" />
        <element api="M:System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)" />
        <element api="M:System.Security.Cryptography.CngKeyBlobFormat.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_CngKeyBlobFormat" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.CngKeyBlobFormat">
      <topicdata name="CngKeyBlobFormat" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.CngKeyBlobFormat" />
      <apidata name="CngKeyBlobFormat" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob" />
        <element api="P:System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob" />
        <element api="P:System.Security.Cryptography.CngKeyBlobFormat.Format" />
        <element api="P:System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob" />
        <element api="P:System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob" />
        <element api="P:System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob" />
        <element api="P:System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_CngKeyBlobFormat" />
    </api>
    <api id="Overload:System.Security.Cryptography.CngKeyBlobFormat.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngKeyBlobFormat" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)" />
        <element api="M:System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_CngKeyBlobFormat_Equals" />
    </api>
    <api id="M:System.Security.Cryptography.CngKeyBlobFormat.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_CngKeyBlobFormat_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob">
      <topicdata group="api" />
      <apidata name="EccPrivateBlob" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKeyBlobFormat_EccPrivateBlob" />
    </api>
    <api id="P:System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob">
      <topicdata group="api" />
      <apidata name="EccPublicBlob" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKeyBlobFormat_EccPublicBlob" />
    </api>
    <api id="M:System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.CngKeyBlobFormat.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKeyBlobFormat_Equals_1_2572741a" />
    </api>
    <api id="M:System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.CngKeyBlobFormat.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKeyBlobFormat_Equals_1_c99f81df" />
    </api>
    <api id="P:System.Security.Cryptography.CngKeyBlobFormat.Format">
      <topicdata group="api" />
      <apidata name="Format" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKeyBlobFormat_Format" />
    </api>
    <api id="P:System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob">
      <topicdata group="api" />
      <apidata name="GenericPrivateBlob" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKeyBlobFormat_GenericPrivateBlob" />
    </api>
    <api id="P:System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob">
      <topicdata group="api" />
      <apidata name="GenericPublicBlob" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKeyBlobFormat_GenericPublicBlob" />
    </api>
    <api id="M:System.Security.Cryptography.CngKeyBlobFormat.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKeyBlobFormat_GetHashCode" />
    </api>
    <api id="M:System.Security.Cryptography.CngKeyBlobFormat.op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKeyBlobFormat_op_Equality_2_0fc55b16" />
    </api>
    <api id="M:System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKeyBlobFormat_op_Inequality_2_0fc55b16" />
    </api>
    <api id="P:System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob">
      <topicdata group="api" />
      <apidata name="OpaqueTransportBlob" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKeyBlobFormat_OpaqueTransportBlob" />
    </api>
    <api id="P:System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob">
      <topicdata group="api" />
      <apidata name="Pkcs8PrivateBlob" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKeyBlobFormat_Pkcs8PrivateBlob" />
    </api>
    <api id="M:System.Security.Cryptography.CngKeyBlobFormat.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngKeyBlobFormat_ToString" />
    </api>
    <api id="T:System.Security.Cryptography.CngKeyCreationOptions">
      <topicdata group="api" />
      <apidata name="CngKeyCreationOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Security.Cryptography.CngKeyCreationOptions.None" />
        <element api="F:System.Security.Cryptography.CngKeyCreationOptions.MachineKey" />
        <element api="F:System.Security.Cryptography.CngKeyCreationOptions.OverwriteExistingKey" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_CngKeyCreationOptions" />
    </api>
    <api id="F:System.Security.Cryptography.CngKeyCreationOptions.MachineKey">
      <topicdata group="api" notopic="" />
      <apidata name="MachineKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyCreationOptions" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyCreationOptions" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngKeyCreationOptions_MachineKey" />
    </api>
    <api id="F:System.Security.Cryptography.CngKeyCreationOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyCreationOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyCreationOptions" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngKeyCreationOptions_None" />
    </api>
    <api id="F:System.Security.Cryptography.CngKeyCreationOptions.OverwriteExistingKey">
      <topicdata group="api" notopic="" />
      <apidata name="OverwriteExistingKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyCreationOptions" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyCreationOptions" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngKeyCreationOptions_OverwriteExistingKey" />
    </api>
    <api id="T:System.Security.Cryptography.CngKeyCreationParameters">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngKeyCreationParameters" />
      <apidata name="CngKeyCreationParameters" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_CngKeyCreationParameters" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.CngKeyCreationParameters">
      <topicdata name="CngKeyCreationParameters" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.CngKeyCreationParameters" />
      <apidata name="CngKeyCreationParameters" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.CngKeyCreationParameters.#ctor" />
        <element api="P:System.Security.Cryptography.CngKeyCreationParameters.ExportPolicy" />
        <element api="P:System.Security.Cryptography.CngKeyCreationParameters.KeyCreationOptions" />
        <element api="P:System.Security.Cryptography.CngKeyCreationParameters.KeyUsage" />
        <element api="P:System.Security.Cryptography.CngKeyCreationParameters.Parameters" />
        <element api="P:System.Security.Cryptography.CngKeyCreationParameters.ParentWindowHandle" />
        <element api="P:System.Security.Cryptography.CngKeyCreationParameters.Provider" />
        <element api="P:System.Security.Cryptography.CngKeyCreationParameters.UIPolicy" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_CngKeyCreationParameters" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.CngKeyCreationParameters">
      <topicdata name="CngKeyCreationParameters" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.CngKeyCreationParameters" />
      <apidata name="CngKeyCreationParameters" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.CngKeyCreationParameters.ExportPolicy" />
        <element api="P:System.Security.Cryptography.CngKeyCreationParameters.KeyCreationOptions" />
        <element api="P:System.Security.Cryptography.CngKeyCreationParameters.KeyUsage" />
        <element api="P:System.Security.Cryptography.CngKeyCreationParameters.Parameters" />
        <element api="P:System.Security.Cryptography.CngKeyCreationParameters.ParentWindowHandle" />
        <element api="P:System.Security.Cryptography.CngKeyCreationParameters.Provider" />
        <element api="P:System.Security.Cryptography.CngKeyCreationParameters.UIPolicy" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_CngKeyCreationParameters" />
    </api>
    <api id="M:System.Security.Cryptography.CngKeyCreationParameters.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyCreationParameters" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_CngKeyCreationParameters_ctor" />
    </api>
    <api id="P:System.Security.Cryptography.CngKeyCreationParameters.ExportPolicy">
      <topicdata group="api" />
      <apidata name="ExportPolicy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Security.Cryptography.CngExportPolicies" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyCreationParameters" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKeyCreationParameters_ExportPolicy" />
    </api>
    <api id="P:System.Security.Cryptography.CngKeyCreationParameters.KeyCreationOptions">
      <topicdata group="api" />
      <apidata name="KeyCreationOptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyCreationOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyCreationParameters" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKeyCreationParameters_KeyCreationOptions" />
    </api>
    <api id="P:System.Security.Cryptography.CngKeyCreationParameters.KeyUsage">
      <topicdata group="api" />
      <apidata name="KeyUsage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Security.Cryptography.CngKeyUsages" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyCreationParameters" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKeyCreationParameters_KeyUsage" />
    </api>
    <api id="P:System.Security.Cryptography.CngKeyCreationParameters.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyCreationParameters" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKeyCreationParameters_Parameters" />
    </api>
    <api id="P:System.Security.Cryptography.CngKeyCreationParameters.ParentWindowHandle">
      <topicdata group="api" />
      <apidata name="ParentWindowHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyCreationParameters" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKeyCreationParameters_ParentWindowHandle" />
    </api>
    <api id="P:System.Security.Cryptography.CngKeyCreationParameters.Provider">
      <topicdata group="api" />
      <apidata name="Provider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyCreationParameters" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKeyCreationParameters_Provider" />
    </api>
    <api id="P:System.Security.Cryptography.CngKeyCreationParameters.UIPolicy">
      <topicdata group="api" />
      <apidata name="UIPolicy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngUIPolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyCreationParameters" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngKeyCreationParameters_UIPolicy" />
    </api>
    <api id="T:System.Security.Cryptography.CngKeyHandleOpenOptions">
      <topicdata group="api" />
      <apidata name="CngKeyHandleOpenOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Security.Cryptography.CngKeyHandleOpenOptions.None" />
        <element api="F:System.Security.Cryptography.CngKeyHandleOpenOptions.EphemeralKey" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_CngKeyHandleOpenOptions" />
    </api>
    <api id="F:System.Security.Cryptography.CngKeyHandleOpenOptions.EphemeralKey">
      <topicdata group="api" notopic="" />
      <apidata name="EphemeralKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyHandleOpenOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyHandleOpenOptions" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngKeyHandleOpenOptions_EphemeralKey" />
    </api>
    <api id="F:System.Security.Cryptography.CngKeyHandleOpenOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyHandleOpenOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyHandleOpenOptions" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngKeyHandleOpenOptions_None" />
    </api>
    <api id="T:System.Security.Cryptography.CngKeyOpenOptions">
      <topicdata group="api" />
      <apidata name="CngKeyOpenOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Security.Cryptography.CngKeyOpenOptions.None" />
        <element api="F:System.Security.Cryptography.CngKeyOpenOptions.UserKey" />
        <element api="F:System.Security.Cryptography.CngKeyOpenOptions.MachineKey" />
        <element api="F:System.Security.Cryptography.CngKeyOpenOptions.Silent" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_CngKeyOpenOptions" />
    </api>
    <api id="F:System.Security.Cryptography.CngKeyOpenOptions.MachineKey">
      <topicdata group="api" notopic="" />
      <apidata name="MachineKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyOpenOptions" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyOpenOptions" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngKeyOpenOptions_MachineKey" />
    </api>
    <api id="F:System.Security.Cryptography.CngKeyOpenOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyOpenOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyOpenOptions" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngKeyOpenOptions_None" />
    </api>
    <api id="F:System.Security.Cryptography.CngKeyOpenOptions.Silent">
      <topicdata group="api" notopic="" />
      <apidata name="Silent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyOpenOptions" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyOpenOptions" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngKeyOpenOptions_Silent" />
    </api>
    <api id="F:System.Security.Cryptography.CngKeyOpenOptions.UserKey">
      <topicdata group="api" notopic="" />
      <apidata name="UserKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyOpenOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyOpenOptions" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngKeyOpenOptions_UserKey" />
    </api>
    <api id="T:System.Security.Cryptography.CngKeyUsages">
      <topicdata group="api" />
      <apidata name="CngKeyUsages" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Security.Cryptography.CngKeyUsages.None" />
        <element api="F:System.Security.Cryptography.CngKeyUsages.Decryption" />
        <element api="F:System.Security.Cryptography.CngKeyUsages.Signing" />
        <element api="F:System.Security.Cryptography.CngKeyUsages.KeyAgreement" />
        <element api="F:System.Security.Cryptography.CngKeyUsages.AllUsages" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_CngKeyUsages" />
    </api>
    <api id="F:System.Security.Cryptography.CngKeyUsages.AllUsages">
      <topicdata group="api" notopic="" />
      <apidata name="AllUsages" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyUsages" ref="false" />
      </returns>
      <value>16777215</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyUsages" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngKeyUsages_AllUsages" />
    </api>
    <api id="F:System.Security.Cryptography.CngKeyUsages.Decryption">
      <topicdata group="api" notopic="" />
      <apidata name="Decryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyUsages" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyUsages" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngKeyUsages_Decryption" />
    </api>
    <api id="F:System.Security.Cryptography.CngKeyUsages.KeyAgreement">
      <topicdata group="api" notopic="" />
      <apidata name="KeyAgreement" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyUsages" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyUsages" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngKeyUsages_KeyAgreement" />
    </api>
    <api id="F:System.Security.Cryptography.CngKeyUsages.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyUsages" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyUsages" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngKeyUsages_None" />
    </api>
    <api id="F:System.Security.Cryptography.CngKeyUsages.Signing">
      <topicdata group="api" notopic="" />
      <apidata name="Signing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyUsages" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngKeyUsages" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngKeyUsages_Signing" />
    </api>
    <api id="T:System.Security.Cryptography.CngProperty">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngProperty" />
      <apidata name="CngProperty" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_CngProperty" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.CngProperty">
      <topicdata name="CngProperty" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.CngProperty" />
      <apidata name="CngProperty" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)" />
        <element api="Overload:System.Security.Cryptography.CngProperty.Equals">
          <element api="M:System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)" />
          <element api="M:System.Security.Cryptography.CngProperty.Equals(System.Object)" />
        </element>
        <element api="M:System.Security.Cryptography.CngProperty.GetHashCode" />
        <element api="M:System.Security.Cryptography.CngProperty.GetValue" />
        <element api="P:System.Security.Cryptography.CngProperty.Name" />
        <element api="M:System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)" />
        <element api="M:System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)" />
        <element api="P:System.Security.Cryptography.CngProperty.Options" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_CngProperty" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.CngProperty">
      <topicdata name="CngProperty" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.CngProperty" />
      <apidata name="CngProperty" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ValueType.ToString" />
        <element api="Overload:System.Security.Cryptography.CngProperty.Equals">
          <element api="M:System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)" />
          <element api="M:System.Security.Cryptography.CngProperty.Equals(System.Object)" />
        </element>
        <element api="M:System.Security.Cryptography.CngProperty.GetHashCode" />
        <element api="M:System.Security.Cryptography.CngProperty.GetValue" />
        <element api="M:System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)" />
        <element api="M:System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_CngProperty" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.CngProperty">
      <topicdata name="CngProperty" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.CngProperty" />
      <apidata name="CngProperty" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.CngProperty.Name" />
        <element api="P:System.Security.Cryptography.CngProperty.Options" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_CngProperty" />
    </api>
    <api id="Overload:System.Security.Cryptography.CngProperty.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngProperty" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)" />
        <element api="M:System.Security.Cryptography.CngProperty.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
      </containers>
      <file name="O_T_System_Security_Cryptography_CngProperty_Equals" />
    </api>
    <api id="M:System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="options">
          <type api="T:System.Security.Cryptography.CngPropertyOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
      </containers>
      <file name="C_System_Security_Cryptography_CngProperty_ctor_3_3cdc6f42" />
    </api>
    <api id="M:System.Security.Cryptography.CngProperty.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.CngProperty.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
      </containers>
      <file name="M_System_Security_Cryptography_CngProperty_Equals_1_2572741a" />
    </api>
    <api id="M:System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.CngProperty.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
      </containers>
      <file name="M_System_Security_Cryptography_CngProperty_Equals_1_930e73e6" />
    </api>
    <api id="M:System.Security.Cryptography.CngProperty.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
      </containers>
      <file name="M_System_Security_Cryptography_CngProperty_GetHashCode" />
    </api>
    <api id="M:System.Security.Cryptography.CngProperty.GetValue">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
      </containers>
      <file name="M_System_Security_Cryptography_CngProperty_GetValue" />
    </api>
    <api id="P:System.Security.Cryptography.CngProperty.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
      </containers>
      <file name="P_System_Security_Cryptography_CngProperty_Name" />
    </api>
    <api id="M:System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
      </containers>
      <file name="M_System_Security_Cryptography_CngProperty_op_Equality_2_85e85ba5" />
    </api>
    <api id="M:System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
      </containers>
      <file name="M_System_Security_Cryptography_CngProperty_op_Inequality_2_85e85ba5" />
    </api>
    <api id="P:System.Security.Cryptography.CngProperty.Options">
      <topicdata group="api" />
      <apidata name="Options" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngPropertyOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
      </containers>
      <file name="P_System_Security_Cryptography_CngProperty_Options" />
    </api>
    <api id="T:System.Security.Cryptography.CngPropertyCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngPropertyCollection" />
      <apidata name="CngPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Security.Cryptography.CngProperty" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_CngPropertyCollection" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.CngPropertyCollection">
      <topicdata name="CngPropertyCollection" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.CngPropertyCollection" />
      <apidata name="CngPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{`0}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Security.Cryptography.CngPropertyCollection.#ctor" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_CngPropertyCollection" />
    </api>
    <api id="M:System.Security.Cryptography.CngPropertyCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngPropertyCollection" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_CngPropertyCollection_ctor" />
    </api>
    <api id="T:System.Security.Cryptography.CngPropertyOptions">
      <topicdata group="api" />
      <apidata name="CngPropertyOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Security.Cryptography.CngPropertyOptions.None" />
        <element api="F:System.Security.Cryptography.CngPropertyOptions.CustomProperty" />
        <element api="F:System.Security.Cryptography.CngPropertyOptions.Persist" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_CngPropertyOptions" />
    </api>
    <api id="F:System.Security.Cryptography.CngPropertyOptions.CustomProperty">
      <topicdata group="api" notopic="" />
      <apidata name="CustomProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngPropertyOptions" ref="false" />
      </returns>
      <value>1073741824</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngPropertyOptions" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngPropertyOptions_CustomProperty" />
    </api>
    <api id="F:System.Security.Cryptography.CngPropertyOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngPropertyOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngPropertyOptions" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngPropertyOptions_None" />
    </api>
    <api id="F:System.Security.Cryptography.CngPropertyOptions.Persist">
      <topicdata group="api" notopic="" />
      <apidata name="Persist" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngPropertyOptions" ref="false" />
      </returns>
      <value>-2147483648</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngPropertyOptions" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngPropertyOptions_Persist" />
    </api>
    <api id="T:System.Security.Cryptography.CngProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngProvider" />
      <apidata name="CngProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_CngProvider" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.CngProvider">
      <topicdata name="CngProvider" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.CngProvider" />
      <apidata name="CngProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Security.Cryptography.CngProvider.#ctor(System.String)" />
        <element api="Overload:System.Security.Cryptography.CngProvider.Equals">
          <element api="M:System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)" />
          <element api="M:System.Security.Cryptography.CngProvider.Equals(System.Object)" />
        </element>
        <element api="M:System.Security.Cryptography.CngProvider.GetHashCode" />
        <element api="P:System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider" />
        <element api="P:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider" />
        <element api="M:System.Security.Cryptography.CngProvider.op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)" />
        <element api="M:System.Security.Cryptography.CngProvider.op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)" />
        <element api="P:System.Security.Cryptography.CngProvider.Provider" />
        <element api="M:System.Security.Cryptography.CngProvider.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_CngProvider" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.CngProvider">
      <topicdata name="CngProvider" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.CngProvider" />
      <apidata name="CngProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Security.Cryptography.CngProvider.Equals">
          <element api="M:System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)" />
          <element api="M:System.Security.Cryptography.CngProvider.Equals(System.Object)" />
        </element>
        <element api="M:System.Security.Cryptography.CngProvider.GetHashCode" />
        <element api="M:System.Security.Cryptography.CngProvider.op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)" />
        <element api="M:System.Security.Cryptography.CngProvider.op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)" />
        <element api="M:System.Security.Cryptography.CngProvider.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_CngProvider" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.CngProvider">
      <topicdata name="CngProvider" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.CngProvider" />
      <apidata name="CngProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider" />
        <element api="P:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider" />
        <element api="P:System.Security.Cryptography.CngProvider.Provider" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_CngProvider" />
    </api>
    <api id="Overload:System.Security.Cryptography.CngProvider.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngProvider" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)" />
        <element api="M:System.Security.Cryptography.CngProvider.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_CngProvider_Equals" />
    </api>
    <api id="M:System.Security.Cryptography.CngProvider.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_CngProvider_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Security.Cryptography.CngProvider.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.CngProvider.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngProvider_Equals_1_2572741a" />
    </api>
    <api id="M:System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.CngProvider.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngProvider_Equals_1_f6e140b9" />
    </api>
    <api id="M:System.Security.Cryptography.CngProvider.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngProvider_GetHashCode" />
    </api>
    <api id="P:System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider">
      <topicdata group="api" />
      <apidata name="MicrosoftSmartCardKeyStorageProvider" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngProvider_MicrosoftSmartCardKeyStorageProvider" />
    </api>
    <api id="P:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider">
      <topicdata group="api" />
      <apidata name="MicrosoftSoftwareKeyStorageProvider" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngProvider_MicrosoftSoftwareKeyStorageProvider" />
    </api>
    <api id="M:System.Security.Cryptography.CngProvider.op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngProvider_op_Equality_2_95289f49" />
    </api>
    <api id="M:System.Security.Cryptography.CngProvider.op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngProvider_op_Inequality_2_95289f49" />
    </api>
    <api id="P:System.Security.Cryptography.CngProvider.Provider">
      <topicdata group="api" />
      <apidata name="Provider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngProvider_Provider" />
    </api>
    <api id="M:System.Security.Cryptography.CngProvider.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngProvider" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_CngProvider_ToString" />
    </api>
    <api id="T:System.Security.Cryptography.CngUIPolicy">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngUIPolicy" />
      <apidata name="CngUIPolicy" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_CngUIPolicy" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.CngUIPolicy">
      <topicdata name="CngUIPolicy" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.CngUIPolicy" />
      <apidata name="CngUIPolicy" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Security.Cryptography.CngUIPolicy.#ctor">
          <element api="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)" />
          <element api="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)" />
          <element api="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)" />
          <element api="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)" />
          <element api="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)" />
        </element>
        <element api="P:System.Security.Cryptography.CngUIPolicy.CreationTitle" />
        <element api="P:System.Security.Cryptography.CngUIPolicy.Description" />
        <element api="P:System.Security.Cryptography.CngUIPolicy.FriendlyName" />
        <element api="P:System.Security.Cryptography.CngUIPolicy.ProtectionLevel" />
        <element api="P:System.Security.Cryptography.CngUIPolicy.UseContext" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_CngUIPolicy" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.CngUIPolicy">
      <topicdata name="CngUIPolicy" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.CngUIPolicy" />
      <apidata name="CngUIPolicy" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.CngUIPolicy.CreationTitle" />
        <element api="P:System.Security.Cryptography.CngUIPolicy.Description" />
        <element api="P:System.Security.Cryptography.CngUIPolicy.FriendlyName" />
        <element api="P:System.Security.Cryptography.CngUIPolicy.ProtectionLevel" />
        <element api="P:System.Security.Cryptography.CngUIPolicy.UseContext" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_CngUIPolicy" />
    </api>
    <api id="Overload:System.Security.Cryptography.CngUIPolicy.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.CngUIPolicy" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)" />
        <element api="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)" />
        <element api="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)" />
        <element api="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)" />
        <element api="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngUIPolicy" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_CngUIPolicy_ctor" />
    </api>
    <api id="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Security.Cryptography.CngUIPolicy.#ctor" />
      <parameters>
        <parameter name="protectionLevel">
          <type api="T:System.Security.Cryptography.CngUIProtectionLevels" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngUIPolicy" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_CngUIPolicy_ctor_1_dcc58c71" />
    </api>
    <api id="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Security.Cryptography.CngUIPolicy.#ctor" />
      <parameters>
        <parameter name="protectionLevel">
          <type api="T:System.Security.Cryptography.CngUIProtectionLevels" ref="false" />
        </parameter>
        <parameter name="friendlyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngUIPolicy" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_CngUIPolicy_ctor_2_2f5f4696" />
    </api>
    <api id="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Security.Cryptography.CngUIPolicy.#ctor" />
      <parameters>
        <parameter name="protectionLevel">
          <type api="T:System.Security.Cryptography.CngUIProtectionLevels" ref="false" />
        </parameter>
        <parameter name="friendlyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngUIPolicy" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_CngUIPolicy_ctor_3_cda077fb" />
    </api>
    <api id="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Security.Cryptography.CngUIPolicy.#ctor" />
      <parameters>
        <parameter name="protectionLevel">
          <type api="T:System.Security.Cryptography.CngUIProtectionLevels" ref="false" />
        </parameter>
        <parameter name="friendlyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="useContext">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngUIPolicy" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_CngUIPolicy_ctor_4_c5fc8c89" />
    </api>
    <api id="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Security.Cryptography.CngUIPolicy.#ctor" />
      <parameters>
        <parameter name="protectionLevel">
          <type api="T:System.Security.Cryptography.CngUIProtectionLevels" ref="false" />
        </parameter>
        <parameter name="friendlyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="useContext">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="creationTitle">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngUIPolicy" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_CngUIPolicy_ctor_5_c339f5cc" />
    </api>
    <api id="P:System.Security.Cryptography.CngUIPolicy.CreationTitle">
      <topicdata group="api" />
      <apidata name="CreationTitle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngUIPolicy" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngUIPolicy_CreationTitle" />
    </api>
    <api id="P:System.Security.Cryptography.CngUIPolicy.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngUIPolicy" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngUIPolicy_Description" />
    </api>
    <api id="P:System.Security.Cryptography.CngUIPolicy.FriendlyName">
      <topicdata group="api" />
      <apidata name="FriendlyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngUIPolicy" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngUIPolicy_FriendlyName" />
    </api>
    <api id="P:System.Security.Cryptography.CngUIPolicy.ProtectionLevel">
      <topicdata group="api" />
      <apidata name="ProtectionLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngUIProtectionLevels" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngUIPolicy" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngUIPolicy_ProtectionLevel" />
    </api>
    <api id="P:System.Security.Cryptography.CngUIPolicy.UseContext">
      <topicdata group="api" />
      <apidata name="UseContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngUIPolicy" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_CngUIPolicy_UseContext" />
    </api>
    <api id="T:System.Security.Cryptography.CngUIProtectionLevels">
      <topicdata group="api" />
      <apidata name="CngUIProtectionLevels" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Security.Cryptography.CngUIProtectionLevels.None" />
        <element api="F:System.Security.Cryptography.CngUIProtectionLevels.ProtectKey" />
        <element api="F:System.Security.Cryptography.CngUIProtectionLevels.ForceHighProtection" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_CngUIProtectionLevels" />
    </api>
    <api id="F:System.Security.Cryptography.CngUIProtectionLevels.ForceHighProtection">
      <topicdata group="api" notopic="" />
      <apidata name="ForceHighProtection" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngUIProtectionLevels" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngUIProtectionLevels" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngUIProtectionLevels_ForceHighProtection" />
    </api>
    <api id="F:System.Security.Cryptography.CngUIProtectionLevels.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngUIProtectionLevels" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngUIProtectionLevels" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngUIProtectionLevels_None" />
    </api>
    <api id="F:System.Security.Cryptography.CngUIProtectionLevels.ProtectKey">
      <topicdata group="api" notopic="" />
      <apidata name="ProtectKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngUIProtectionLevels" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.CngUIProtectionLevels" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_CngUIProtectionLevels_ProtectKey" />
    </api>
    <api id="T:System.Security.Cryptography.ECDiffieHellman">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDiffieHellman" />
      <apidata name="ECDiffieHellman" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_ECDiffieHellman" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.ECDiffieHellman">
      <topicdata name="ECDiffieHellman" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.ECDiffieHellman" />
      <apidata name="ECDiffieHellman" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.Clear" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)" />
        <element api="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />
        <element api="F:System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue" />
        <element api="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />
        <element api="F:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)" />
        <element api="M:System.Security.Cryptography.ECDiffieHellman.#ctor" />
        <element api="Overload:System.Security.Cryptography.ECDiffieHellman.Create">
          <element api="M:System.Security.Cryptography.ECDiffieHellman.Create" />
          <element api="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)" />
        </element>
        <element api="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)" />
        <element api="P:System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm" />
        <element api="P:System.Security.Cryptography.ECDiffieHellman.PublicKey" />
        <element api="P:System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_ECDiffieHellman" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.ECDiffieHellman">
      <topicdata name="ECDiffieHellman" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.ECDiffieHellman" />
      <apidata name="ECDiffieHellman" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.Clear" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)" />
        <element api="Overload:System.Security.Cryptography.ECDiffieHellman.Create">
          <element api="M:System.Security.Cryptography.ECDiffieHellman.Create" />
          <element api="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)" />
        </element>
        <element api="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_ECDiffieHellman" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.ECDiffieHellman">
      <topicdata name="ECDiffieHellman" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.ECDiffieHellman" />
      <apidata name="ECDiffieHellman" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />
        <element api="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />
        <element api="P:System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm" />
        <element api="P:System.Security.Cryptography.ECDiffieHellman.PublicKey" />
        <element api="P:System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_ECDiffieHellman" />
    </api>
    <api id="Overload:System.Security.Cryptography.ECDiffieHellman.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDiffieHellman" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.ECDiffieHellman.Create" />
        <element api="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellman" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_ECDiffieHellman_Create" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellman.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellman" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_ECDiffieHellman_ctor" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellman.Create">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.ECDiffieHellman.Create" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Security.Cryptography.ECDiffieHellman" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellman" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellman_Create" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.ECDiffieHellman.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ECDiffieHellman" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellman" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellman_Create_1_72eac341" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
      <topicdata group="api" />
      <apidata name="DeriveKeyMaterial" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="otherPartyPublicKey">
          <type api="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellman" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellman_DeriveKeyMaterial_1_c7337a10" />
    </api>
    <api id="P:System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm">
      <topicdata group="api" />
      <apidata name="KeyExchangeAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm">
          <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellman" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDiffieHellman_KeyExchangeAlgorithm" />
    </api>
    <api id="P:System.Security.Cryptography.ECDiffieHellman.PublicKey">
      <topicdata group="api" />
      <apidata name="PublicKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellman" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDiffieHellman_PublicKey" />
    </api>
    <api id="P:System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm">
      <topicdata group="api" />
      <apidata name="SignatureAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm">
          <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellman" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDiffieHellman_SignatureAlgorithm" />
    </api>
    <api id="T:System.Security.Cryptography.ECDiffieHellmanCng">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDiffieHellmanCng" />
      <apidata name="ECDiffieHellmanCng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.ECDiffieHellman" ref="true" />
          <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_ECDiffieHellmanCng" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.ECDiffieHellmanCng">
      <topicdata name="ECDiffieHellmanCng" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.ECDiffieHellmanCng" />
      <apidata name="ECDiffieHellmanCng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.Clear" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)" />
        <element api="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />
        <element api="F:System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue" />
        <element api="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />
        <element api="F:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.System#IDisposable#Dispose" />
        <element api="P:System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm" />
        <element api="P:System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm" />
        <element api="Overload:System.Security.Cryptography.ECDiffieHellmanCng.#ctor">
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor" />
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)" />
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)" />
        </element>
        <element api="Overload:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial">
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)" />
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)" />
        </element>
        <element api="Overload:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle">
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)" />
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)" />
        </element>
        <element api="Overload:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString">
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)" />
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)" />
        </element>
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.Key" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.PublicKey" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" />
        <element api="Overload:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString">
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)" />
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)" />
        </element>
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_ECDiffieHellmanCng" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.ECDiffieHellmanCng">
      <topicdata name="ECDiffieHellmanCng" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.ECDiffieHellmanCng" />
      <apidata name="ECDiffieHellmanCng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.Clear" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.System#IDisposable#Dispose" />
        <element api="Overload:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial">
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)" />
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)" />
        </element>
        <element api="Overload:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle">
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)" />
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)" />
        </element>
        <element api="Overload:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString">
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)" />
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)" />
        </element>
        <element api="Overload:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString">
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)" />
          <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_ECDiffieHellmanCng" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.ECDiffieHellmanCng">
      <topicdata name="ECDiffieHellmanCng" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.ECDiffieHellmanCng" />
      <apidata name="ECDiffieHellmanCng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />
        <element api="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />
        <element api="P:System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm" />
        <element api="P:System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.Key" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.PublicKey" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_ECDiffieHellmanCng" />
    </api>
    <api id="Overload:System.Security.Cryptography.ECDiffieHellmanCng.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDiffieHellmanCng" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_ECDiffieHellmanCng_ctor" />
    </api>
    <api id="Overload:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial">
      <topicdata name="DeriveKeyMaterial" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDiffieHellmanCng" />
      <apidata name="DeriveKeyMaterial" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_ECDiffieHellmanCng_DeriveKeyMaterial" />
    </api>
    <api id="Overload:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle">
      <topicdata name="DeriveSecretAgreementHandle" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDiffieHellmanCng" />
      <apidata name="DeriveSecretAgreementHandle" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_ECDiffieHellmanCng_DeriveSecretAgreementHandle" />
    </api>
    <api id="Overload:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString">
      <topicdata name="FromXmlString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDiffieHellmanCng" />
      <apidata name="FromXmlString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_ECDiffieHellmanCng_FromXmlString" />
    </api>
    <api id="Overload:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString">
      <topicdata name="ToXmlString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDiffieHellmanCng" />
      <apidata name="ToXmlString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_ECDiffieHellmanCng_ToXmlString" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Security.Cryptography.ECDiffieHellmanCng.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_ECDiffieHellmanCng_ctor" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Security.Cryptography.ECDiffieHellmanCng.#ctor" />
      <parameters>
        <parameter name="keySize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_ECDiffieHellmanCng_ctor_1_f9cace8a" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Security.Cryptography.ECDiffieHellmanCng.#ctor" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Security.Cryptography.CngKey" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_ECDiffieHellmanCng_ctor_1_902a2185" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
      <topicdata group="api" />
      <apidata name="DeriveKeyMaterial" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="otherPartyPublicKey">
          <type api="T:System.Security.Cryptography.CngKey" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellmanCng_DeriveKeyMaterial_1_e8d6c9df" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
      <topicdata group="api" />
      <apidata name="DeriveKeyMaterial" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <type api="T:System.Security.Cryptography.ECDiffieHellman" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="otherPartyPublicKey">
          <type api="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellmanCng_DeriveKeyMaterial_1_c7337a10" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
      <topicdata group="api" />
      <apidata name="DeriveSecretAgreementHandle" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="otherPartyPublicKey">
          <type api="T:System.Security.Cryptography.CngKey" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Security_Cryptography_ECDiffieHellmanCng_DeriveSecretAgreementHandle_1_e8d6c9df" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
      <topicdata group="api" />
      <apidata name="DeriveSecretAgreementHandle" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="otherPartyPublicKey">
          <type api="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellmanCng_DeriveSecretAgreementHandle_1_c7337a10" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)">
      <topicdata group="api" />
      <apidata name="FromXmlString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)">
          <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="xmlString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellmanCng_FromXmlString_1_72eac341" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
      <topicdata group="api" />
      <apidata name="FromXmlString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xml">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="format">
          <type api="T:System.Security.Cryptography.ECKeyXmlFormat" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellmanCng_FromXmlString_2_5112f729" />
    </api>
    <api id="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
      <topicdata group="api" />
      <apidata name="HashAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDiffieHellmanCng_HashAlgorithm" />
    </api>
    <api id="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
      <topicdata group="api" />
      <apidata name="HmacKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDiffieHellmanCng_HmacKey" />
    </api>
    <api id="P:System.Security.Cryptography.ECDiffieHellmanCng.Key">
      <topicdata group="api" />
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDiffieHellmanCng_Key" />
    </api>
    <api id="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
      <topicdata group="api" />
      <apidata name="KeyDerivationFunction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDiffieHellmanCng_KeyDerivationFunction" />
    </api>
    <api id="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
      <topicdata group="api" />
      <apidata name="Label" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDiffieHellmanCng_Label" />
    </api>
    <api id="P:System.Security.Cryptography.ECDiffieHellmanCng.PublicKey">
      <topicdata group="api" />
      <apidata name="PublicKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.ECDiffieHellman.PublicKey">
          <type api="T:System.Security.Cryptography.ECDiffieHellman" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDiffieHellmanCng_PublicKey" />
    </api>
    <api id="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
      <topicdata group="api" />
      <apidata name="SecretAppend" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDiffieHellmanCng_SecretAppend" />
    </api>
    <api id="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
      <topicdata group="api" />
      <apidata name="SecretPrepend" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDiffieHellmanCng_SecretPrepend" />
    </api>
    <api id="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
      <topicdata group="api" />
      <apidata name="Seed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDiffieHellmanCng_Seed" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToXmlString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)">
          <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="includePrivateParameters">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellmanCng_ToXmlString_1_36d384f7" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
      <topicdata group="api" />
      <apidata name="ToXmlString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.Security.Cryptography.ECKeyXmlFormat" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellmanCng_ToXmlString_1_39c79c95" />
    </api>
    <api id="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
      <topicdata group="api" />
      <apidata name="UseSecretAgreementAsHmacKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCng" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDiffieHellmanCng_UseSecretAgreementAsHmacKey" />
    </api>
    <api id="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />
      <apidata name="ECDiffieHellmanCngPublicKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_ECDiffieHellmanCngPublicKey" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey">
      <topicdata name="ECDiffieHellmanCngPublicKey" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />
      <apidata name="ECDiffieHellmanCngPublicKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.BlobFormat" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.FromByteArray(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.FromXmlString(System.String)" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.Import" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.ToXmlString" />
        <element api="Overload:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.Dispose">
          <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose" />
          <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_ECDiffieHellmanCngPublicKey" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey">
      <topicdata name="ECDiffieHellmanCngPublicKey" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />
      <apidata name="ECDiffieHellmanCngPublicKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.FromByteArray(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.FromXmlString(System.String)" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.Import" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.ToXmlString" />
        <element api="Overload:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.Dispose">
          <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose" />
          <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_ECDiffieHellmanCngPublicKey" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey">
      <topicdata name="ECDiffieHellmanCngPublicKey" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />
      <apidata name="ECDiffieHellmanCngPublicKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.BlobFormat" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_ECDiffieHellmanCngPublicKey" />
    </api>
    <api id="Overload:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />
      </containers>
      <file name="O_T_System_Security_Cryptography_ECDiffieHellmanCngPublicKey_Dispose" />
    </api>
    <api id="P:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.BlobFormat">
      <topicdata group="api" />
      <apidata name="BlobFormat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDiffieHellmanCngPublicKey_BlobFormat" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.FromByteArray(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)">
      <topicdata group="api" />
      <apidata name="FromByteArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="publicKeyBlob">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="format">
          <type api="T:System.Security.Cryptography.CngKeyBlobFormat" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellmanCngPublicKey_FromByteArray_2_b69debd9" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.FromXmlString(System.String)">
      <topicdata group="api" />
      <apidata name="FromXmlString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xml">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellmanCngPublicKey_FromXmlString_1_72eac341" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.Import">
      <topicdata group="api" />
      <apidata name="Import" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellmanCngPublicKey_Import" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.ToXmlString">
      <topicdata group="api" />
      <apidata name="ToXmlString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString">
          <type api="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellmanCngPublicKey_ToXmlString" />
    </api>
    <api id="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
      <topicdata group="api" />
      <apidata name="ECDiffieHellmanKeyDerivationFunction" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />
        <element api="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />
        <element api="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="T_System_Security_Cryptography_ECDiffieHellmanKeyDerivationFunction" />
    </api>
    <api id="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash">
      <topicdata group="api" notopic="" />
      <apidata name="Hash" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_ECDiffieHellmanKeyDerivationFunction_Hash" />
    </api>
    <api id="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac">
      <topicdata group="api" notopic="" />
      <apidata name="Hmac" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_ECDiffieHellmanKeyDerivationFunction_Hmac" />
    </api>
    <api id="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls">
      <topicdata group="api" notopic="" />
      <apidata name="Tls" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_ECDiffieHellmanKeyDerivationFunction_Tls" />
    </api>
    <api id="T:System.Security.Cryptography.ECDiffieHellmanPublicKey">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDiffieHellmanPublicKey" />
      <apidata name="ECDiffieHellmanPublicKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_ECDiffieHellmanPublicKey" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.ECDiffieHellmanPublicKey">
      <topicdata name="ECDiffieHellmanPublicKey" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" />
      <apidata name="ECDiffieHellmanPublicKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])" />
        <element api="Overload:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose" />
          <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_ECDiffieHellmanPublicKey" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.ECDiffieHellmanPublicKey">
      <topicdata name="ECDiffieHellmanPublicKey" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" />
      <apidata name="ECDiffieHellmanPublicKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose" />
          <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_ECDiffieHellmanPublicKey" />
    </api>
    <api id="Overload:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDiffieHellmanPublicKey" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose" />
        <element api="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_ECDiffieHellmanPublicKey_Dispose" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="keyBlob">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_ECDiffieHellmanPublicKey_ctor_1_17d539e7" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellmanPublicKey_Dispose" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellmanPublicKey_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray">
      <topicdata group="api" />
      <apidata name="ToByteArray" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellmanPublicKey_ToByteArray" />
    </api>
    <api id="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString">
      <topicdata group="api" />
      <apidata name="ToXmlString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDiffieHellmanPublicKey_ToXmlString" />
    </api>
    <api id="T:System.Security.Cryptography.ECDsa">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDsa" />
      <apidata name="ECDsa" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_ECDsa" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.ECDsa">
      <topicdata name="ECDsa" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.ECDsa" />
      <apidata name="ECDsa" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.Clear" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)" />
        <element api="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />
        <element api="F:System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue" />
        <element api="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />
        <element api="F:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)" />
        <element api="M:System.Security.Cryptography.ECDsa.#ctor" />
        <element api="Overload:System.Security.Cryptography.ECDsa.Create">
          <element api="M:System.Security.Cryptography.ECDsa.Create" />
          <element api="M:System.Security.Cryptography.ECDsa.Create(System.String)" />
        </element>
        <element api="P:System.Security.Cryptography.ECDsa.KeyExchangeAlgorithm" />
        <element api="P:System.Security.Cryptography.ECDsa.SignatureAlgorithm" />
        <element api="M:System.Security.Cryptography.ECDsa.SignHash(System.Byte[])" />
        <element api="M:System.Security.Cryptography.ECDsa.VerifyHash(System.Byte[],System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_ECDsa" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.ECDsa">
      <topicdata name="ECDsa" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.ECDsa" />
      <apidata name="ECDsa" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.Clear" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)" />
        <element api="Overload:System.Security.Cryptography.ECDsa.Create">
          <element api="M:System.Security.Cryptography.ECDsa.Create" />
          <element api="M:System.Security.Cryptography.ECDsa.Create(System.String)" />
        </element>
        <element api="M:System.Security.Cryptography.ECDsa.SignHash(System.Byte[])" />
        <element api="M:System.Security.Cryptography.ECDsa.VerifyHash(System.Byte[],System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_ECDsa" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.ECDsa">
      <topicdata name="ECDsa" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.ECDsa" />
      <apidata name="ECDsa" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />
        <element api="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />
        <element api="P:System.Security.Cryptography.ECDsa.KeyExchangeAlgorithm" />
        <element api="P:System.Security.Cryptography.ECDsa.SignatureAlgorithm" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_ECDsa" />
    </api>
    <api id="Overload:System.Security.Cryptography.ECDsa.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDsa" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.ECDsa.Create" />
        <element api="M:System.Security.Cryptography.ECDsa.Create(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsa" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_ECDsa_Create" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsa.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsa" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_ECDsa_ctor" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsa.Create">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.ECDsa.Create" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Security.Cryptography.ECDsa" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsa" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDsa_Create" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsa.Create(System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.ECDsa.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ECDsa" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsa" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDsa_Create_1_72eac341" />
    </api>
    <api id="P:System.Security.Cryptography.ECDsa.KeyExchangeAlgorithm">
      <topicdata group="api" />
      <apidata name="KeyExchangeAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm">
          <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsa" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDsa_KeyExchangeAlgorithm" />
    </api>
    <api id="P:System.Security.Cryptography.ECDsa.SignatureAlgorithm">
      <topicdata group="api" />
      <apidata name="SignatureAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm">
          <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsa" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDsa_SignatureAlgorithm" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsa.SignHash(System.Byte[])">
      <topicdata group="api" />
      <apidata name="SignHash" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="hash">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsa" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDsa_SignHash_1_8079d5fb" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsa.VerifyHash(System.Byte[],System.Byte[])">
      <topicdata group="api" />
      <apidata name="VerifyHash" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="hash">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="signature">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsa" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDsa_VerifyHash_2_7aaea447" />
    </api>
    <api id="T:System.Security.Cryptography.ECDsaCng">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDsaCng" />
      <apidata name="ECDsaCng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.ECDsa" ref="true" />
          <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_ECDsaCng" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.ECDsaCng">
      <topicdata name="ECDsaCng" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.ECDsaCng" />
      <apidata name="ECDsaCng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.Clear" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)" />
        <element api="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />
        <element api="F:System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue" />
        <element api="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />
        <element api="F:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.System#IDisposable#Dispose" />
        <element api="P:System.Security.Cryptography.ECDsa.KeyExchangeAlgorithm" />
        <element api="P:System.Security.Cryptography.ECDsa.SignatureAlgorithm" />
        <element api="Overload:System.Security.Cryptography.ECDsaCng.#ctor">
          <element api="M:System.Security.Cryptography.ECDsaCng.#ctor" />
          <element api="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)" />
          <element api="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)" />
        </element>
        <element api="Overload:System.Security.Cryptography.ECDsaCng.FromXmlString">
          <element api="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)" />
          <element api="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)" />
        </element>
        <element api="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm" />
        <element api="P:System.Security.Cryptography.ECDsaCng.Key" />
        <element api="Overload:System.Security.Cryptography.ECDsaCng.SignData">
          <element api="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])" />
          <element api="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])" />
        <element api="Overload:System.Security.Cryptography.ECDsaCng.ToXmlString">
          <element api="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)" />
          <element api="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)" />
        </element>
        <element api="Overload:System.Security.Cryptography.ECDsaCng.VerifyData">
          <element api="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])" />
          <element api="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])" />
          <element api="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_ECDsaCng" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.ECDsaCng">
      <topicdata name="ECDsaCng" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.ECDsaCng" />
      <apidata name="ECDsaCng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.Clear" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.AsymmetricAlgorithm.System#IDisposable#Dispose" />
        <element api="Overload:System.Security.Cryptography.ECDsaCng.FromXmlString">
          <element api="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)" />
          <element api="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)" />
        </element>
        <element api="Overload:System.Security.Cryptography.ECDsaCng.SignData">
          <element api="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])" />
          <element api="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])" />
        <element api="Overload:System.Security.Cryptography.ECDsaCng.ToXmlString">
          <element api="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)" />
          <element api="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)" />
        </element>
        <element api="Overload:System.Security.Cryptography.ECDsaCng.VerifyData">
          <element api="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])" />
          <element api="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])" />
          <element api="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_ECDsaCng" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.ECDsaCng">
      <topicdata name="ECDsaCng" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.ECDsaCng" />
      <apidata name="ECDsaCng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />
        <element api="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />
        <element api="P:System.Security.Cryptography.ECDsa.KeyExchangeAlgorithm" />
        <element api="P:System.Security.Cryptography.ECDsa.SignatureAlgorithm" />
        <element api="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm" />
        <element api="P:System.Security.Cryptography.ECDsaCng.Key" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_ECDsaCng" />
    </api>
    <api id="Overload:System.Security.Cryptography.ECDsaCng.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDsaCng" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Security.Cryptography.ECDsaCng.#ctor" />
        <element api="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)" />
        <element api="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_ECDsaCng_ctor" />
    </api>
    <api id="Overload:System.Security.Cryptography.ECDsaCng.FromXmlString">
      <topicdata name="FromXmlString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDsaCng" />
      <apidata name="FromXmlString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)" />
        <element api="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_ECDsaCng_FromXmlString" />
    </api>
    <api id="Overload:System.Security.Cryptography.ECDsaCng.SignData">
      <topicdata name="SignData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDsaCng" />
      <apidata name="SignData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])" />
        <element api="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)" />
        <element api="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_ECDsaCng_SignData" />
    </api>
    <api id="Overload:System.Security.Cryptography.ECDsaCng.ToXmlString">
      <topicdata name="ToXmlString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDsaCng" />
      <apidata name="ToXmlString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)" />
        <element api="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_ECDsaCng_ToXmlString" />
    </api>
    <api id="Overload:System.Security.Cryptography.ECDsaCng.VerifyData">
      <topicdata name="VerifyData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ECDsaCng" />
      <apidata name="VerifyData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])" />
        <element api="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])" />
        <element api="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_ECDsaCng_VerifyData" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsaCng.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Security.Cryptography.ECDsaCng.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_ECDsaCng_ctor" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Security.Cryptography.ECDsaCng.#ctor" />
      <parameters>
        <parameter name="keySize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_ECDsaCng_ctor_1_f9cace8a" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Security.Cryptography.ECDsaCng.#ctor" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Security.Cryptography.CngKey" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_ECDsaCng_ctor_1_902a2185" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)">
      <topicdata group="api" />
      <apidata name="FromXmlString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDsaCng.FromXmlString" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)">
          <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="xmlString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDsaCng_FromXmlString_1_72eac341" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
      <topicdata group="api" />
      <apidata name="FromXmlString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDsaCng.FromXmlString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xml">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="format">
          <type api="T:System.Security.Cryptography.ECKeyXmlFormat" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDsaCng_FromXmlString_2_5112f729" />
    </api>
    <api id="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
      <topicdata group="api" />
      <apidata name="HashAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Security.Cryptography.CngAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDsaCng_HashAlgorithm" />
    </api>
    <api id="P:System.Security.Cryptography.ECDsaCng.Key">
      <topicdata group="api" />
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <returns>
        <type api="T:System.Security.Cryptography.CngKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ECDsaCng_Key" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
      <topicdata group="api" />
      <apidata name="SignData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDsaCng.SignData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDsaCng_SignData_1_8079d5fb" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="SignData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDsaCng.SignData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDsaCng_SignData_3_e342ee26" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="SignData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDsaCng.SignData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDsaCng_SignData_1_6c2dff68" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
      <topicdata group="api" />
      <apidata name="SignHash" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.ECDsa.SignHash(System.Byte[])">
          <type api="T:System.Security.Cryptography.ECDsa" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="hash">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDsaCng_SignHash_1_8079d5fb" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToXmlString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDsaCng.ToXmlString" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)">
          <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="includePrivateParameters">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDsaCng_ToXmlString_1_36d384f7" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
      <topicdata group="api" />
      <apidata name="ToXmlString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDsaCng.ToXmlString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.Security.Cryptography.ECKeyXmlFormat" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDsaCng_ToXmlString_1_39c79c95" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
      <topicdata group="api" />
      <apidata name="VerifyData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDsaCng.VerifyData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="signature">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDsaCng_VerifyData_2_7aaea447" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
      <topicdata group="api" />
      <apidata name="VerifyData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDsaCng.VerifyData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="signature">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDsaCng_VerifyData_4_60c01549" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
      <topicdata group="api" />
      <apidata name="VerifyData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Security.Cryptography.ECDsaCng.VerifyData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="signature">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDsaCng_VerifyData_2_c60d2e9b" />
    </api>
    <api id="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
      <topicdata group="api" />
      <apidata name="VerifyHash" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.ECDsa.VerifyHash(System.Byte[],System.Byte[])">
          <type api="T:System.Security.Cryptography.ECDsa" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="hash">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="signature">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECDsaCng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ECDsaCng_VerifyHash_2_7aaea447" />
    </api>
    <api id="T:System.Security.Cryptography.ECKeyXmlFormat">
      <topicdata group="api" />
      <apidata name="ECKeyXmlFormat" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="T_System_Security_Cryptography_ECKeyXmlFormat" />
    </api>
    <api id="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050">
      <topicdata group="api" notopic="" />
      <apidata name="Rfc4050" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.ECKeyXmlFormat" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ECKeyXmlFormat" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_ECKeyXmlFormat_Rfc4050" />
    </api>
    <api id="T:System.Security.Cryptography.ManifestSignatureInformation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ManifestSignatureInformation" />
      <apidata name="ManifestSignatureInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_ManifestSignatureInformation" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.ManifestSignatureInformation">
      <topicdata name="ManifestSignatureInformation" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.ManifestSignatureInformation" />
      <apidata name="ManifestSignatureInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature" />
        <element api="P:System.Security.Cryptography.ManifestSignatureInformation.Manifest" />
        <element api="P:System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature" />
        <element api="Overload:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature">
          <element api="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)" />
          <element api="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)" />
          <element api="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_ManifestSignatureInformation" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.ManifestSignatureInformation">
      <topicdata name="ManifestSignatureInformation" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.ManifestSignatureInformation" />
      <apidata name="ManifestSignatureInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature">
          <element api="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)" />
          <element api="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)" />
          <element api="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_ManifestSignatureInformation" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.ManifestSignatureInformation">
      <topicdata name="ManifestSignatureInformation" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.ManifestSignatureInformation" />
      <apidata name="ManifestSignatureInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature" />
        <element api="P:System.Security.Cryptography.ManifestSignatureInformation.Manifest" />
        <element api="P:System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_ManifestSignatureInformation" />
    </api>
    <api id="Overload:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature">
      <topicdata name="VerifySignature" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ManifestSignatureInformation" />
      <apidata name="VerifySignature" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)" />
        <element api="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)" />
        <element api="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ManifestSignatureInformation" ref="true" />
      </containers>
      <file name="O_T_System_Security_Cryptography_ManifestSignatureInformation_VerifySignature" />
    </api>
    <api id="P:System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature">
      <topicdata group="api" />
      <apidata name="AuthenticodeSignature" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ManifestSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ManifestSignatureInformation_AuthenticodeSignature" />
    </api>
    <api id="P:System.Security.Cryptography.ManifestSignatureInformation.Manifest">
      <topicdata group="api" />
      <apidata name="Manifest" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.ManifestKinds" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ManifestSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ManifestSignatureInformation_Manifest" />
    </api>
    <api id="P:System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature">
      <topicdata group="api" />
      <apidata name="StrongNameSignature" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.StrongNameSignatureInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ManifestSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_ManifestSignatureInformation_StrongNameSignature" />
    </api>
    <api id="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)">
      <topicdata group="api" />
      <apidata name="VerifySignature" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="application">
          <type api="T:System.ActivationContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ManifestSignatureInformationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ManifestSignatureInformation" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ManifestSignatureInformation_VerifySignature_1_2dd35c06" />
    </api>
    <api id="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)">
      <topicdata group="api" />
      <apidata name="VerifySignature" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="application">
          <type api="T:System.ActivationContext" ref="true" />
        </parameter>
        <parameter name="manifests">
          <type api="T:System.Security.ManifestKinds" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ManifestSignatureInformationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ManifestSignatureInformation" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ManifestSignatureInformation_VerifySignature_2_739a4dd8" />
    </api>
    <api id="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)">
      <topicdata group="api" />
      <apidata name="VerifySignature" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="application">
          <type api="T:System.ActivationContext" ref="true" />
        </parameter>
        <parameter name="manifests">
          <type api="T:System.Security.ManifestKinds" ref="false" />
        </parameter>
        <parameter name="revocationFlag">
          <type api="T:System.Security.Cryptography.X509Certificates.X509RevocationFlag" ref="false" />
        </parameter>
        <parameter name="revocationMode">
          <type api="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ManifestSignatureInformationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.ManifestSignatureInformation" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_ManifestSignatureInformation_VerifySignature_4_98eeedc2" />
    </api>
    <api id="T:System.Security.Cryptography.ManifestSignatureInformationCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.ManifestSignatureInformationCollection" />
      <apidata name="ManifestSignatureInformationCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.Security.Cryptography.ManifestSignatureInformation" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_ManifestSignatureInformationCollection" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.ManifestSignatureInformationCollection">
      <topicdata name="ManifestSignatureInformationCollection" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.ManifestSignatureInformationCollection" />
      <apidata name="ManifestSignatureInformationCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{`0}#Add(`0)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{`0}#Clear" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{`0}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{`0}#Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{`0}#Insert(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{`0}#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{`0}#RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_ManifestSignatureInformationCollection" />
    </api>
    <api id="T:System.Security.Cryptography.MD5Cng">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.MD5Cng" />
      <apidata name="MD5Cng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.MD5" ref="true" />
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_MD5Cng" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.MD5Cng">
      <topicdata name="MD5Cng" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.MD5Cng" />
      <apidata name="MD5Cng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.MD5Cng.ComputeHash">
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.Hash" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.HashSize" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashValue" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.State" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.MD5Cng.#ctor" />
        <element api="M:System.Security.Cryptography.MD5Cng.Initialize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_MD5Cng" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.MD5Cng">
      <topicdata name="MD5Cng" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.MD5Cng" />
      <apidata name="MD5Cng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.MD5Cng.ComputeHash">
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.MD5Cng.Initialize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_MD5Cng" />
    </api>
    <api id="Overload:System.Security.Cryptography.MD5Cng.ComputeHash">
      <topicdata name="ComputeHash" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.MD5Cng" allInherited="true" />
      <apidata name="ComputeHash" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.MD5Cng" />
      </containers>
      <file name="O_T_System_Security_Cryptography_MD5Cng_ComputeHash" />
    </api>
    <api id="M:System.Security.Cryptography.MD5Cng.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.MD5Cng" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_MD5Cng_ctor" />
    </api>
    <api id="M:System.Security.Cryptography.MD5Cng.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.Initialize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.MD5Cng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_MD5Cng_Initialize" />
    </api>
    <api id="T:System.Security.Cryptography.SHA1Cng">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.SHA1Cng" />
      <apidata name="SHA1Cng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.SHA1" ref="true" />
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_SHA1Cng" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.SHA1Cng">
      <topicdata name="SHA1Cng" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.SHA1Cng" />
      <apidata name="SHA1Cng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.SHA1Cng.ComputeHash">
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.Hash" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.HashSize" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashValue" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.State" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.SHA1Cng.#ctor" />
        <element api="M:System.Security.Cryptography.SHA1Cng.Initialize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_SHA1Cng" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.SHA1Cng">
      <topicdata name="SHA1Cng" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.SHA1Cng" />
      <apidata name="SHA1Cng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.SHA1Cng.ComputeHash">
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.SHA1Cng.Initialize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_SHA1Cng" />
    </api>
    <api id="Overload:System.Security.Cryptography.SHA1Cng.ComputeHash">
      <topicdata name="ComputeHash" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.SHA1Cng" allInherited="true" />
      <apidata name="ComputeHash" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA1Cng" />
      </containers>
      <file name="O_T_System_Security_Cryptography_SHA1Cng_ComputeHash" />
    </api>
    <api id="M:System.Security.Cryptography.SHA1Cng.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA1Cng" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_SHA1Cng_ctor" />
    </api>
    <api id="M:System.Security.Cryptography.SHA1Cng.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.Initialize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA1Cng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_SHA1Cng_Initialize" />
    </api>
    <api id="T:System.Security.Cryptography.SHA256Cng">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.SHA256Cng" />
      <apidata name="SHA256Cng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.SHA256" ref="true" />
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_SHA256Cng" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.SHA256Cng">
      <topicdata name="SHA256Cng" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.SHA256Cng" />
      <apidata name="SHA256Cng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.SHA256Cng.ComputeHash">
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.Hash" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.HashSize" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashValue" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.State" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.SHA256Cng.#ctor" />
        <element api="M:System.Security.Cryptography.SHA256Cng.Initialize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_SHA256Cng" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.SHA256Cng">
      <topicdata name="SHA256Cng" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.SHA256Cng" />
      <apidata name="SHA256Cng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.SHA256Cng.ComputeHash">
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.SHA256Cng.Initialize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_SHA256Cng" />
    </api>
    <api id="Overload:System.Security.Cryptography.SHA256Cng.ComputeHash">
      <topicdata name="ComputeHash" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.SHA256Cng" allInherited="true" />
      <apidata name="ComputeHash" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA256Cng" />
      </containers>
      <file name="O_T_System_Security_Cryptography_SHA256Cng_ComputeHash" />
    </api>
    <api id="M:System.Security.Cryptography.SHA256Cng.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA256Cng" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_SHA256Cng_ctor" />
    </api>
    <api id="M:System.Security.Cryptography.SHA256Cng.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.Initialize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA256Cng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_SHA256Cng_Initialize" />
    </api>
    <api id="T:System.Security.Cryptography.SHA256CryptoServiceProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.SHA256CryptoServiceProvider" />
      <apidata name="SHA256CryptoServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.SHA256" ref="true" />
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_SHA256CryptoServiceProvider" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.SHA256CryptoServiceProvider">
      <topicdata name="SHA256CryptoServiceProvider" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.SHA256CryptoServiceProvider" />
      <apidata name="SHA256CryptoServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.SHA256CryptoServiceProvider.ComputeHash">
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.Hash" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.HashSize" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashValue" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.State" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.SHA256CryptoServiceProvider.#ctor" />
        <element api="M:System.Security.Cryptography.SHA256CryptoServiceProvider.Initialize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_SHA256CryptoServiceProvider" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.SHA256CryptoServiceProvider">
      <topicdata name="SHA256CryptoServiceProvider" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.SHA256CryptoServiceProvider" />
      <apidata name="SHA256CryptoServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.SHA256CryptoServiceProvider.ComputeHash">
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.SHA256CryptoServiceProvider.Initialize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_SHA256CryptoServiceProvider" />
    </api>
    <api id="Overload:System.Security.Cryptography.SHA256CryptoServiceProvider.ComputeHash">
      <topicdata name="ComputeHash" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.SHA256CryptoServiceProvider" allInherited="true" />
      <apidata name="ComputeHash" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA256CryptoServiceProvider" />
      </containers>
      <file name="O_T_System_Security_Cryptography_SHA256CryptoServiceProvider_ComputeHash" />
    </api>
    <api id="M:System.Security.Cryptography.SHA256CryptoServiceProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA256CryptoServiceProvider" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_SHA256CryptoServiceProvider_ctor" />
    </api>
    <api id="M:System.Security.Cryptography.SHA256CryptoServiceProvider.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.Initialize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA256CryptoServiceProvider" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_SHA256CryptoServiceProvider_Initialize" />
    </api>
    <api id="T:System.Security.Cryptography.SHA384Cng">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.SHA384Cng" />
      <apidata name="SHA384Cng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.SHA384" ref="true" />
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_SHA384Cng" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.SHA384Cng">
      <topicdata name="SHA384Cng" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.SHA384Cng" />
      <apidata name="SHA384Cng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.SHA384Cng.ComputeHash">
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.Hash" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.HashSize" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashValue" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.State" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.SHA384Cng.#ctor" />
        <element api="M:System.Security.Cryptography.SHA384Cng.Initialize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_SHA384Cng" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.SHA384Cng">
      <topicdata name="SHA384Cng" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.SHA384Cng" />
      <apidata name="SHA384Cng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.SHA384Cng.ComputeHash">
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.SHA384Cng.Initialize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_SHA384Cng" />
    </api>
    <api id="Overload:System.Security.Cryptography.SHA384Cng.ComputeHash">
      <topicdata name="ComputeHash" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.SHA384Cng" allInherited="true" />
      <apidata name="ComputeHash" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA384Cng" />
      </containers>
      <file name="O_T_System_Security_Cryptography_SHA384Cng_ComputeHash" />
    </api>
    <api id="M:System.Security.Cryptography.SHA384Cng.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA384Cng" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_SHA384Cng_ctor" />
    </api>
    <api id="M:System.Security.Cryptography.SHA384Cng.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.Initialize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA384Cng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_SHA384Cng_Initialize" />
    </api>
    <api id="T:System.Security.Cryptography.SHA384CryptoServiceProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.SHA384CryptoServiceProvider" />
      <apidata name="SHA384CryptoServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.SHA384" ref="true" />
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_SHA384CryptoServiceProvider" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.SHA384CryptoServiceProvider">
      <topicdata name="SHA384CryptoServiceProvider" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.SHA384CryptoServiceProvider" />
      <apidata name="SHA384CryptoServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.SHA384CryptoServiceProvider.ComputeHash">
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.Hash" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.HashSize" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashValue" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.State" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.SHA384CryptoServiceProvider.#ctor" />
        <element api="M:System.Security.Cryptography.SHA384CryptoServiceProvider.Initialize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_SHA384CryptoServiceProvider" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.SHA384CryptoServiceProvider">
      <topicdata name="SHA384CryptoServiceProvider" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.SHA384CryptoServiceProvider" />
      <apidata name="SHA384CryptoServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.SHA384CryptoServiceProvider.ComputeHash">
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.SHA384CryptoServiceProvider.Initialize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_SHA384CryptoServiceProvider" />
    </api>
    <api id="Overload:System.Security.Cryptography.SHA384CryptoServiceProvider.ComputeHash">
      <topicdata name="ComputeHash" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.SHA384CryptoServiceProvider" allInherited="true" />
      <apidata name="ComputeHash" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA384CryptoServiceProvider" />
      </containers>
      <file name="O_T_System_Security_Cryptography_SHA384CryptoServiceProvider_ComputeHash" />
    </api>
    <api id="M:System.Security.Cryptography.SHA384CryptoServiceProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA384CryptoServiceProvider" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_SHA384CryptoServiceProvider_ctor" />
    </api>
    <api id="M:System.Security.Cryptography.SHA384CryptoServiceProvider.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.Initialize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA384CryptoServiceProvider" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_SHA384CryptoServiceProvider_Initialize" />
    </api>
    <api id="T:System.Security.Cryptography.SHA512Cng">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.SHA512Cng" />
      <apidata name="SHA512Cng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.SHA512" ref="true" />
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_SHA512Cng" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.SHA512Cng">
      <topicdata name="SHA512Cng" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.SHA512Cng" />
      <apidata name="SHA512Cng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.SHA512Cng.ComputeHash">
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.Hash" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.HashSize" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashValue" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.State" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.SHA512Cng.#ctor" />
        <element api="M:System.Security.Cryptography.SHA512Cng.Initialize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_SHA512Cng" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.SHA512Cng">
      <topicdata name="SHA512Cng" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.SHA512Cng" />
      <apidata name="SHA512Cng" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.SHA512Cng.ComputeHash">
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.SHA512Cng.Initialize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_SHA512Cng" />
    </api>
    <api id="Overload:System.Security.Cryptography.SHA512Cng.ComputeHash">
      <topicdata name="ComputeHash" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.SHA512Cng" allInherited="true" />
      <apidata name="ComputeHash" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA512Cng" />
      </containers>
      <file name="O_T_System_Security_Cryptography_SHA512Cng_ComputeHash" />
    </api>
    <api id="M:System.Security.Cryptography.SHA512Cng.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA512Cng" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_SHA512Cng_ctor" />
    </api>
    <api id="M:System.Security.Cryptography.SHA512Cng.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.Initialize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA512Cng" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_SHA512Cng_Initialize" />
    </api>
    <api id="T:System.Security.Cryptography.SHA512CryptoServiceProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.SHA512CryptoServiceProvider" />
      <apidata name="SHA512CryptoServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.SHA512" ref="true" />
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_SHA512CryptoServiceProvider" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.SHA512CryptoServiceProvider">
      <topicdata name="SHA512CryptoServiceProvider" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.SHA512CryptoServiceProvider" />
      <apidata name="SHA512CryptoServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.SHA512CryptoServiceProvider.ComputeHash">
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.Hash" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.HashSize" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashValue" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize" />
        <element api="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.State" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.SHA512CryptoServiceProvider.#ctor" />
        <element api="M:System.Security.Cryptography.SHA512CryptoServiceProvider.Initialize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_SHA512CryptoServiceProvider" />
    </api>
    <api id="Methods.T:System.Security.Cryptography.SHA512CryptoServiceProvider">
      <topicdata name="SHA512CryptoServiceProvider" group="list" subgroup="Methods" typeTopicId="T:System.Security.Cryptography.SHA512CryptoServiceProvider" />
      <apidata name="SHA512CryptoServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear" />
        <element api="Overload:System.Security.Cryptography.SHA512CryptoServiceProvider.ComputeHash">
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
          <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Security.Cryptography.SHA512CryptoServiceProvider.Initialize" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Methods_T_System_Security_Cryptography_SHA512CryptoServiceProvider" />
    </api>
    <api id="Overload:System.Security.Cryptography.SHA512CryptoServiceProvider.ComputeHash">
      <topicdata name="ComputeHash" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Security.Cryptography.SHA512CryptoServiceProvider" allInherited="true" />
      <apidata name="ComputeHash" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA512CryptoServiceProvider" />
      </containers>
      <file name="O_T_System_Security_Cryptography_SHA512CryptoServiceProvider_ComputeHash" />
    </api>
    <api id="M:System.Security.Cryptography.SHA512CryptoServiceProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA512CryptoServiceProvider" ref="true" />
      </containers>
      <file name="C_System_Security_Cryptography_SHA512CryptoServiceProvider_ctor" />
    </api>
    <api id="M:System.Security.Cryptography.SHA512CryptoServiceProvider.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.Initialize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SHA512CryptoServiceProvider" ref="true" />
      </containers>
      <file name="M_System_Security_Cryptography_SHA512CryptoServiceProvider_Initialize" />
    </api>
    <api id="T:System.Security.Cryptography.SignatureVerificationResult">
      <topicdata group="api" />
      <apidata name="SignatureVerificationResult" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.Valid" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.AssemblyIdentityMismatch" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.ContainingSignatureInvalid" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.PublicKeyTokenMismatch" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.PublisherMismatch" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.SystemError" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.InvalidSignerCertificate" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCountersignature" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCertificateSignature" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.InvalidTimestamp" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.BadDigest" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.BasicConstraintsNotObserved" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.UnknownTrustProvider" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.UnknownVerificationAction" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.BadSignatureFormat" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.CertificateNotExplicitlyTrusted" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.MissingSignature" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.CertificateExpired" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.InvalidTimePeriodNesting" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCertificateRole" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.PathLengthConstraintViolated" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.UnknownCriticalExtension" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.CertificateUsageNotAllowed" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.IssuerChainingError" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.CertificateMalformed" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.UntrustedRootCertificate" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.CouldNotBuildChain" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.GenericTrustFailure" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.CertificateRevoked" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.UntrustedTestRootCertificate" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.RevocationCheckFailure" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCertificateUsage" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.CertificateExplicitlyDistrusted" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.UntrustedCertificationAuthority" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCertificatePolicy" />
        <element api="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCertificateName" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="T_System_Security_Cryptography_SignatureVerificationResult" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.AssemblyIdentityMismatch">
      <topicdata group="api" notopic="" />
      <apidata name="AssemblyIdentityMismatch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_AssemblyIdentityMismatch" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.BadDigest">
      <topicdata group="api" notopic="" />
      <apidata name="BadDigest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146869232</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_BadDigest" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.BadSignatureFormat">
      <topicdata group="api" notopic="" />
      <apidata name="BadSignatureFormat" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762749</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_BadSignatureFormat" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.BasicConstraintsNotObserved">
      <topicdata group="api" notopic="" />
      <apidata name="BasicConstraintsNotObserved" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146869223</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_BasicConstraintsNotObserved" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.CertificateExpired">
      <topicdata group="api" notopic="" />
      <apidata name="CertificateExpired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762495</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_CertificateExpired" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.CertificateExplicitlyDistrusted">
      <topicdata group="api" notopic="" />
      <apidata name="CertificateExplicitlyDistrusted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762479</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_CertificateExplicitlyDistrusted" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.CertificateMalformed">
      <topicdata group="api" notopic="" />
      <apidata name="CertificateMalformed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762488</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_CertificateMalformed" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.CertificateNotExplicitlyTrusted">
      <topicdata group="api" notopic="" />
      <apidata name="CertificateNotExplicitlyTrusted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762748</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_CertificateNotExplicitlyTrusted" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.CertificateRevoked">
      <topicdata group="api" notopic="" />
      <apidata name="CertificateRevoked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762484</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_CertificateRevoked" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.CertificateUsageNotAllowed">
      <topicdata group="api" notopic="" />
      <apidata name="CertificateUsageNotAllowed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762490</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_CertificateUsageNotAllowed" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.ContainingSignatureInvalid">
      <topicdata group="api" notopic="" />
      <apidata name="ContainingSignatureInvalid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_ContainingSignatureInvalid" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.CouldNotBuildChain">
      <topicdata group="api" notopic="" />
      <apidata name="CouldNotBuildChain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762486</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_CouldNotBuildChain" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.GenericTrustFailure">
      <topicdata group="api" notopic="" />
      <apidata name="GenericTrustFailure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762485</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_GenericTrustFailure" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCertificateName">
      <topicdata group="api" notopic="" />
      <apidata name="InvalidCertificateName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762476</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_InvalidCertificateName" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCertificatePolicy">
      <topicdata group="api" notopic="" />
      <apidata name="InvalidCertificatePolicy" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762477</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_InvalidCertificatePolicy" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCertificateRole">
      <topicdata group="api" notopic="" />
      <apidata name="InvalidCertificateRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762493</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_InvalidCertificateRole" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCertificateSignature">
      <topicdata group="api" notopic="" />
      <apidata name="InvalidCertificateSignature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146869244</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_InvalidCertificateSignature" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCertificateUsage">
      <topicdata group="api" notopic="" />
      <apidata name="InvalidCertificateUsage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762480</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_InvalidCertificateUsage" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCountersignature">
      <topicdata group="api" notopic="" />
      <apidata name="InvalidCountersignature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146869245</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_InvalidCountersignature" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.InvalidSignerCertificate">
      <topicdata group="api" notopic="" />
      <apidata name="InvalidSignerCertificate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146869246</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_InvalidSignerCertificate" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.InvalidTimePeriodNesting">
      <topicdata group="api" notopic="" />
      <apidata name="InvalidTimePeriodNesting" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762494</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_InvalidTimePeriodNesting" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.InvalidTimestamp">
      <topicdata group="api" notopic="" />
      <apidata name="InvalidTimestamp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146869243</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_InvalidTimestamp" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.IssuerChainingError">
      <topicdata group="api" notopic="" />
      <apidata name="IssuerChainingError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762489</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_IssuerChainingError" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.MissingSignature">
      <topicdata group="api" notopic="" />
      <apidata name="MissingSignature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762496</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_MissingSignature" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.PathLengthConstraintViolated">
      <topicdata group="api" notopic="" />
      <apidata name="PathLengthConstraintViolated" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762492</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_PathLengthConstraintViolated" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.PublicKeyTokenMismatch">
      <topicdata group="api" notopic="" />
      <apidata name="PublicKeyTokenMismatch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_PublicKeyTokenMismatch" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.PublisherMismatch">
      <topicdata group="api" notopic="" />
      <apidata name="PublisherMismatch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_PublisherMismatch" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.RevocationCheckFailure">
      <topicdata group="api" notopic="" />
      <apidata name="RevocationCheckFailure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762482</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_RevocationCheckFailure" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.SystemError">
      <topicdata group="api" notopic="" />
      <apidata name="SystemError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146869247</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_SystemError" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.UnknownCriticalExtension">
      <topicdata group="api" notopic="" />
      <apidata name="UnknownCriticalExtension" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762491</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_UnknownCriticalExtension" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.UnknownTrustProvider">
      <topicdata group="api" notopic="" />
      <apidata name="UnknownTrustProvider" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762751</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_UnknownTrustProvider" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.UnknownVerificationAction">
      <topicdata group="api" notopic="" />
      <apidata name="UnknownVerificationAction" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762750</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_UnknownVerificationAction" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.UntrustedCertificationAuthority">
      <topicdata group="api" notopic="" />
      <apidata name="UntrustedCertificationAuthority" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762478</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_UntrustedCertificationAuthority" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.UntrustedRootCertificate">
      <topicdata group="api" notopic="" />
      <apidata name="UntrustedRootCertificate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762487</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_UntrustedRootCertificate" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.UntrustedTestRootCertificate">
      <topicdata group="api" notopic="" />
      <apidata name="UntrustedTestRootCertificate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>-2146762483</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_UntrustedTestRootCertificate" />
    </api>
    <api id="F:System.Security.Cryptography.SignatureVerificationResult.Valid">
      <topicdata group="api" notopic="" />
      <apidata name="Valid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_SignatureVerificationResult_Valid" />
    </api>
    <api id="T:System.Security.Cryptography.StrongNameSignatureInformation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.StrongNameSignatureInformation" />
      <apidata name="StrongNameSignatureInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_StrongNameSignatureInformation" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.StrongNameSignatureInformation">
      <topicdata name="StrongNameSignatureInformation" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.StrongNameSignatureInformation" />
      <apidata name="StrongNameSignatureInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm" />
        <element api="P:System.Security.Cryptography.StrongNameSignatureInformation.HResult" />
        <element api="P:System.Security.Cryptography.StrongNameSignatureInformation.IsValid" />
        <element api="P:System.Security.Cryptography.StrongNameSignatureInformation.PublicKey" />
        <element api="P:System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_StrongNameSignatureInformation" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.StrongNameSignatureInformation">
      <topicdata name="StrongNameSignatureInformation" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.StrongNameSignatureInformation" />
      <apidata name="StrongNameSignatureInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm" />
        <element api="P:System.Security.Cryptography.StrongNameSignatureInformation.HResult" />
        <element api="P:System.Security.Cryptography.StrongNameSignatureInformation.IsValid" />
        <element api="P:System.Security.Cryptography.StrongNameSignatureInformation.PublicKey" />
        <element api="P:System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_StrongNameSignatureInformation" />
    </api>
    <api id="P:System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm">
      <topicdata group="api" />
      <apidata name="HashAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.StrongNameSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_StrongNameSignatureInformation_HashAlgorithm" />
    </api>
    <api id="P:System.Security.Cryptography.StrongNameSignatureInformation.HResult">
      <topicdata group="api" />
      <apidata name="HResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.StrongNameSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_StrongNameSignatureInformation_HResult" />
    </api>
    <api id="P:System.Security.Cryptography.StrongNameSignatureInformation.IsValid">
      <topicdata group="api" />
      <apidata name="IsValid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.StrongNameSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_StrongNameSignatureInformation_IsValid" />
    </api>
    <api id="P:System.Security.Cryptography.StrongNameSignatureInformation.PublicKey">
      <topicdata group="api" />
      <apidata name="PublicKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.StrongNameSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_StrongNameSignatureInformation_PublicKey" />
    </api>
    <api id="P:System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult">
      <topicdata group="api" />
      <apidata name="VerificationResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography" />
        <type api="T:System.Security.Cryptography.StrongNameSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_StrongNameSignatureInformation_VerificationResult" />
    </api>
    <api id="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" />
      <apidata name="AuthenticodeSignatureInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_X509Certificates_AuthenticodeSignatureInformation" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation">
      <topicdata name="AuthenticodeSignatureInformation" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" />
      <apidata name="AuthenticodeSignatureInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.Description" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.DescriptionUrl" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.HashAlgorithm" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.HResult" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.SignatureChain" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.SigningCertificate" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.Timestamp" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.TrustStatus" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.VerificationResult" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_X509Certificates_AuthenticodeSignatureInformation" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation">
      <topicdata name="AuthenticodeSignatureInformation" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" />
      <apidata name="AuthenticodeSignatureInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.Description" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.DescriptionUrl" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.HashAlgorithm" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.HResult" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.SignatureChain" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.SigningCertificate" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.Timestamp" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.TrustStatus" />
        <element api="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.VerificationResult" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_X509Certificates_AuthenticodeSignatureInformation" />
    </api>
    <api id="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_X509Certificates_AuthenticodeSignatureInformation_Description" />
    </api>
    <api id="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.DescriptionUrl">
      <topicdata group="api" />
      <apidata name="DescriptionUrl" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_X509Certificates_AuthenticodeSignatureInformation_DescriptionUrl" />
    </api>
    <api id="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.HashAlgorithm">
      <topicdata group="api" />
      <apidata name="HashAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_X509Certificates_AuthenticodeSignatureInformation_HashAlgorithm" />
    </api>
    <api id="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.HResult">
      <topicdata group="api" />
      <apidata name="HResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_X509Certificates_AuthenticodeSignatureInformation_HResult" />
    </api>
    <api id="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.SignatureChain">
      <topicdata group="api" />
      <apidata name="SignatureChain" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Chain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_X509Certificates_AuthenticodeSignatureInformation_SignatureChain" />
    </api>
    <api id="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.SigningCertificate">
      <topicdata group="api" />
      <apidata name="SigningCertificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_X509Certificates_AuthenticodeSignatureInformation_SigningCertificate" />
    </api>
    <api id="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.Timestamp">
      <topicdata group="api" />
      <apidata name="Timestamp" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.TimestampInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_X509Certificates_AuthenticodeSignatureInformation_Timestamp" />
    </api>
    <api id="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.TrustStatus">
      <topicdata group="api" />
      <apidata name="TrustStatus" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.TrustStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_X509Certificates_AuthenticodeSignatureInformation_TrustStatus" />
    </api>
    <api id="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.VerificationResult">
      <topicdata group="api" />
      <apidata name="VerificationResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_X509Certificates_AuthenticodeSignatureInformation_VerificationResult" />
    </api>
    <api id="T:System.Security.Cryptography.X509Certificates.TimestampInformation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Security.Cryptography.X509Certificates.TimestampInformation" />
      <apidata name="TimestampInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Security_Cryptography_X509Certificates_TimestampInformation" />
    </api>
    <api id="AllMembers.T:System.Security.Cryptography.X509Certificates.TimestampInformation">
      <topicdata name="TimestampInformation" group="list" subgroup="members" typeTopicId="T:System.Security.Cryptography.X509Certificates.TimestampInformation" />
      <apidata name="TimestampInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Security.Cryptography.X509Certificates.TimestampInformation.HashAlgorithm" />
        <element api="P:System.Security.Cryptography.X509Certificates.TimestampInformation.HResult" />
        <element api="P:System.Security.Cryptography.X509Certificates.TimestampInformation.IsValid" />
        <element api="P:System.Security.Cryptography.X509Certificates.TimestampInformation.SignatureChain" />
        <element api="P:System.Security.Cryptography.X509Certificates.TimestampInformation.SigningCertificate" />
        <element api="P:System.Security.Cryptography.X509Certificates.TimestampInformation.Timestamp" />
        <element api="P:System.Security.Cryptography.X509Certificates.TimestampInformation.VerificationResult" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
      </containers>
      <file name="AllMembers_T_System_Security_Cryptography_X509Certificates_TimestampInformation" />
    </api>
    <api id="Properties.T:System.Security.Cryptography.X509Certificates.TimestampInformation">
      <topicdata name="TimestampInformation" group="list" subgroup="Properties" typeTopicId="T:System.Security.Cryptography.X509Certificates.TimestampInformation" />
      <apidata name="TimestampInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Security.Cryptography.X509Certificates.TimestampInformation.HashAlgorithm" />
        <element api="P:System.Security.Cryptography.X509Certificates.TimestampInformation.HResult" />
        <element api="P:System.Security.Cryptography.X509Certificates.TimestampInformation.IsValid" />
        <element api="P:System.Security.Cryptography.X509Certificates.TimestampInformation.SignatureChain" />
        <element api="P:System.Security.Cryptography.X509Certificates.TimestampInformation.SigningCertificate" />
        <element api="P:System.Security.Cryptography.X509Certificates.TimestampInformation.Timestamp" />
        <element api="P:System.Security.Cryptography.X509Certificates.TimestampInformation.VerificationResult" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
      </containers>
      <file name="Properties_T_System_Security_Cryptography_X509Certificates_TimestampInformation" />
    </api>
    <api id="P:System.Security.Cryptography.X509Certificates.TimestampInformation.HashAlgorithm">
      <topicdata group="api" />
      <apidata name="HashAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.TimestampInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_X509Certificates_TimestampInformation_HashAlgorithm" />
    </api>
    <api id="P:System.Security.Cryptography.X509Certificates.TimestampInformation.HResult">
      <topicdata group="api" />
      <apidata name="HResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.TimestampInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_X509Certificates_TimestampInformation_HResult" />
    </api>
    <api id="P:System.Security.Cryptography.X509Certificates.TimestampInformation.IsValid">
      <topicdata group="api" />
      <apidata name="IsValid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.TimestampInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_X509Certificates_TimestampInformation_IsValid" />
    </api>
    <api id="P:System.Security.Cryptography.X509Certificates.TimestampInformation.SignatureChain">
      <topicdata group="api" />
      <apidata name="SignatureChain" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Chain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.TimestampInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_X509Certificates_TimestampInformation_SignatureChain" />
    </api>
    <api id="P:System.Security.Cryptography.X509Certificates.TimestampInformation.SigningCertificate">
      <topicdata group="api" />
      <apidata name="SigningCertificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.TimestampInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_X509Certificates_TimestampInformation_SigningCertificate" />
    </api>
    <api id="P:System.Security.Cryptography.X509Certificates.TimestampInformation.Timestamp">
      <topicdata group="api" />
      <apidata name="Timestamp" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.TimestampInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_X509Certificates_TimestampInformation_Timestamp" />
    </api>
    <api id="P:System.Security.Cryptography.X509Certificates.TimestampInformation.VerificationResult">
      <topicdata group="api" />
      <apidata name="VerificationResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Security.Cryptography.SignatureVerificationResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.TimestampInformation" ref="true" />
      </containers>
      <file name="P_System_Security_Cryptography_X509Certificates_TimestampInformation_VerificationResult" />
    </api>
    <api id="T:System.Security.Cryptography.X509Certificates.TrustStatus">
      <topicdata group="api" />
      <apidata name="TrustStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Security.Cryptography.X509Certificates.TrustStatus.Untrusted" />
        <element api="F:System.Security.Cryptography.X509Certificates.TrustStatus.UnknownIdentity" />
        <element api="F:System.Security.Cryptography.X509Certificates.TrustStatus.KnownIdentity" />
        <element api="F:System.Security.Cryptography.X509Certificates.TrustStatus.Trusted" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
      </containers>
      <file name="T_System_Security_Cryptography_X509Certificates_TrustStatus" />
    </api>
    <api id="F:System.Security.Cryptography.X509Certificates.TrustStatus.KnownIdentity">
      <topicdata group="api" notopic="" />
      <apidata name="KnownIdentity" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.TrustStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.TrustStatus" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_X509Certificates_TrustStatus_KnownIdentity" />
    </api>
    <api id="F:System.Security.Cryptography.X509Certificates.TrustStatus.Trusted">
      <topicdata group="api" notopic="" />
      <apidata name="Trusted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.TrustStatus" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.TrustStatus" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_X509Certificates_TrustStatus_Trusted" />
    </api>
    <api id="F:System.Security.Cryptography.X509Certificates.TrustStatus.UnknownIdentity">
      <topicdata group="api" notopic="" />
      <apidata name="UnknownIdentity" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.TrustStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.TrustStatus" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_X509Certificates_TrustStatus_UnknownIdentity" />
    </api>
    <api id="F:System.Security.Cryptography.X509Certificates.TrustStatus.Untrusted">
      <topicdata group="api" notopic="" />
      <apidata name="Untrusted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.TrustStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Security.Cryptography.X509Certificates" />
        <type api="T:System.Security.Cryptography.X509Certificates.TrustStatus" ref="false" />
      </containers>
      <file name="F_System_Security_Cryptography_X509Certificates_TrustStatus_Untrusted" />
    </api>
    <api id="T:System.Threading.LockRecursionException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.LockRecursionException" />
      <apidata name="LockRecursionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Threading_LockRecursionException" />
    </api>
    <api id="AllMembers.T:System.Threading.LockRecursionException">
      <topicdata name="LockRecursionException" group="list" subgroup="members" typeTopicId="T:System.Threading.LockRecursionException" />
      <apidata name="LockRecursionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Threading.LockRecursionException.#ctor">
          <element api="M:System.Threading.LockRecursionException.#ctor" />
          <element api="M:System.Threading.LockRecursionException.#ctor(System.String)" />
          <element api="M:System.Threading.LockRecursionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Threading.LockRecursionException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
      </containers>
      <file name="AllMembers_T_System_Threading_LockRecursionException" />
    </api>
    <api id="Overload:System.Threading.LockRecursionException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.LockRecursionException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.LockRecursionException.#ctor" />
        <element api="M:System.Threading.LockRecursionException.#ctor(System.String)" />
        <element api="M:System.Threading.LockRecursionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Threading.LockRecursionException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionException" ref="true" />
      </containers>
      <file name="O_T_System_Threading_LockRecursionException_ctor" />
    </api>
    <api id="M:System.Threading.LockRecursionException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.LockRecursionException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionException" ref="true" />
      </containers>
      <file name="C_System_Threading_LockRecursionException_ctor" />
    </api>
    <api id="M:System.Threading.LockRecursionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Threading.LockRecursionException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionException" ref="true" />
      </containers>
      <file name="C_System_Threading_LockRecursionException_ctor_2_4075724f" />
    </api>
    <api id="M:System.Threading.LockRecursionException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.LockRecursionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionException" ref="true" />
      </containers>
      <file name="C_System_Threading_LockRecursionException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Threading.LockRecursionException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.LockRecursionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionException" ref="true" />
      </containers>
      <file name="C_System_Threading_LockRecursionException_ctor_2_3ec47892" />
    </api>
    <api id="T:System.Threading.LockRecursionPolicy">
      <topicdata group="api" />
      <apidata name="LockRecursionPolicy" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Threading.LockRecursionPolicy.NoRecursion" />
        <element api="F:System.Threading.LockRecursionPolicy.SupportsRecursion" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
      </containers>
      <file name="T_System_Threading_LockRecursionPolicy" />
    </api>
    <api id="F:System.Threading.LockRecursionPolicy.NoRecursion">
      <topicdata group="api" notopic="" />
      <apidata name="NoRecursion" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.LockRecursionPolicy" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionPolicy" ref="false" />
      </containers>
      <file name="F_System_Threading_LockRecursionPolicy_NoRecursion" />
    </api>
    <api id="F:System.Threading.LockRecursionPolicy.SupportsRecursion">
      <topicdata group="api" notopic="" />
      <apidata name="SupportsRecursion" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.LockRecursionPolicy" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionPolicy" ref="false" />
      </containers>
      <file name="F_System_Threading_LockRecursionPolicy_SupportsRecursion" />
    </api>
    <api id="T:System.Threading.ReaderWriterLockSlim">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.ReaderWriterLockSlim" />
      <apidata name="ReaderWriterLockSlim" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Threading_ReaderWriterLockSlim" />
    </api>
    <api id="AllMembers.T:System.Threading.ReaderWriterLockSlim">
      <topicdata name="ReaderWriterLockSlim" group="list" subgroup="members" typeTopicId="T:System.Threading.ReaderWriterLockSlim" />
      <apidata name="ReaderWriterLockSlim" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.ReaderWriterLockSlim.#ctor">
          <element api="M:System.Threading.ReaderWriterLockSlim.#ctor" />
          <element api="M:System.Threading.ReaderWriterLockSlim.#ctor(System.Threading.LockRecursionPolicy)" />
        </element>
        <element api="P:System.Threading.ReaderWriterLockSlim.CurrentReadCount" />
        <element api="M:System.Threading.ReaderWriterLockSlim.Dispose" />
        <element api="M:System.Threading.ReaderWriterLockSlim.EnterReadLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.EnterUpgradeableReadLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.EnterWriteLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.ExitReadLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.ExitUpgradeableReadLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.ExitWriteLock" />
        <element api="P:System.Threading.ReaderWriterLockSlim.IsReadLockHeld" />
        <element api="P:System.Threading.ReaderWriterLockSlim.IsUpgradeableReadLockHeld" />
        <element api="P:System.Threading.ReaderWriterLockSlim.IsWriteLockHeld" />
        <element api="P:System.Threading.ReaderWriterLockSlim.RecursionPolicy" />
        <element api="P:System.Threading.ReaderWriterLockSlim.RecursiveReadCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.RecursiveUpgradeCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.RecursiveWriteCount" />
        <element api="Overload:System.Threading.ReaderWriterLockSlim.TryEnterReadLock">
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock">
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock">
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.TimeSpan)" />
        </element>
        <element api="P:System.Threading.ReaderWriterLockSlim.WaitingReadCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.WaitingUpgradeCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.WaitingWriteCount" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
      </containers>
      <file name="AllMembers_T_System_Threading_ReaderWriterLockSlim" />
    </api>
    <api id="Methods.T:System.Threading.ReaderWriterLockSlim">
      <topicdata name="ReaderWriterLockSlim" group="list" subgroup="Methods" typeTopicId="T:System.Threading.ReaderWriterLockSlim" />
      <apidata name="ReaderWriterLockSlim" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.ReaderWriterLockSlim.Dispose" />
        <element api="M:System.Threading.ReaderWriterLockSlim.EnterReadLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.EnterUpgradeableReadLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.EnterWriteLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.ExitReadLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.ExitUpgradeableReadLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.ExitWriteLock" />
        <element api="Overload:System.Threading.ReaderWriterLockSlim.TryEnterReadLock">
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock">
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock">
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.TimeSpan)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
      </containers>
      <file name="Methods_T_System_Threading_ReaderWriterLockSlim" />
    </api>
    <api id="Properties.T:System.Threading.ReaderWriterLockSlim">
      <topicdata name="ReaderWriterLockSlim" group="list" subgroup="Properties" typeTopicId="T:System.Threading.ReaderWriterLockSlim" />
      <apidata name="ReaderWriterLockSlim" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Threading.ReaderWriterLockSlim.CurrentReadCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.IsReadLockHeld" />
        <element api="P:System.Threading.ReaderWriterLockSlim.IsUpgradeableReadLockHeld" />
        <element api="P:System.Threading.ReaderWriterLockSlim.IsWriteLockHeld" />
        <element api="P:System.Threading.ReaderWriterLockSlim.RecursionPolicy" />
        <element api="P:System.Threading.ReaderWriterLockSlim.RecursiveReadCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.RecursiveUpgradeCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.RecursiveWriteCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.WaitingReadCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.WaitingUpgradeCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.WaitingWriteCount" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
      </containers>
      <file name="Properties_T_System_Threading_ReaderWriterLockSlim" />
    </api>
    <api id="Overload:System.Threading.ReaderWriterLockSlim.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.ReaderWriterLockSlim" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.ReaderWriterLockSlim.#ctor" />
        <element api="M:System.Threading.ReaderWriterLockSlim.#ctor(System.Threading.LockRecursionPolicy)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="O_T_System_Threading_ReaderWriterLockSlim_ctor" />
    </api>
    <api id="Overload:System.Threading.ReaderWriterLockSlim.TryEnterReadLock">
      <topicdata name="TryEnterReadLock" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.ReaderWriterLockSlim" />
      <apidata name="TryEnterReadLock" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.Int32)" />
        <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="O_T_System_Threading_ReaderWriterLockSlim_TryEnterReadLock" />
    </api>
    <api id="Overload:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock">
      <topicdata name="TryEnterUpgradeableReadLock" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.ReaderWriterLockSlim" />
      <apidata name="TryEnterUpgradeableReadLock" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.Int32)" />
        <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="O_T_System_Threading_ReaderWriterLockSlim_TryEnterUpgradeableReadLock" />
    </api>
    <api id="Overload:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock">
      <topicdata name="TryEnterWriteLock" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.ReaderWriterLockSlim" />
      <apidata name="TryEnterWriteLock" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.Int32)" />
        <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="O_T_System_Threading_ReaderWriterLockSlim_TryEnterWriteLock" />
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ReaderWriterLockSlim.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="C_System_Threading_ReaderWriterLockSlim_ctor" />
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.#ctor(System.Threading.LockRecursionPolicy)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ReaderWriterLockSlim.#ctor" />
      <parameters>
        <parameter name="recursionPolicy">
          <type api="T:System.Threading.LockRecursionPolicy" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="C_System_Threading_ReaderWriterLockSlim_ctor_1_f2c3fd0a" />
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.CurrentReadCount">
      <topicdata group="api" />
      <apidata name="CurrentReadCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="P_System_Threading_ReaderWriterLockSlim_CurrentReadCount" />
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="M_System_Threading_ReaderWriterLockSlim_Dispose" />
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.EnterReadLock">
      <topicdata group="api" />
      <apidata name="EnterReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="M_System_Threading_ReaderWriterLockSlim_EnterReadLock" />
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.EnterUpgradeableReadLock">
      <topicdata group="api" />
      <apidata name="EnterUpgradeableReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="M_System_Threading_ReaderWriterLockSlim_EnterUpgradeableReadLock" />
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.EnterWriteLock">
      <topicdata group="api" />
      <apidata name="EnterWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="M_System_Threading_ReaderWriterLockSlim_EnterWriteLock" />
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.ExitReadLock">
      <topicdata group="api" />
      <apidata name="ExitReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="M_System_Threading_ReaderWriterLockSlim_ExitReadLock" />
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.ExitUpgradeableReadLock">
      <topicdata group="api" />
      <apidata name="ExitUpgradeableReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="M_System_Threading_ReaderWriterLockSlim_ExitUpgradeableReadLock" />
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.ExitWriteLock">
      <topicdata group="api" />
      <apidata name="ExitWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="M_System_Threading_ReaderWriterLockSlim_ExitWriteLock" />
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.IsReadLockHeld">
      <topicdata group="api" />
      <apidata name="IsReadLockHeld" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="P_System_Threading_ReaderWriterLockSlim_IsReadLockHeld" />
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.IsUpgradeableReadLockHeld">
      <topicdata group="api" />
      <apidata name="IsUpgradeableReadLockHeld" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="P_System_Threading_ReaderWriterLockSlim_IsUpgradeableReadLockHeld" />
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.IsWriteLockHeld">
      <topicdata group="api" />
      <apidata name="IsWriteLockHeld" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="P_System_Threading_ReaderWriterLockSlim_IsWriteLockHeld" />
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.RecursionPolicy">
      <topicdata group="api" />
      <apidata name="RecursionPolicy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Threading.LockRecursionPolicy" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="P_System_Threading_ReaderWriterLockSlim_RecursionPolicy" />
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.RecursiveReadCount">
      <topicdata group="api" />
      <apidata name="RecursiveReadCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="P_System_Threading_ReaderWriterLockSlim_RecursiveReadCount" />
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.RecursiveUpgradeCount">
      <topicdata group="api" />
      <apidata name="RecursiveUpgradeCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="P_System_Threading_ReaderWriterLockSlim_RecursiveUpgradeCount" />
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.RecursiveWriteCount">
      <topicdata group="api" />
      <apidata name="RecursiveWriteCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="P_System_Threading_ReaderWriterLockSlim_RecursiveWriteCount" />
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.Int32)">
      <topicdata group="api" />
      <apidata name="TryEnterReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLockSlim.TryEnterReadLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="M_System_Threading_ReaderWriterLockSlim_TryEnterReadLock_1_cd2d7ec9" />
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="TryEnterReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLockSlim.TryEnterReadLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="M_System_Threading_ReaderWriterLockSlim_TryEnterReadLock_1_dd1f561a" />
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.Int32)">
      <topicdata group="api" />
      <apidata name="TryEnterUpgradeableReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="M_System_Threading_ReaderWriterLockSlim_TryEnterUpgradeableReadLock_1_cd2d7ec9" />
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="TryEnterUpgradeableReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="M_System_Threading_ReaderWriterLockSlim_TryEnterUpgradeableReadLock_1_dd1f561a" />
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.Int32)">
      <topicdata group="api" />
      <apidata name="TryEnterWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="M_System_Threading_ReaderWriterLockSlim_TryEnterWriteLock_1_cd2d7ec9" />
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="TryEnterWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="M_System_Threading_ReaderWriterLockSlim_TryEnterWriteLock_1_dd1f561a" />
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.WaitingReadCount">
      <topicdata group="api" />
      <apidata name="WaitingReadCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="P_System_Threading_ReaderWriterLockSlim_WaitingReadCount" />
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.WaitingUpgradeCount">
      <topicdata group="api" />
      <apidata name="WaitingUpgradeCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="P_System_Threading_ReaderWriterLockSlim_WaitingUpgradeCount" />
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.WaitingWriteCount">
      <topicdata group="api" />
      <apidata name="WaitingWriteCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" />
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
      <file name="P_System_Threading_ReaderWriterLockSlim_WaitingWriteCount" />
    </api>
  </apis>
</reflection>