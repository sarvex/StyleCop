<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Microsoft.VisualC.STLCLR">
      <assemblydata version="1.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VisualC.STLCLR</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>STLCLR cross assembly library</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>STLCLR</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.PermissionSetAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestOptional" />
            </enumValue>
          </argument>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Nothing</value>
          </assignment>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="T:Microsoft.VisualC.StlClr.BinaryDelegate`3">
      <topicdata group="api" />
      <apidata name="BinaryDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TArg1" />
        <template name="TArg2" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="">
          <template name="TArg1" index="0" api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" />
        </parameter>
        <parameter name="">
          <template name="TArg2" index="1" api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="2" api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_BinaryDelegate`3" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.DequeEnumerator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
      <apidata name="DequeEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_DequeEnumerator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.DequeEnumerator`1">
      <topicdata name="DequeEnumerator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
      <apidata name="DequeEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)" />
        <element api="P:Microsoft.VisualC.StlClr.DequeEnumerator`1.Current" />
        <element api="Overload:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_DequeEnumerator`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.DequeEnumerator`1">
      <topicdata name="DequeEnumerator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
      <apidata name="DequeEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_DequeEnumerator`1" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.DequeEnumerator`1">
      <topicdata name="DequeEnumerator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
      <apidata name="DequeEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.DequeEnumerator`1.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_DequeEnumerator`1" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose" />
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_DequeEnumerator`1_Dispose" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_Cont">
          <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_DequeEnumerator`1_ctor_2_c9af03ca" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.DequeEnumerator`1.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IEnumerator`1.Current">
          <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_DequeEnumerator`1_Current" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose" />
      <proceduredata virtual="true" final="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_DequeEnumerator`1_Dispose" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_DequeEnumerator`1_Dispose_1_36d384f7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.MoveNext">
          <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_DequeEnumerator`1_MoveNext" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Reset">
          <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_DequeEnumerator`1_Reset" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" />
      <apidata name="DequeEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_DequeEnumeratorBase`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1">
      <topicdata name="DequeEnumeratorBase" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" />
      <apidata name="DequeEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)" />
        <element api="P:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Current" />
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_DequeEnumeratorBase`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1">
      <topicdata name="DequeEnumeratorBase" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" />
      <apidata name="DequeEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_DequeEnumeratorBase`1" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1">
      <topicdata name="DequeEnumeratorBase" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" />
      <apidata name="DequeEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_DequeEnumeratorBase`1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_Cont">
          <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_DequeEnumeratorBase`1_ctor_2_c9af03ca" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IEnumerator.Current">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_DequeEnumeratorBase`1_Current" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_DequeEnumeratorBase`1_MoveNext" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_DequeEnumeratorBase`1_Reset" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.GenericPair`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.GenericPair`2" />
      <apidata name="GenericPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue1" />
        <template name="TValue2" />
      </templates>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_GenericPair`2" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.GenericPair`2">
      <topicdata name="GenericPair" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.GenericPair`2" />
      <apidata name="GenericPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue1" />
        <template name="TValue2" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.GenericPair`2.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0)" />
          <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(System.Collections.Generic.KeyValuePair{`0,`1}@)" />
          <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0,`1)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.Equals(System.Object)" />
        <element api="F:Microsoft.VisualC.StlClr.GenericPair`2.first" />
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.op_Assign(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="F:Microsoft.VisualC.StlClr.GenericPair`2.second" />
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.swap(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_GenericPair`2" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.GenericPair`2">
      <topicdata name="GenericPair" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.GenericPair`2" />
      <apidata name="GenericPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue1" />
        <template name="TValue2" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.Equals(System.Object)" />
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.op_Assign(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.swap(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_GenericPair`2" />
    </api>
    <api id="Fields.T:Microsoft.VisualC.StlClr.GenericPair`2">
      <topicdata name="GenericPair" group="list" subgroup="Fields" typeTopicId="T:Microsoft.VisualC.StlClr.GenericPair`2" />
      <apidata name="GenericPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue1" />
        <template name="TValue2" />
      </templates>
      <elements>
        <element api="F:Microsoft.VisualC.StlClr.GenericPair`2.first" />
        <element api="F:Microsoft.VisualC.StlClr.GenericPair`2.second" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Fields_T_Microsoft_VisualC_StlClr_GenericPair`2" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.GenericPair`2.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.GenericPair`2" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(System.Collections.Generic.KeyValuePair{`0,`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0,`1)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_GenericPair`2_ctor" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_GenericPair`2_ctor" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true">
            <specialization>
              <template name="TValue1" index="0" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
              <template name="TValue2" index="1" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_GenericPair`2_ctor_2_df308e0f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(System.Collections.Generic.KeyValuePair{`0,`1}@)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
      <parameters>
        <parameter name="_Right">
          <referenceTo>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TValue1" index="0" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
                <template name="TValue2" index="1" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_GenericPair`2_ctor_2_6283072c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
      <parameters>
        <parameter name="_Val1">
          <template name="TValue1" index="0" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_GenericPair`2_ctor_1_337c34c5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0,`1)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
      <parameters>
        <parameter name="_Val1">
          <template name="TValue1" index="0" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
        </parameter>
        <parameter name="_Val2">
          <template name="TValue2" index="1" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_GenericPair`2_ctor_2_222c7e23" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.GenericPair`2.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="_Right_arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_GenericPair`2_Equals_1_2572741a" />
    </api>
    <api id="F:Microsoft.VisualC.StlClr.GenericPair`2.first">
      <topicdata group="api" />
      <apidata name="first" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="TValue1" index="0" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="F_Microsoft_VisualC_StlClr_GenericPair`2_first" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.GenericPair`2.op_Assign(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true">
            <specialization>
              <template name="TValue1" index="0" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
              <template name="TValue2" index="1" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true">
          <specialization>
            <template name="TValue1" index="0" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
            <template name="TValue2" index="1" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_GenericPair`2_op_Assign_2_d5311dd7" />
    </api>
    <api id="F:Microsoft.VisualC.StlClr.GenericPair`2.second">
      <topicdata group="api" />
      <apidata name="second" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="TValue2" index="1" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="F_Microsoft_VisualC_StlClr_GenericPair`2_second" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.GenericPair`2.swap(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="swap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true">
            <specialization>
              <template name="TValue1" index="0" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
              <template name="TValue2" index="1" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_GenericPair`2_swap_2_d5311dd7" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.HashEnumerator`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
      <apidata name="HashEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_HashEnumerator`2" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.HashEnumerator`2">
      <topicdata name="HashEnumerator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
      <apidata name="HashEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})" />
        <element api="P:Microsoft.VisualC.StlClr.HashEnumerator`2.Current" />
        <element api="Overload:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_HashEnumerator`2" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.HashEnumerator`2">
      <topicdata name="HashEnumerator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
      <apidata name="HashEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_HashEnumerator`2" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.HashEnumerator`2">
      <topicdata name="HashEnumerator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
      <apidata name="HashEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.HashEnumerator`2.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_HashEnumerator`2" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose" />
        <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_HashEnumerator`2_Dispose" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.HashEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_HashEnumerator`2_ctor_1_5ba3c886" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.HashEnumerator`2.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IEnumerator`1.Current">
          <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_HashEnumerator`2_Current" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose" />
      <proceduredata virtual="true" final="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_HashEnumerator`2_Dispose" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_HashEnumerator`2_Dispose_1_36d384f7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.MoveNext">
          <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
            </specialization>
          </type>
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_HashEnumerator`2_MoveNext" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Reset">
          <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
            </specialization>
          </type>
        </member>
      </overrides>
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_HashEnumerator`2_Reset" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" />
      <apidata name="HashEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_HashEnumeratorBase`2" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2">
      <topicdata name="HashEnumeratorBase" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" />
      <apidata name="HashEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})" />
        <element api="P:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Current" />
        <element api="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_HashEnumeratorBase`2" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2">
      <topicdata name="HashEnumeratorBase" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" />
      <apidata name="HashEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_HashEnumeratorBase`2" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2">
      <topicdata name="HashEnumeratorBase" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" />
      <apidata name="HashEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_HashEnumeratorBase`2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_HashEnumeratorBase`2_ctor_1_5ba3c886" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IEnumerator.Current">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_HashEnumeratorBase`2_Current" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_HashEnumeratorBase`2_MoveNext" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_HashEnumeratorBase`2_Reset" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.IDeque`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IDeque`1" />
      <apidata name="IDeque" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
          </specialization>
        </type>
        <type api="T:System.ICloneable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_IDeque`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.IDeque`1">
      <topicdata name="IDeque" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.IDeque`1" />
      <apidata name="IDeque" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.IDeque`1.assign">
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.back" />
        <element api="P:Microsoft.VisualC.StlClr.IDeque`1.back_item" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.begin_bias" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.clear" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.end_bias" />
        <element api="Overload:Microsoft.VisualC.StlClr.IDeque`1.erase">
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.front" />
        <element api="P:Microsoft.VisualC.StlClr.IDeque`1.front_item" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.get_generation" />
        <element api="Overload:Microsoft.VisualC.StlClr.IDeque`1.insert">
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
        </element>
        <element api="P:Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.pop_back" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.pop_front" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IDeque`1.resize">
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.size" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_IDeque`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.IDeque`1">
      <topicdata name="IDeque" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.IDeque`1" />
      <apidata name="IDeque" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.IDeque`1.assign">
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.back" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.begin_bias" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.clear" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.end_bias" />
        <element api="Overload:Microsoft.VisualC.StlClr.IDeque`1.erase">
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.front" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.get_generation" />
        <element api="Overload:Microsoft.VisualC.StlClr.IDeque`1.insert">
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.pop_back" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.pop_front" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IDeque`1.resize">
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.size" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_IDeque`1" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.IDeque`1">
      <topicdata name="IDeque" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.IDeque`1" />
      <apidata name="IDeque" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.IDeque`1.back_item" />
        <element api="P:Microsoft.VisualC.StlClr.IDeque`1.front_item" />
        <element api="P:Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_IDeque`1" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IDeque`1.assign">
      <topicdata name="assign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IDeque`1" />
      <apidata name="assign" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_IDeque`1_assign" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IDeque`1.erase">
      <topicdata name="erase" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IDeque`1" />
      <apidata name="erase" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_IDeque`1_erase" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IDeque`1.insert">
      <topicdata name="insert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IDeque`1" />
      <apidata name="insert" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_IDeque`1_insert" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IDeque`1.resize">
      <topicdata name="resize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IDeque`1" />
      <apidata name="resize" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_IDeque`1_resize" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_assign_2_b1d2bb3b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_assign_1_2fa4d2ad" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_assign_2_f5a71668" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)">
      <topicdata group="api" />
      <apidata name="at" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_at_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.back">
      <topicdata group="api" />
      <apidata name="back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_back" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IDeque`1.back_item">
      <topicdata group="api" />
      <apidata name="back_item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_IDeque`1_back_item" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="begin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_begin_1_decf4ebf" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.begin_bias">
      <topicdata group="api" />
      <apidata name="begin_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_begin_bias" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.clear">
      <topicdata group="api" />
      <apidata name="clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_clear" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.empty">
      <topicdata group="api" />
      <apidata name="empty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_empty" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="end" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_end_1_decf4ebf" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.end_bias">
      <topicdata group="api" />
      <apidata name="end_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_end_bias" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_erase_2_c511ea1f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_First_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Last_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_erase_3_efcecd8e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.front">
      <topicdata group="api" />
      <apidata name="front" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_front" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IDeque`1.front_item">
      <topicdata group="api" />
      <apidata name="front_item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_IDeque`1_front_item" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.get_generation">
      <topicdata group="api" />
      <apidata name="get_generation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.UInt32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsLong" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_get_generation" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_insert_3_beaf5cae" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_insert_3_349a9f19" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_insert_2_3ed7394f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_insert_3_56925269" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="_Pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_IDeque`1_Item_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.pop_back">
      <topicdata group="api" />
      <apidata name="pop_back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_pop_back" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.pop_front">
      <topicdata group="api" />
      <apidata name="pop_front" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_pop_front" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)">
      <topicdata group="api" />
      <apidata name="push_back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_push_back_1_1a965722" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)">
      <topicdata group="api" />
      <apidata name="push_front" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_push_front_1_1a965722" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="rbegin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_rbegin_1_955019f0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="rend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_rend_1_955019f0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)">
      <topicdata group="api" />
      <apidata name="resize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.resize" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Newsize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_resize_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="resize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.resize" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Newsize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_resize_2_f5a71668" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.size">
      <topicdata group="api" />
      <apidata name="size" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_size" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})">
      <topicdata group="api" />
      <apidata name="swap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IDeque`1_swap_1_90ff3c37" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.IHash`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IHash`2" />
      <apidata name="IHash" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
          </specialization>
        </type>
        <type api="T:System.ICloneable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_IHash`2" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.IHash`2">
      <topicdata name="IHash" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.IHash`2" />
      <apidata name="IHash" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.bucket_count" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.clear" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.count(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IHash`2.erase">
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(`0)" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.hash_delegate" />
        <element api="Overload:Microsoft.VisualC.StlClr.IHash`2.insert">
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.key_comp" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.load_factor" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IHash`2.max_load_factor">
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.size" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.value_comp" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_IHash`2" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.IHash`2">
      <topicdata name="IHash" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.IHash`2" />
      <apidata name="IHash" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.bucket_count" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.clear" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.count(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IHash`2.erase">
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(`0)" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.hash_delegate" />
        <element api="Overload:Microsoft.VisualC.StlClr.IHash`2.insert">
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.key_comp" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.load_factor" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IHash`2.max_load_factor">
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.size" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.value_comp" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_IHash`2" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IHash`2.erase">
      <topicdata name="erase" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IHash`2" />
      <apidata name="erase" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_IHash`2_erase" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IHash`2.insert">
      <topicdata name="insert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IHash`2" />
      <apidata name="insert" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_IHash`2_insert" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IHash`2.max_load_factor">
      <topicdata name="max_load_factor" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IHash`2" />
      <apidata name="max_load_factor" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_IHash`2_max_load_factor" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)">
      <topicdata group="api" />
      <apidata name="begin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_begin_1_5a5696e1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.bucket_count">
      <topicdata group="api" />
      <apidata name="bucket_count" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_bucket_count" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.clear">
      <topicdata group="api" />
      <apidata name="clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_clear" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.count(`0)">
      <topicdata group="api" />
      <apidata name="count" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_count_1_1a965722" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.empty">
      <topicdata group="api" />
      <apidata name="empty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_empty" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)">
      <topicdata group="api" />
      <apidata name="end" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_end_1_5a5696e1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)">
      <topicdata group="api" />
      <apidata name="equal_range" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true">
              <specialization>
                <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
                  </specialization>
                </type>
                <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_equal_range_3_5b767ace" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_erase_2_98055343" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_First_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Last_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_erase_3_3b7da238" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.erase(`0)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_erase_1_1a965722" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <topicdata group="api" />
      <apidata name="find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_find_2_b4b7b4db" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.hash_delegate">
      <topicdata group="api" />
      <apidata name="hash_delegate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.UnaryDelegate`2" ref="true">
          <specialization>
            <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_hash_delegate" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_insert_3_3bc5e413" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_insert_2_c2025ea7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true">
              <specialization>
                <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
                  </specialization>
                </type>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_insert_3_af5ce747" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_insert_1_2fa4d2ad" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.key_comp">
      <topicdata group="api" />
      <apidata name="key_comp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" ref="true">
          <specialization>
            <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_key_comp" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.load_factor">
      <topicdata group="api" />
      <apidata name="load_factor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_load_factor" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <topicdata group="api" />
      <apidata name="lower_bound" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_lower_bound_2_b4b7b4db" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor">
      <topicdata group="api" />
      <apidata name="max_load_factor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.max_load_factor" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_max_load_factor" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)">
      <topicdata group="api" />
      <apidata name="max_load_factor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.max_load_factor" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Newmax">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_max_load_factor_1_12c89377" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)">
      <topicdata group="api" />
      <apidata name="rbegin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_rbegin_1_76eded65" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)">
      <topicdata group="api" />
      <apidata name="rehash" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Buckets">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_rehash_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)">
      <topicdata group="api" />
      <apidata name="rend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_rend_1_76eded65" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.size">
      <topicdata group="api" />
      <apidata name="size" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_size" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash{`0,`1})">
      <topicdata group="api" />
      <apidata name="swap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_swap_2_6336ff44" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <topicdata group="api" />
      <apidata name="upper_bound" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_upper_bound_2_b4b7b4db" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.value_comp">
      <topicdata group="api" />
      <apidata name="value_comp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IHash`2_value_comp" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.IList`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="IList" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
          </specialization>
        </type>
        <type api="T:System.ICloneable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_IList`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.IList`1">
      <topicdata name="IList" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="IList" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.assign">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.back" />
        <element api="P:Microsoft.VisualC.StlClr.IList`1.back_item" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.clear" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.erase">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.front" />
        <element api="P:Microsoft.VisualC.StlClr.IList`1.front_item" />
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.insert">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.pop_back" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.pop_front" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.push_back(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.push_front(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.remove(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.remove_if(Microsoft.VisualC.StlClr.UnaryDelegate{`0,System.Boolean})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.resize">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.reverse" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.size" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})" />
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.splice">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_IList`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.IList`1">
      <topicdata name="IList" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="IList" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.assign">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.back" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.clear" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.erase">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.front" />
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.insert">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.pop_back" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.pop_front" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.push_back(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.push_front(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.remove(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.remove_if(Microsoft.VisualC.StlClr.UnaryDelegate{`0,System.Boolean})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.resize">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.reverse" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.size" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})" />
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.splice">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_IList`1" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.IList`1">
      <topicdata name="IList" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="IList" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.IList`1.back_item" />
        <element api="P:Microsoft.VisualC.StlClr.IList`1.front_item" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_IList`1" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IList`1.assign">
      <topicdata name="assign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="assign" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_IList`1_assign" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IList`1.erase">
      <topicdata name="erase" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="erase" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_IList`1_erase" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IList`1.insert">
      <topicdata name="insert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="insert" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_IList`1_insert" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IList`1.resize">
      <topicdata name="resize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="resize" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_IList`1_resize" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IList`1.splice">
      <topicdata name="splice" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="splice" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_IList`1_splice" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_assign_2_b1d2bb3b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_assign_1_2fa4d2ad" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_assign_2_f5a71668" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.back">
      <topicdata group="api" />
      <apidata name="back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_back" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IList`1.back_item">
      <topicdata group="api" />
      <apidata name="back_item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_IList`1_back_item" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="begin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_begin_1_b7af2246" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.clear">
      <topicdata group="api" />
      <apidata name="clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_clear" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.empty">
      <topicdata group="api" />
      <apidata name="empty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_empty" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="end" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_end_1_b7af2246" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_erase_2_16c499aa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_First_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Last_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_erase_3_e629c46d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.front">
      <topicdata group="api" />
      <apidata name="front" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_front" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IList`1.front_item">
      <topicdata group="api" />
      <apidata name="front_item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_IList`1_front_item" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_insert_3_9a809989" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_insert_3_e9836e98" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_insert_2_6bcbe92c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_insert_3_dee37658" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="merge" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Pred">
          <type api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_merge_4_034783f9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.pop_back">
      <topicdata group="api" />
      <apidata name="pop_back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_pop_back" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.pop_front">
      <topicdata group="api" />
      <apidata name="pop_front" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_pop_front" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.push_back(`0)">
      <topicdata group="api" />
      <apidata name="push_back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_push_back_1_1a965722" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.push_front(`0)">
      <topicdata group="api" />
      <apidata name="push_front" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_push_front_1_1a965722" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="rbegin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_rbegin_1_76eded66" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.remove(`0)">
      <topicdata group="api" />
      <apidata name="remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_remove_1_1a965722" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.remove_if(Microsoft.VisualC.StlClr.UnaryDelegate{`0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="remove_if" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Pred">
          <type api="T:Microsoft.VisualC.StlClr.UnaryDelegate`2" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_remove_if_2_02e8eb03" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="rend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_rend_1_76eded66" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)">
      <topicdata group="api" />
      <apidata name="resize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.resize" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Newsize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_resize_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="resize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.resize" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Newsize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_resize_2_f5a71668" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.reverse">
      <topicdata group="api" />
      <apidata name="reverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_reverse" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.size">
      <topicdata group="api" />
      <apidata name="size" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_size" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="sort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Pred">
          <type api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_sort_3_68a0afaf" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})">
      <topicdata group="api" />
      <apidata name="splice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.splice" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_splice_2_c917173a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="splice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.splice" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_splice_3_3c51ac8a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="splice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.splice" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_splice_4_722bd6f3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})">
      <topicdata group="api" />
      <apidata name="swap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_swap_1_495f10f5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="unique" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Pred">
          <type api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IList`1_unique_3_68a0afaf" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.IPriorityQueue`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
      <apidata name="IPriorityQueue" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_IPriorityQueue`2" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.IPriorityQueue`2">
      <topicdata name="IPriorityQueue" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
      <apidata name="IPriorityQueue" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.get_container" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.pop" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.size" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.top" />
        <element api="P:Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp" />
        <element api="M:System.ICloneable.Clone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_IPriorityQueue`2" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.IPriorityQueue`2">
      <topicdata name="IPriorityQueue" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
      <apidata name="IPriorityQueue" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.get_container" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.pop" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.size" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.top" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp" />
        <element api="M:System.ICloneable.Clone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_IPriorityQueue`2" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.IPriorityQueue`2">
      <topicdata name="IPriorityQueue" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
      <apidata name="IPriorityQueue" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_IPriorityQueue`2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue{`0,`1})">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
              <template name="TCont" index="1" api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IPriorityQueue`2_assign_2_576e1d28" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.empty">
      <topicdata group="api" />
      <apidata name="empty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IPriorityQueue`2_empty" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.get_container">
      <topicdata group="api" />
      <apidata name="get_container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <template name="TCont" index="1" api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IPriorityQueue`2_get_container" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.pop">
      <topicdata group="api" />
      <apidata name="pop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IPriorityQueue`2_pop" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)">
      <topicdata group="api" />
      <apidata name="push" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IPriorityQueue`2_push_1_1a965722" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.size">
      <topicdata group="api" />
      <apidata name="size" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IPriorityQueue`2_size" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.top">
      <topicdata group="api" />
      <apidata name="top" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IPriorityQueue`2_top" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item">
      <topicdata group="api" />
      <apidata name="top_item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_IPriorityQueue`2_top_item" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp">
      <topicdata group="api" />
      <apidata name="value_comp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IPriorityQueue`2_value_comp" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.IQueue`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IQueue`2" />
      <apidata name="IQueue" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_IQueue`2" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.IQueue`2">
      <topicdata name="IQueue" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.IQueue`2" />
      <apidata name="IQueue" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.assign(Microsoft.VisualC.StlClr.IQueue{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.back" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.front" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.get_container" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.pop" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.push(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.size" />
        <element api="M:System.ICloneable.Clone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_IQueue`2" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.IQueue`2">
      <topicdata name="IQueue" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.IQueue`2" />
      <apidata name="IQueue" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.assign(Microsoft.VisualC.StlClr.IQueue{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.back" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.front" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.get_container" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.pop" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.push(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.size" />
        <element api="M:System.ICloneable.Clone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_IQueue`2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IQueue`2.assign(Microsoft.VisualC.StlClr.IQueue{`0,`1})">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IQueue`2" />
              <template name="TCont" index="1" api="T:Microsoft.VisualC.StlClr.IQueue`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IQueue`2_assign_2_3b46808c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IQueue`2.back">
      <topicdata group="api" />
      <apidata name="back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IQueue`2" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IQueue`2_back" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IQueue`2.empty">
      <topicdata group="api" />
      <apidata name="empty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IQueue`2_empty" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IQueue`2.front">
      <topicdata group="api" />
      <apidata name="front" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IQueue`2" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IQueue`2_front" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IQueue`2.get_container">
      <topicdata group="api" />
      <apidata name="get_container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <template name="TCont" index="1" api="T:Microsoft.VisualC.StlClr.IQueue`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IQueue`2_get_container" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IQueue`2.pop">
      <topicdata group="api" />
      <apidata name="pop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IQueue`2_pop" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IQueue`2.push(`0)">
      <topicdata group="api" />
      <apidata name="push" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IQueue`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IQueue`2_push_1_1a965722" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IQueue`2.size">
      <topicdata group="api" />
      <apidata name="size" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IQueue`2_size" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.IStack`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IStack`2" />
      <apidata name="IStack" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_IStack`2" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.IStack`2">
      <topicdata name="IStack" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.IStack`2" />
      <apidata name="IStack" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.assign(Microsoft.VisualC.StlClr.IStack{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.get_container" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.pop" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.push(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.size" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.top" />
        <element api="P:Microsoft.VisualC.StlClr.IStack`2.top_item" />
        <element api="M:System.ICloneable.Clone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_IStack`2" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.IStack`2">
      <topicdata name="IStack" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.IStack`2" />
      <apidata name="IStack" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.assign(Microsoft.VisualC.StlClr.IStack{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.get_container" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.pop" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.push(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.size" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.top" />
        <element api="M:System.ICloneable.Clone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_IStack`2" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.IStack`2">
      <topicdata name="IStack" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.IStack`2" />
      <apidata name="IStack" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.IStack`2.top_item" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_IStack`2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IStack`2.assign(Microsoft.VisualC.StlClr.IStack{`0,`1})">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IStack`2" />
              <template name="TCont" index="1" api="T:Microsoft.VisualC.StlClr.IStack`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IStack`2_assign_2_ac35380c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IStack`2.empty">
      <topicdata group="api" />
      <apidata name="empty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IStack`2_empty" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IStack`2.get_container">
      <topicdata group="api" />
      <apidata name="get_container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <template name="TCont" index="1" api="T:Microsoft.VisualC.StlClr.IStack`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IStack`2_get_container" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IStack`2.pop">
      <topicdata group="api" />
      <apidata name="pop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IStack`2_pop" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IStack`2.push(`0)">
      <topicdata group="api" />
      <apidata name="push" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IStack`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IStack`2_push_1_1a965722" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IStack`2.size">
      <topicdata group="api" />
      <apidata name="size" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IStack`2_size" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IStack`2.top">
      <topicdata group="api" />
      <apidata name="top" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IStack`2" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IStack`2_top" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IStack`2.top_item">
      <topicdata group="api" />
      <apidata name="top_item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IStack`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_IStack`2_top_item" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.ITree`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.ITree`2" />
      <apidata name="ITree" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
          </specialization>
        </type>
        <type api="T:System.ICloneable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_ITree`2" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.ITree`2">
      <topicdata name="ITree" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.ITree`2" />
      <apidata name="ITree" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.clear" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.count(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)" />
        <element api="Overload:Microsoft.VisualC.StlClr.ITree`2.erase">
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(`0)" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="Overload:Microsoft.VisualC.StlClr.ITree`2.insert">
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.key_comp" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.size" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.value_comp" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_ITree`2" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.ITree`2">
      <topicdata name="ITree" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.ITree`2" />
      <apidata name="ITree" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.clear" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.count(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)" />
        <element api="Overload:Microsoft.VisualC.StlClr.ITree`2.erase">
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(`0)" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="Overload:Microsoft.VisualC.StlClr.ITree`2.insert">
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.key_comp" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.size" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.value_comp" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_ITree`2" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.ITree`2.erase">
      <topicdata name="erase" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.ITree`2" />
      <apidata name="erase" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_ITree`2_erase" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.ITree`2.insert">
      <topicdata name="insert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.ITree`2" />
      <apidata name="insert" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_ITree`2_insert" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)">
      <topicdata group="api" />
      <apidata name="begin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_begin_1_5a5696e1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.clear">
      <topicdata group="api" />
      <apidata name="clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_clear" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.count(`0)">
      <topicdata group="api" />
      <apidata name="count" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_count_1_1a965722" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.empty">
      <topicdata group="api" />
      <apidata name="empty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_empty" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)">
      <topicdata group="api" />
      <apidata name="end" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_end_1_5a5696e1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)">
      <topicdata group="api" />
      <apidata name="equal_range" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true">
              <specialization>
                <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
                  </specialization>
                </type>
                <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_equal_range_3_5b767ace" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.ITree`2.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_erase_2_98055343" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.ITree`2.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_First_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Last_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_erase_3_3b7da238" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.erase(`0)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.ITree`2.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_erase_1_1a965722" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <topicdata group="api" />
      <apidata name="find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_find_2_b4b7b4db" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.ITree`2.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_insert_3_3bc5e413" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.ITree`2.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_insert_2_c2025ea7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.ITree`2.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true">
              <specialization>
                <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
                  </specialization>
                </type>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_insert_3_af5ce747" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.ITree`2.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_insert_1_70e3ec3f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.key_comp">
      <topicdata group="api" />
      <apidata name="key_comp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" ref="true">
          <specialization>
            <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_key_comp" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <topicdata group="api" />
      <apidata name="lower_bound" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_lower_bound_2_b4b7b4db" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)">
      <topicdata group="api" />
      <apidata name="rbegin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_rbegin_1_76eded65" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)">
      <topicdata group="api" />
      <apidata name="rend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_rend_1_76eded65" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.size">
      <topicdata group="api" />
      <apidata name="size" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_size" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})">
      <topicdata group="api" />
      <apidata name="swap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_swap_2_1192d387" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <topicdata group="api" />
      <apidata name="upper_bound" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_upper_bound_2_b4b7b4db" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.value_comp">
      <topicdata group="api" />
      <apidata name="value_comp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ITree`2_value_comp" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.IVector`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IVector`1" />
      <apidata name="IVector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
          </specialization>
        </type>
        <type api="T:System.ICloneable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_IVector`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.IVector`1">
      <topicdata name="IVector" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.IVector`1" />
      <apidata name="IVector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.IVector`1.assign">
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.back" />
        <element api="P:Microsoft.VisualC.StlClr.IVector`1.back_item" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.capacity" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.clear" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IVector`1.erase">
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.front" />
        <element api="P:Microsoft.VisualC.StlClr.IVector`1.front_item" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.get_generation" />
        <element api="Overload:Microsoft.VisualC.StlClr.IVector`1.insert">
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
        </element>
        <element api="P:Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.pop_back" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.push_back(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IVector`1.resize">
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.size" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_IVector`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.IVector`1">
      <topicdata name="IVector" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.IVector`1" />
      <apidata name="IVector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.IVector`1.assign">
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.back" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.capacity" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.clear" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IVector`1.erase">
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.front" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.get_generation" />
        <element api="Overload:Microsoft.VisualC.StlClr.IVector`1.insert">
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.pop_back" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.push_back(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IVector`1.resize">
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.size" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_IVector`1" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.IVector`1">
      <topicdata name="IVector" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.IVector`1" />
      <apidata name="IVector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.IVector`1.back_item" />
        <element api="P:Microsoft.VisualC.StlClr.IVector`1.front_item" />
        <element api="P:Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_IVector`1" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IVector`1.assign">
      <topicdata name="assign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IVector`1" />
      <apidata name="assign" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_IVector`1_assign" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IVector`1.erase">
      <topicdata name="erase" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IVector`1" />
      <apidata name="erase" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_IVector`1_erase" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IVector`1.insert">
      <topicdata name="insert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IVector`1" />
      <apidata name="insert" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_IVector`1_insert" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IVector`1.resize">
      <topicdata name="resize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IVector`1" />
      <apidata name="resize" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_IVector`1_resize" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_assign_2_b1d2bb3b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_assign_1_2fa4d2ad" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_assign_2_f5a71668" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)">
      <topicdata group="api" />
      <apidata name="at" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_at_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.back">
      <topicdata group="api" />
      <apidata name="back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_back" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IVector`1.back_item">
      <topicdata group="api" />
      <apidata name="back_item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_IVector`1_back_item" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="begin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_begin_1_decf4ebf" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.capacity">
      <topicdata group="api" />
      <apidata name="capacity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_capacity" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.clear">
      <topicdata group="api" />
      <apidata name="clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_clear" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.empty">
      <topicdata group="api" />
      <apidata name="empty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_empty" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="end" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_end_1_decf4ebf" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_erase_2_c511ea1f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_First_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Last_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_erase_3_efcecd8e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.front">
      <topicdata group="api" />
      <apidata name="front" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_front" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IVector`1.front_item">
      <topicdata group="api" />
      <apidata name="front_item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_IVector`1_front_item" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.get_generation">
      <topicdata group="api" />
      <apidata name="get_generation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.UInt32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsLong" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_get_generation" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_insert_3_beaf5cae" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_insert_3_349a9f19" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_insert_2_3ed7394f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_insert_3_56925269" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="_Pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_IVector`1_Item_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.pop_back">
      <topicdata group="api" />
      <apidata name="pop_back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_pop_back" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.push_back(`0)">
      <topicdata group="api" />
      <apidata name="push_back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_push_back_1_1a965722" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="rbegin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_rbegin_1_955019f0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="rend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_rend_1_955019f0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)">
      <topicdata group="api" />
      <apidata name="reserve" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_reserve_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)">
      <topicdata group="api" />
      <apidata name="resize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.resize" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Newsize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_resize_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="resize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.resize" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Newsize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_resize_2_f5a71668" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.size">
      <topicdata group="api" />
      <apidata name="size" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_size" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector{`0})">
      <topicdata group="api" />
      <apidata name="swap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_IVector`1_swap_1_e2773912" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.ListEnumerator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
      <apidata name="ListEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_ListEnumerator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.ListEnumerator`1">
      <topicdata name="ListEnumerator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
      <apidata name="ListEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})" />
        <element api="P:Microsoft.VisualC.StlClr.ListEnumerator`1.Current" />
        <element api="Overload:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_ListEnumerator`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.ListEnumerator`1">
      <topicdata name="ListEnumerator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
      <apidata name="ListEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_ListEnumerator`1" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.ListEnumerator`1">
      <topicdata name="ListEnumerator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
      <apidata name="ListEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.ListEnumerator`1.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_ListEnumerator`1" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose" />
        <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_ListEnumerator`1_Dispose" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ListEnumerator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_ListEnumerator`1_ctor_1_fe4b3d21" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.ListEnumerator`1.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_ListEnumerator`1_Current" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose" />
      <proceduredata virtual="true" final="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ListEnumerator`1_Dispose" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ListEnumerator`1_Dispose_1_36d384f7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ListEnumerator`1.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.MoveNext">
          <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ListEnumerator`1_MoveNext" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Reset">
          <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ListEnumerator`1_Reset" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" />
      <apidata name="ListEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_ListEnumeratorBase`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1">
      <topicdata name="ListEnumeratorBase" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" />
      <apidata name="ListEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})" />
        <element api="P:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Current" />
        <element api="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_ListEnumeratorBase`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1">
      <topicdata name="ListEnumeratorBase" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" />
      <apidata name="ListEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_ListEnumeratorBase`1" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1">
      <topicdata name="ListEnumeratorBase" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" />
      <apidata name="ListEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_ListEnumeratorBase`1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_ListEnumeratorBase`1_ctor_1_fe4b3d21" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IEnumerator.Current">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_ListEnumeratorBase`1_Current" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ListEnumeratorBase`1_MoveNext" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_ListEnumeratorBase`1_Reset" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.TreeEnumerator`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
      <apidata name="TreeEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_TreeEnumerator`2" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.TreeEnumerator`2">
      <topicdata name="TreeEnumerator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
      <apidata name="TreeEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})" />
        <element api="P:Microsoft.VisualC.StlClr.TreeEnumerator`2.Current" />
        <element api="Overload:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_TreeEnumerator`2" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.TreeEnumerator`2">
      <topicdata name="TreeEnumerator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
      <apidata name="TreeEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_TreeEnumerator`2" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.TreeEnumerator`2">
      <topicdata name="TreeEnumerator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
      <apidata name="TreeEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.TreeEnumerator`2.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_TreeEnumerator`2" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose" />
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_TreeEnumerator`2_Dispose" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_TreeEnumerator`2_ctor_1_5ba3c886" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.TreeEnumerator`2.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_TreeEnumerator`2_Current" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose" />
      <proceduredata virtual="true" final="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_TreeEnumerator`2_Dispose" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_TreeEnumerator`2_Dispose_1_36d384f7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.MoveNext">
          <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
            </specialization>
          </type>
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_TreeEnumerator`2_MoveNext" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Reset">
          <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
            </specialization>
          </type>
        </member>
      </overrides>
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_TreeEnumerator`2_Reset" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" />
      <apidata name="TreeEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_TreeEnumeratorBase`2" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2">
      <topicdata name="TreeEnumeratorBase" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" />
      <apidata name="TreeEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})" />
        <element api="P:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Current" />
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_TreeEnumeratorBase`2" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2">
      <topicdata name="TreeEnumeratorBase" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" />
      <apidata name="TreeEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_TreeEnumeratorBase`2" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2">
      <topicdata name="TreeEnumeratorBase" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" />
      <apidata name="TreeEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_TreeEnumeratorBase`2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_TreeEnumeratorBase`2_ctor_1_5ba3c886" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IEnumerator.Current">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_TreeEnumeratorBase`2_Current" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_TreeEnumeratorBase`2_MoveNext" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_TreeEnumeratorBase`2_Reset" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.UnaryDelegate`2">
      <topicdata group="api" />
      <apidata name="UnaryDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TArg" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="">
          <template name="TArg" index="0" api="T:Microsoft.VisualC.StlClr.UnaryDelegate`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="1" api="T:Microsoft.VisualC.StlClr.UnaryDelegate`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_UnaryDelegate`2" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.VectorEnumerator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
      <apidata name="VectorEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_VectorEnumerator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.VectorEnumerator`1">
      <topicdata name="VectorEnumerator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
      <apidata name="VectorEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IVector{`0},System.Int32)" />
        <element api="P:Microsoft.VisualC.StlClr.VectorEnumerator`1.Current" />
        <element api="Overload:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_VectorEnumerator`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.VectorEnumerator`1">
      <topicdata name="VectorEnumerator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
      <apidata name="VectorEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_VectorEnumerator`1" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.VectorEnumerator`1">
      <topicdata name="VectorEnumerator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
      <apidata name="VectorEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.VectorEnumerator`1.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_VectorEnumerator`1" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose" />
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_VectorEnumerator`1_Dispose" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IVector{`0},System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_Cont">
          <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_VectorEnumerator`1_ctor_2_3c5d451c" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.VectorEnumerator`1.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_VectorEnumerator`1_Current" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose" />
      <proceduredata virtual="true" final="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_VectorEnumerator`1_Dispose" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_VectorEnumerator`1_Dispose_1_36d384f7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.MoveNext">
          <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_VectorEnumerator`1_MoveNext" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Reset">
          <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_VectorEnumerator`1_Reset" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" />
      <apidata name="VectorEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_VectorEnumeratorBase`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1">
      <topicdata name="VectorEnumeratorBase" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" />
      <apidata name="VectorEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.IVector{`0},System.Int32)" />
        <element api="P:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Current" />
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_VectorEnumeratorBase`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1">
      <topicdata name="VectorEnumeratorBase" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" />
      <apidata name="VectorEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_VectorEnumeratorBase`1" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1">
      <topicdata name="VectorEnumeratorBase" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" />
      <apidata name="VectorEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_VectorEnumeratorBase`1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.IVector{`0},System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_Cont">
          <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_VectorEnumeratorBase`1_ctor_2_3c5d451c" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IEnumerator.Current">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_VectorEnumeratorBase`1_Current" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_VectorEnumeratorBase`1_MoveNext" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_VectorEnumeratorBase`1_Reset" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="ConstContainerBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1">
      <topicdata name="ConstContainerBidirectionalIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="ConstContainerBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_ref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1">
      <topicdata name="ConstContainerBidirectionalIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="ConstContainerBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_ref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_ctor" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to">
      <topicdata name="equal_to" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_equal_to" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign">
      <topicdata name="Assign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_Assign" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_Decrement" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality">
      <topicdata name="Equality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_Equality" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_Increment" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality">
      <topicdata name="Inequality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_Inequality" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_ctor" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Node">
          <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_ctor_1_fe4b3d21" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_ctor_1_ce21c09d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_ctor_1_4e4b3db6" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_Clone" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_container" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_equal_to_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_equal_to_1_f9cbf75e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_get_bias" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_get_cref" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_get_node" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_get_ref" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_next" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_Assign_1_f9cbf75e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_Assign_1_94448d96" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_Decrement_1_e0b5e842" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_Decrement_2_37ed2b2b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_Equality_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_Equality_1_f9cbf75e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_Implicit~Microsoft_VisualC_StlClr_Generic_IBidirectionalIterator{`0}" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_Increment_1_e0b5e842" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_Increment_2_37ed2b2b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_Inequality_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_Inequality_1_f9cbf75e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="MemberSelection" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_MemberSelection_1_f9cbf75e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="PointerDereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_op_PointerDereference_1_f9cbf75e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_prev" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerBidirectionalIterator`1_valid" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="ConstContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1">
      <topicdata name="ConstContainerRandomAccessIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="ConstContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_ref" />
        <element api="P:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Item(System.Int32)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.move(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1">
      <topicdata name="ConstContainerRandomAccessIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="ConstContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_ref" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.move(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1">
      <topicdata name="ConstContainerRandomAccessIterator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="ConstContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_ctor" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance">
      <topicdata name="distance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="distance" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_distance" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to">
      <topicdata name="equal_to" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_equal_to" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than">
      <topicdata name="less_than" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="less_than" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_less_than" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition">
      <topicdata name="Addition" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Addition" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign">
      <topicdata name="Assign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Assign" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Decrement" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality">
      <topicdata name="Equality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Equality" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan">
      <topicdata name="GreaterThan" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_GreaterThan" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual">
      <topicdata name="GreaterThanOrEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_GreaterThanOrEqual" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Increment" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality">
      <topicdata name="Inequality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Inequality" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan">
      <topicdata name="LessThan" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_LessThan" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual">
      <topicdata name="LessThanOrEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_LessThanOrEqual" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction">
      <topicdata name="Subtraction" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Subtraction" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_ctor" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Cont">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_ctor_2_e44b3d01" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_ctor_1_54f8522f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_ctor_1_57ad1547" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_Clone" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_container" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_distance_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_distance_1_dbe03f17" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_equal_to_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_equal_to_1_dbe03f17" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_get_bias" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_get_cref" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_get_node" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_get_ref" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="_Pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_Item_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_less_than_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_less_than_1_dbe03f17" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.move(System.Int32)">
      <topicdata group="api" />
      <apidata name="move" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_move_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_next" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Addition_2_2f97c226" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Left">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Addition_3_6fd2e637" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Assign_1_dbe03f17" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Assign_1_fe614d14" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Decrement_1_71eceaea" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Decrement_2_2f97c226" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Equality_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Equality_1_dbe03f17" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_GreaterThan_2_0a015759" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_GreaterThan_1_dbe03f17" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_GreaterThanOrEqual_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_GreaterThanOrEqual_1_dbe03f17" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Implicit~Microsoft_VisualC_StlClr_Generic_IRandomAccessIterator{`0}" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Increment_1_71eceaea" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Increment_2_2f97c226" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Inequality_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Inequality_1_dbe03f17" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_LessThan_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_LessThan_1_dbe03f17" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_LessThanOrEqual_2_0a015759" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_LessThanOrEqual_1_dbe03f17" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="MemberSelection" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_MemberSelection_1_dbe03f17" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="PointerDereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_PointerDereference_1_dbe03f17" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Subtraction_2_2f97c226" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_op_Subtraction_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_prev" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstContainerRandomAccessIterator`1_valid" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="ConstReverseBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1">
      <topicdata name="ConstReverseBidirectionalIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="ConstReverseBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.base" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_ref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1">
      <topicdata name="ConstReverseBidirectionalIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="ConstReverseBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.base" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_ref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_ctor" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to">
      <topicdata name="equal_to" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_equal_to" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign">
      <topicdata name="Assign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_Assign" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_Decrement" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality">
      <topicdata name="Equality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_Equality" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_Increment" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality">
      <topicdata name="Inequality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_Inequality" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_ctor" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_ctor_1_7acbdd42" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_ctor_1_ed868e06" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_ctor_1_ce4ab2f8" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.base">
      <topicdata group="api" />
      <apidata name="base" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_base" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_Clone" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_container" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_equal_to_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_equal_to_1_aba7f8d4" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_get_bias" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_get_cref" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_get_node" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_get_ref" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_next" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_Assign_1_aba7f8d4" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_Assign_1_74b50816" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_Decrement_1_697aaa98" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_Decrement_2_dd7be72b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_Equality_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_Equality_1_aba7f8d4" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_Implicit~Microsoft_VisualC_StlClr_Generic_IBidirectionalIterator{`0}" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_Increment_1_697aaa98" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_Increment_2_dd7be72b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_Inequality_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_Inequality_1_aba7f8d4" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="MemberSelection" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_MemberSelection_1_aba7f8d4" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="PointerDereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_op_PointerDereference_1_aba7f8d4" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_prev" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseBidirectionalIterator`1_valid" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="ConstReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1">
      <topicdata name="ConstReverseRandomAccessIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="ConstReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.base" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_ref" />
        <element api="P:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Item(System.Int32)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.move(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1">
      <topicdata name="ConstReverseRandomAccessIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="ConstReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.base" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_ref" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.move(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1">
      <topicdata name="ConstReverseRandomAccessIterator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="ConstReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_ctor" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance">
      <topicdata name="distance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="distance" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_distance" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to">
      <topicdata name="equal_to" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_equal_to" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than">
      <topicdata name="less_than" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="less_than" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_less_than" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition">
      <topicdata name="Addition" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Addition" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign">
      <topicdata name="Assign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Assign" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Decrement" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Increment" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction">
      <topicdata name="Subtraction" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Subtraction" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_ctor" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_ctor_1_7c28185b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_ctor_1_16e30fef" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_ctor_1_080dca80" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.base">
      <topicdata group="api" />
      <apidata name="base" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_base" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_Clone" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_container" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_distance_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_distance_1_a9090b1e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_equal_to_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_equal_to_1_a9090b1e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_get_bias" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_get_cref" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_get_node" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_get_ref" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="_Pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_Item_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_less_than_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_less_than_1_a9090b1e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.move(System.Int32)">
      <topicdata group="api" />
      <apidata name="move" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_move_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_next" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Addition_2_41303133" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Left">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Addition_3_f860844e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Assign_1_a9090b1e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Assign_1_83280d0a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Decrement_1_4bfa1eb0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Decrement_2_41303133" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Equality_1_a9090b1e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_GreaterThan_1_a9090b1e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_GreaterThanOrEqual_1_a9090b1e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Implicit~Microsoft_VisualC_StlClr_Generic_IRandomAccessIterator{`0}" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Increment_1_4bfa1eb0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Increment_2_41303133" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Inequality_1_a9090b1e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_LessThan_1_a9090b1e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_LessThanOrEqual_1_a9090b1e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="MemberSelection" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_MemberSelection_1_a9090b1e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="PointerDereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_PointerDereference_1_a9090b1e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Subtraction_2_41303133" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_op_Subtraction_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_prev" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ConstReverseRandomAccessIterator`1_valid" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="ContainerBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1">
      <topicdata name="ContainerBidirectionalIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="ContainerBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_ref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1">
      <topicdata name="ContainerBidirectionalIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="ContainerBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_ref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_ctor" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to">
      <topicdata name="equal_to" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_equal_to" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_op_Decrement" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality">
      <topicdata name="Equality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_op_Equality" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_op_Increment" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality">
      <topicdata name="Inequality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_op_Inequality" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_ctor" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Node">
          <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_ctor_1_fe4b3d21" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_ctor_1_4e4b3db6" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_Clone" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_container" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_equal_to_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_equal_to_1_94448d96" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_get_bias" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_get_cref" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_get_node" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_get_ref" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_next" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_op_Assign_1_94448d96" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_op_Decrement_1_b7af2246" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_op_Decrement_2_49fa8fb3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_op_Equality_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_op_Equality_1_94448d96" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_op_Implicit~Microsoft_VisualC_StlClr_Generic_IBidirectionalIterator{`0}" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_op_Increment_1_b7af2246" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_op_Increment_2_49fa8fb3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_op_Inequality_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_op_Inequality_1_94448d96" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="MemberSelection" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_op_MemberSelection_1_94448d96" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="PointerDereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_op_PointerDereference_1_94448d96" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_prev" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerBidirectionalIterator`1_valid" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="ContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1">
      <topicdata name="ContainerRandomAccessIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="ContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_ref" />
        <element api="P:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1">
      <topicdata name="ContainerRandomAccessIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="ContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_ref" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1">
      <topicdata name="ContainerRandomAccessIterator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="ContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_ctor" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance">
      <topicdata name="distance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="distance" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_distance" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to">
      <topicdata name="equal_to" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_equal_to" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than">
      <topicdata name="less_than" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="less_than" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_less_than" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition">
      <topicdata name="Addition" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Addition" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Decrement" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality">
      <topicdata name="Equality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Equality" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan">
      <topicdata name="GreaterThan" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_GreaterThan" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual">
      <topicdata name="GreaterThanOrEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_GreaterThanOrEqual" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Increment" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality">
      <topicdata name="Inequality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Inequality" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan">
      <topicdata name="LessThan" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_LessThan" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual">
      <topicdata name="LessThanOrEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_LessThanOrEqual" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction">
      <topicdata name="Subtraction" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Subtraction" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_ctor" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Cont">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_ctor_2_e44b3d01" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_ctor_1_57ad1547" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_Clone" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_container" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_distance_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_distance_1_fe614d14" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_equal_to_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_equal_to_1_fe614d14" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_get_bias" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_get_cref" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_get_node" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_get_ref" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="_Pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_Item_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_less_than_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_less_than_1_fe614d14" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)">
      <topicdata group="api" />
      <apidata name="move" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_move_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_next" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Addition_2_5d86b189" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Left">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Addition_3_fa51b73f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Assign_1_fe614d14" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Decrement_1_decf4ebf" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Decrement_2_5d86b189" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Equality_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Equality_1_fe614d14" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_GreaterThan_2_8d14475e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_GreaterThan_1_fe614d14" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_GreaterThanOrEqual_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_GreaterThanOrEqual_1_fe614d14" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Implicit~Microsoft_VisualC_StlClr_Generic_IRandomAccessIterator{`0}" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Increment_1_decf4ebf" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Increment_2_5d86b189" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Inequality_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Inequality_1_fe614d14" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_LessThan_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_LessThan_1_fe614d14" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_LessThanOrEqual_2_8d14475e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_LessThanOrEqual_1_fe614d14" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="MemberSelection" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_MemberSelection_1_fe614d14" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="PointerDereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_PointerDereference_1_fe614d14" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Subtraction_2_5d86b189" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_op_Subtraction_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_prev" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ContainerRandomAccessIterator`1_valid" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" />
      <apidata name="IBaseIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <implementors>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_IBaseIterator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1">
      <topicdata name="IBaseIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" />
      <apidata name="IBaseIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid" />
        <element api="M:System.ICloneable.Clone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_IBaseIterator`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1">
      <topicdata name="IBaseIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" />
      <apidata name="IBaseIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid" />
        <element api="M:System.ICloneable.Clone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_Generic_IBaseIterator`1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_IBaseIterator`1_container" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_IBaseIterator`1_get_bias" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_IBaseIterator`1_get_node" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_IBaseIterator`1_next" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_IBaseIterator`1_valid" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" />
      <apidata name="IBidirectionalContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <implementors>
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </implementors>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_IBidirectionalContainer`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1">
      <topicdata name="IBidirectionalContainer" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" />
      <apidata name="IBidirectionalContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_IBidirectionalContainer`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1">
      <topicdata name="IBidirectionalContainer" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" />
      <apidata name="IBidirectionalContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_Generic_IBidirectionalContainer`1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation">
      <topicdata group="api" />
      <apidata name="get_generation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.UInt32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsLong" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_IBidirectionalContainer`1_get_generation" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />
      <apidata name="IBidirectionalIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_IBidirectionalIterator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1">
      <topicdata name="IBidirectionalIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />
      <apidata name="IBidirectionalIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_IBidirectionalIterator`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1">
      <topicdata name="IBidirectionalIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />
      <apidata name="IBidirectionalIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_Generic_IBidirectionalIterator`1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_IBidirectionalIterator`1_prev" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" />
      <apidata name="IForwardIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" />
          </specialization>
        </type>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_IForwardIterator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1">
      <topicdata name="IForwardIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" />
      <apidata name="IForwardIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1.get_ref" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_IForwardIterator`1" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
      <apidata name="IInputIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_IInputIterator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1">
      <topicdata name="IInputIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
      <apidata name="IInputIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.get_cref" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_IInputIterator`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1">
      <topicdata name="IInputIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
      <apidata name="IInputIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.get_cref" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_Generic_IInputIterator`1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_IInputIterator`1_equal_to_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_IInputIterator`1_get_cref" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.INode`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.INode`1" />
      <apidata name="INode" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_INode`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.INode`1">
      <topicdata name="INode" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
      <apidata name="INode" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.Generic.INode`1._Value" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.INode`1.container" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.INode`1.is_head" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.INode`1.next_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.INode`1.prev_node" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_INode`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.INode`1">
      <topicdata name="INode" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
      <apidata name="INode" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.INode`1.container" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.INode`1.is_head" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.INode`1.next_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.INode`1.prev_node" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_Generic_INode`1" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.Generic.INode`1">
      <topicdata name="INode" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
      <apidata name="INode" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.Generic.INode`1._Value" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_Generic_INode`1" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.Generic.INode`1._Value">
      <topicdata group="api" />
      <apidata name="_Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_Generic_INode`1__Value" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.INode`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_INode`1_container" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.INode`1.is_head">
      <topicdata group="api" />
      <apidata name="is_head" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_INode`1_is_head" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.INode`1.next_node">
      <topicdata group="api" />
      <apidata name="next_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_INode`1_next_node" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.INode`1.prev_node">
      <topicdata group="api" />
      <apidata name="prev_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_INode`1_prev_node" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" />
      <apidata name="IOutputIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_IOutputIterator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1">
      <topicdata name="IOutputIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" />
      <apidata name="IOutputIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1.get_ref" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_IOutputIterator`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1">
      <topicdata name="IOutputIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" />
      <apidata name="IOutputIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1.get_ref" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_Generic_IOutputIterator`1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_IOutputIterator`1_get_ref" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" />
      <apidata name="IRandomAccessContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <implementors>
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_IRandomAccessContainer`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1">
      <topicdata name="IRandomAccessContainer" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" />
      <apidata name="IRandomAccessContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_IRandomAccessContainer`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1">
      <topicdata name="IRandomAccessContainer" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" />
      <apidata name="IRandomAccessContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_Generic_IRandomAccessContainer`1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)">
      <topicdata group="api" />
      <apidata name="at_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_IRandomAccessContainer`1_at_bias_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)">
      <topicdata group="api" />
      <apidata name="valid_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_IRandomAccessContainer`1_valid_bias_1_cd2d7ec9" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
      <apidata name="IRandomAccessIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_IRandomAccessIterator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1">
      <topicdata name="IRandomAccessIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
      <apidata name="IRandomAccessIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_IRandomAccessIterator`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1">
      <topicdata name="IRandomAccessIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
      <apidata name="IRandomAccessIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_Generic_IRandomAccessIterator`1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_IRandomAccessIterator`1_distance_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_IRandomAccessIterator`1_less_than_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)">
      <topicdata group="api" />
      <apidata name="move" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_IRandomAccessIterator`1_move_1_cd2d7ec9" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="ReverseBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1">
      <topicdata name="ReverseBidirectionalIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="ReverseBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_ref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1">
      <topicdata name="ReverseBidirectionalIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="ReverseBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_ref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_ctor" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to">
      <topicdata name="equal_to" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_equal_to" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_op_Decrement" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality">
      <topicdata name="Equality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_op_Equality" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_op_Increment" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality">
      <topicdata name="Inequality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_op_Inequality" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_ctor" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_ctor_1_7acbdd42" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_ctor_1_ce4ab2f8" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base">
      <topicdata group="api" />
      <apidata name="base" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_base" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_Clone" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_container" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_equal_to_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_equal_to_1_74b50816" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_get_bias" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_get_cref" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_get_node" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_get_ref" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_next" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_op_Assign_1_74b50816" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_op_Decrement_1_76eded66" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_op_Decrement_2_81c501f3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_op_Equality_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_op_Equality_1_74b50816" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_op_Implicit~Microsoft_VisualC_StlClr_Generic_IBidirectionalIterator{`0}" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_op_Increment_1_76eded66" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_op_Increment_2_81c501f3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_op_Inequality_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_op_Inequality_1_74b50816" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="MemberSelection" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_op_MemberSelection_1_74b50816" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="PointerDereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_op_PointerDereference_1_74b50816" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_prev" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator`1_valid" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="ReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="T_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1">
      <topicdata name="ReverseRandomAccessIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="ReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_ref" />
        <element api="P:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item(System.Int32)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="AllMembers_T_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1">
      <topicdata name="ReverseRandomAccessIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="ReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_ref" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Methods_T_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1">
      <topicdata name="ReverseRandomAccessIterator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="ReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="Properties_T_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_ctor" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance">
      <topicdata name="distance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="distance" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_distance" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to">
      <topicdata name="equal_to" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_equal_to" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than">
      <topicdata name="less_than" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="less_than" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_less_than" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition">
      <topicdata name="Addition" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_Addition" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_Decrement" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_Increment" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction">
      <topicdata name="Subtraction" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" />
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="O_T_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_Subtraction" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_ctor" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_ctor_1_7c28185b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="C_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_ctor_1_080dca80" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base">
      <topicdata group="api" />
      <apidata name="base" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_base" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_Clone" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_container" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_distance_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_distance_1_83280d0a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_equal_to_1_236cabaa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_equal_to_1_83280d0a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_get_bias" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_get_cref" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_get_node" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_get_ref" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="_Pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="P_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_Item_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_less_than_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_less_than_1_83280d0a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move(System.Int32)">
      <topicdata group="api" />
      <apidata name="move" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_move_1_cd2d7ec9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_next" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_Addition_2_453274a3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Left">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_Addition_3_c2568f43" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_Assign_1_83280d0a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_Decrement_1_955019f0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_Decrement_2_453274a3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_Equality_1_83280d0a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_GreaterThan_1_83280d0a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_GreaterThanOrEqual_1_83280d0a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_Implicit~Microsoft_VisualC_StlClr_Generic_IRandomAccessIterator{`0}" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_Increment_1_955019f0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_Increment_2_453274a3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_Inequality_1_83280d0a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_LessThan_1_83280d0a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_LessThanOrEqual_1_83280d0a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="MemberSelection" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_MemberSelection_1_83280d0a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="PointerDereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_PointerDereference_1_83280d0a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_Subtraction_1_cae44a78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="param0">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_op_Subtraction_2_453274a3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_prev" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR">
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="M_Microsoft_VisualC_StlClr_Generic_ReverseRandomAccessIterator`1_valid" />
    </api>
  </apis>
</reflection>