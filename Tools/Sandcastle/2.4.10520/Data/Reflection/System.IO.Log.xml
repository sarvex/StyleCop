<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.IO.Log">
      <assemblydata version="3.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>F:\WinFXRed\Tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>3.0.4506.641</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>3.0.4506.641</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>3.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IO.Log.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IO.Log.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IO.Log.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="SkipVerification">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="T:System.IO.Log.FileRecordSequence">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Log.FileRecordSequence" />
      <apidata name="FileRecordSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_FileRecordSequence" />
    </api>
    <api id="AllMembers.T:System.IO.Log.FileRecordSequence">
      <topicdata name="FileRecordSequence" group="list" subgroup="members" typeTopicId="T:System.IO.Log.FileRecordSequence" />
      <apidata name="FileRecordSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IO.Log.FileRecordSequence.#ctor">
          <element api="M:System.IO.Log.FileRecordSequence.#ctor(System.String)" />
          <element api="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess)" />
          <element api="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess,System.Int32)" />
        </element>
        <element api="M:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
        <element api="Overload:System.IO.Log.FileRecordSequence.Append">
          <element api="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
          <element api="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
          <element api="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
          <element api="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
        </element>
        <element api="P:System.IO.Log.FileRecordSequence.BaseSequenceNumber" />
        <element api="Overload:System.IO.Log.FileRecordSequence.BeginAppend">
          <element api="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.IO.Log.FileRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.IO.Log.FileRecordSequence.BeginReserveAndAppend">
          <element api="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.IO.Log.FileRecordSequence.BeginWriteRestartArea">
          <element api="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.IO.Log.FileRecordSequence.CreateReservationCollection" />
        <element api="M:System.IO.Log.FileRecordSequence.Dispose" />
        <element api="M:System.IO.Log.FileRecordSequence.EndAppend(System.IAsyncResult)" />
        <element api="M:System.IO.Log.FileRecordSequence.EndFlush(System.IAsyncResult)" />
        <element api="M:System.IO.Log.FileRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
        <element api="M:System.IO.Log.FileRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
        <element api="Overload:System.IO.Log.FileRecordSequence.Flush">
          <element api="M:System.IO.Log.FileRecordSequence.Flush" />
          <element api="M:System.IO.Log.FileRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
        </element>
        <element api="P:System.IO.Log.FileRecordSequence.LastSequenceNumber" />
        <element api="P:System.IO.Log.FileRecordSequence.MaximumRecordLength" />
        <element api="M:System.IO.Log.FileRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
        <element api="M:System.IO.Log.FileRecordSequence.ReadRestartAreas" />
        <element api="Overload:System.IO.Log.FileRecordSequence.ReserveAndAppend">
          <element api="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
          <element api="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
        </element>
        <element api="P:System.IO.Log.FileRecordSequence.ReservedBytes" />
        <element api="P:System.IO.Log.FileRecordSequence.RestartSequenceNumber" />
        <element api="P:System.IO.Log.FileRecordSequence.RetryAppend" />
        <element api="E:System.IO.Log.FileRecordSequence.TailPinned" />
        <element api="Overload:System.IO.Log.FileRecordSequence.WriteRestartArea">
          <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
          <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
          <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
          <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
          <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
          <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="AllMembers_T_System_IO_Log_FileRecordSequence" />
    </api>
    <api id="Methods.T:System.IO.Log.FileRecordSequence">
      <topicdata name="FileRecordSequence" group="list" subgroup="Methods" typeTopicId="T:System.IO.Log.FileRecordSequence" />
      <apidata name="FileRecordSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
        <element api="Overload:System.IO.Log.FileRecordSequence.Append">
          <element api="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
          <element api="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
          <element api="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
          <element api="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
        </element>
        <element api="Overload:System.IO.Log.FileRecordSequence.BeginAppend">
          <element api="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.IO.Log.FileRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.IO.Log.FileRecordSequence.BeginReserveAndAppend">
          <element api="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.IO.Log.FileRecordSequence.BeginWriteRestartArea">
          <element api="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.IO.Log.FileRecordSequence.CreateReservationCollection" />
        <element api="M:System.IO.Log.FileRecordSequence.Dispose" />
        <element api="M:System.IO.Log.FileRecordSequence.EndAppend(System.IAsyncResult)" />
        <element api="M:System.IO.Log.FileRecordSequence.EndFlush(System.IAsyncResult)" />
        <element api="M:System.IO.Log.FileRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
        <element api="M:System.IO.Log.FileRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
        <element api="Overload:System.IO.Log.FileRecordSequence.Flush">
          <element api="M:System.IO.Log.FileRecordSequence.Flush" />
          <element api="M:System.IO.Log.FileRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
        </element>
        <element api="M:System.IO.Log.FileRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
        <element api="M:System.IO.Log.FileRecordSequence.ReadRestartAreas" />
        <element api="Overload:System.IO.Log.FileRecordSequence.ReserveAndAppend">
          <element api="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
          <element api="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
        </element>
        <element api="Overload:System.IO.Log.FileRecordSequence.WriteRestartArea">
          <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
          <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
          <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
          <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
          <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
          <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Methods_T_System_IO_Log_FileRecordSequence" />
    </api>
    <api id="Properties.T:System.IO.Log.FileRecordSequence">
      <topicdata name="FileRecordSequence" group="list" subgroup="Properties" typeTopicId="T:System.IO.Log.FileRecordSequence" />
      <apidata name="FileRecordSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Log.FileRecordSequence.BaseSequenceNumber" />
        <element api="P:System.IO.Log.FileRecordSequence.LastSequenceNumber" />
        <element api="P:System.IO.Log.FileRecordSequence.MaximumRecordLength" />
        <element api="P:System.IO.Log.FileRecordSequence.ReservedBytes" />
        <element api="P:System.IO.Log.FileRecordSequence.RestartSequenceNumber" />
        <element api="P:System.IO.Log.FileRecordSequence.RetryAppend" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Properties_T_System_IO_Log_FileRecordSequence" />
    </api>
    <api id="Events.T:System.IO.Log.FileRecordSequence">
      <topicdata name="FileRecordSequence" group="list" subgroup="Events" typeTopicId="T:System.IO.Log.FileRecordSequence" />
      <apidata name="FileRecordSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.IO.Log.FileRecordSequence.TailPinned" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Events_T_System_IO_Log_FileRecordSequence" />
    </api>
    <api id="Overload:System.IO.Log.FileRecordSequence.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.FileRecordSequence" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Log.FileRecordSequence.#ctor(System.String)" />
        <element api="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess)" />
        <element api="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_FileRecordSequence_ctor" />
    </api>
    <api id="Overload:System.IO.Log.FileRecordSequence.Append">
      <topicdata name="Append" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.FileRecordSequence" />
      <apidata name="Append" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
        <element api="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
        <element api="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
        <element api="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_FileRecordSequence_Append" />
    </api>
    <api id="Overload:System.IO.Log.FileRecordSequence.BeginAppend">
      <topicdata name="BeginAppend" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.FileRecordSequence" />
      <apidata name="BeginAppend" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_FileRecordSequence_BeginAppend" />
    </api>
    <api id="Overload:System.IO.Log.FileRecordSequence.BeginReserveAndAppend">
      <topicdata name="BeginReserveAndAppend" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.FileRecordSequence" />
      <apidata name="BeginReserveAndAppend" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_FileRecordSequence_BeginReserveAndAppend" />
    </api>
    <api id="Overload:System.IO.Log.FileRecordSequence.BeginWriteRestartArea">
      <topicdata name="BeginWriteRestartArea" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.FileRecordSequence" />
      <apidata name="BeginWriteRestartArea" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_FileRecordSequence_BeginWriteRestartArea" />
    </api>
    <api id="Overload:System.IO.Log.FileRecordSequence.Flush">
      <topicdata name="Flush" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.FileRecordSequence" />
      <apidata name="Flush" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.FileRecordSequence.Flush" />
        <element api="M:System.IO.Log.FileRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_FileRecordSequence_Flush" />
    </api>
    <api id="Overload:System.IO.Log.FileRecordSequence.ReserveAndAppend">
      <topicdata name="ReserveAndAppend" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.FileRecordSequence" />
      <apidata name="ReserveAndAppend" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
        <element api="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_FileRecordSequence_ReserveAndAppend" />
    </api>
    <api id="Overload:System.IO.Log.FileRecordSequence.WriteRestartArea">
      <topicdata name="WriteRestartArea" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.FileRecordSequence" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
        <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
        <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
        <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
        <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
        <element api="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_FileRecordSequence_WriteRestartArea" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.FileRecordSequence.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="C_System_IO_Log_FileRecordSequence_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.FileRecordSequence.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="access">
          <type api="T:System.IO.FileAccess" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="C_System_IO_Log_FileRecordSequence_ctor_2_fedcf259" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.FileRecordSequence.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="access">
          <type api="T:System.IO.FileAccess" ref="false" />
        </parameter>
        <parameter name="size">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="C_System_IO_Log_FileRecordSequence_ctor_3_8be487a7" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="AdvanceBaseSequenceNumber" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="newBaseSequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_AdvanceBaseSequenceNumber_1_2b312b3e" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.Append" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_Append_4_4883359b" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.Append" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservations">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_Append_5_3c827036" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.Append" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_Append_4_2c312946" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.Append" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservations">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_Append_5_2c2e09b2" />
    </api>
    <api id="P:System.IO.Log.FileRecordSequence.BaseSequenceNumber">
      <topicdata group="api" />
      <apidata name="BaseSequenceNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IO.Log.IRecordSequence.BaseSequenceNumber">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_FileRecordSequence_BaseSequenceNumber" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.BeginAppend" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_BeginAppend_6_5eda97c7" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.BeginAppend" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservations">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_BeginAppend_7_120cff1a" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.BeginAppend" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_BeginAppend_6_82a5e004" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.BeginAppend" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservations">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_BeginAppend_7_f171c463" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginFlush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="sequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_BeginFlush_3_3098a1f1" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginReserveAndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.BeginReserveAndAppend" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservationCollection">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="reservations">
          <arrayOf rank="1">
            <type api="T:System.Int64" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_BeginReserveAndAppend_8_fbff063a" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginReserveAndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.BeginReserveAndAppend" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservationCollection">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="reservations">
          <arrayOf rank="1">
            <type api="T:System.Int64" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_BeginReserveAndAppend_8_e8d9fb62" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginWriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.BeginWriteRestartArea" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSeqNum">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="reservation">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_BeginWriteRestartArea_5_8d78055e" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginWriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.BeginWriteRestartArea" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSeqNum">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="reservation">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_BeginWriteRestartArea_5_8b626bca" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.CreateReservationCollection">
      <topicdata group="api" />
      <apidata name="CreateReservationCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.CreateReservationCollection">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_CreateReservationCollection" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_Dispose" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.EndAppend(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_EndAppend_1_35dda1aa" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.EndFlush(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndFlush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_EndFlush_1_35dda1aa" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.EndReserveAndAppend(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndReserveAndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_EndReserveAndAppend_1_35dda1aa" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.EndWriteRestartArea(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndWriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_EndWriteRestartArea_1_35dda1aa" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.Flush" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.Flush">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_Flush" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.Flush(System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.Flush" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="sequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_Flush_1_2b312b3e" />
    </api>
    <api id="P:System.IO.Log.FileRecordSequence.LastSequenceNumber">
      <topicdata group="api" />
      <apidata name="LastSequenceNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IO.Log.IRecordSequence.LastSequenceNumber">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_FileRecordSequence_LastSequenceNumber" />
    </api>
    <api id="P:System.IO.Log.FileRecordSequence.MaximumRecordLength">
      <topicdata group="api" />
      <apidata name="MaximumRecordLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IO.Log.IRecordSequence.MaximumRecordLength">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_FileRecordSequence_MaximumRecordLength" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)">
      <topicdata group="api" />
      <apidata name="ReadLogRecords" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="start">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="logRecordEnum">
          <type api="T:System.IO.Log.LogRecordEnumeratorType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IO.Log.LogRecord" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_ReadLogRecords_2_142c9984" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.ReadRestartAreas">
      <topicdata group="api" />
      <apidata name="ReadRestartAreas" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IO.Log.LogRecord" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.ReadRestartAreas">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_ReadRestartAreas" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])">
      <topicdata group="api" />
      <apidata name="ReserveAndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.ReserveAndAppend" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservationCollection">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="reservations">
          <arrayOf rank="1">
            <type api="T:System.Int64" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_ReserveAndAppend_6_d099a5f0" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])">
      <topicdata group="api" />
      <apidata name="ReserveAndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.ReserveAndAppend" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservationCollection">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="reservations">
          <arrayOf rank="1">
            <type api="T:System.Int64" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_ReserveAndAppend_6_6b74252d" />
    </api>
    <api id="P:System.IO.Log.FileRecordSequence.ReservedBytes">
      <topicdata group="api" />
      <apidata name="ReservedBytes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IO.Log.IRecordSequence.ReservedBytes">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_FileRecordSequence_ReservedBytes" />
    </api>
    <api id="P:System.IO.Log.FileRecordSequence.RestartSequenceNumber">
      <topicdata group="api" />
      <apidata name="RestartSequenceNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IO.Log.IRecordSequence.RestartSequenceNumber">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_FileRecordSequence_RestartSequenceNumber" />
    </api>
    <api id="P:System.IO.Log.FileRecordSequence.RetryAppend">
      <topicdata group="api" />
      <apidata name="RetryAppend" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IO.Log.IRecordSequence.RetryAppend">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_FileRecordSequence_RetryAppend" />
    </api>
    <api id="E:System.IO.Log.FileRecordSequence.TailPinned">
      <topicdata group="api" />
      <apidata name="TailPinned" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.IO.Log.TailPinnedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.IO.Log.TailPinnedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.IO.Log.IRecordSequence.TailPinned">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="E_System_IO_Log_FileRecordSequence_TailPinned" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.WriteRestartArea" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_WriteRestartArea_1_f9323a20" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.WriteRestartArea" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSeqNum">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_WriteRestartArea_2_1b1960a3" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.WriteRestartArea" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSeqNum">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="reservations">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_WriteRestartArea_3_b2e859eb" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.WriteRestartArea" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_WriteRestartArea_1_41f795ad" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.WriteRestartArea" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSeqNum">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_WriteRestartArea_2_f428a4d0" />
    </api>
    <api id="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.FileRecordSequence.WriteRestartArea" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSeqNum">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="reservations">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRecordSequence_WriteRestartArea_3_d1e8816a" />
    </api>
    <api id="T:System.IO.Log.FileRegion">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Log.FileRegion" />
      <apidata name="FileRegion" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_FileRegion" />
    </api>
    <api id="AllMembers.T:System.IO.Log.FileRegion">
      <topicdata name="FileRegion" group="list" subgroup="members" typeTopicId="T:System.IO.Log.FileRegion" />
      <apidata name="FileRegion" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Log.FileRegion.FileLength" />
        <element api="M:System.IO.Log.FileRegion.GetStream" />
        <element api="P:System.IO.Log.FileRegion.Offset" />
        <element api="P:System.IO.Log.FileRegion.Path" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="AllMembers_T_System_IO_Log_FileRegion" />
    </api>
    <api id="Methods.T:System.IO.Log.FileRegion">
      <topicdata name="FileRegion" group="list" subgroup="Methods" typeTopicId="T:System.IO.Log.FileRegion" />
      <apidata name="FileRegion" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Log.FileRegion.GetStream" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Methods_T_System_IO_Log_FileRegion" />
    </api>
    <api id="Properties.T:System.IO.Log.FileRegion">
      <topicdata name="FileRegion" group="list" subgroup="Properties" typeTopicId="T:System.IO.Log.FileRegion" />
      <apidata name="FileRegion" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Log.FileRegion.FileLength" />
        <element api="P:System.IO.Log.FileRegion.Offset" />
        <element api="P:System.IO.Log.FileRegion.Path" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Properties_T_System_IO_Log_FileRegion" />
    </api>
    <api id="P:System.IO.Log.FileRegion.FileLength">
      <topicdata group="api" />
      <apidata name="FileLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRegion" ref="true" />
      </containers>
      <file name="P_System_IO_Log_FileRegion_FileLength" />
    </api>
    <api id="M:System.IO.Log.FileRegion.GetStream">
      <topicdata group="api" />
      <apidata name="GetStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRegion" ref="true" />
      </containers>
      <file name="M_System_IO_Log_FileRegion_GetStream" />
    </api>
    <api id="P:System.IO.Log.FileRegion.Offset">
      <topicdata group="api" />
      <apidata name="Offset" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRegion" ref="true" />
      </containers>
      <file name="P_System_IO_Log_FileRegion_Offset" />
    </api>
    <api id="P:System.IO.Log.FileRegion.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.FileRegion" ref="true" />
      </containers>
      <file name="P_System_IO_Log_FileRegion_Path" />
    </api>
    <api id="T:System.IO.Log.IRecordSequence">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Log.IRecordSequence" />
      <apidata name="IRecordSequence" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.IO.Log.FileRecordSequence" ref="true" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_IRecordSequence" />
    </api>
    <api id="AllMembers.T:System.IO.Log.IRecordSequence">
      <topicdata name="IRecordSequence" group="list" subgroup="members" typeTopicId="T:System.IO.Log.IRecordSequence" />
      <apidata name="IRecordSequence" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.IDisposable.Dispose" />
        <element api="M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
        <element api="Overload:System.IO.Log.IRecordSequence.Append">
          <element api="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
          <element api="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
          <element api="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
          <element api="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
        </element>
        <element api="P:System.IO.Log.IRecordSequence.BaseSequenceNumber" />
        <element api="Overload:System.IO.Log.IRecordSequence.BeginAppend">
          <element api="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.IO.Log.IRecordSequence.BeginReserveAndAppend">
          <element api="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.IO.Log.IRecordSequence.BeginWriteRestartArea">
          <element api="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.IO.Log.IRecordSequence.CreateReservationCollection" />
        <element api="M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)" />
        <element api="M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)" />
        <element api="M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
        <element api="M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
        <element api="Overload:System.IO.Log.IRecordSequence.Flush">
          <element api="M:System.IO.Log.IRecordSequence.Flush" />
          <element api="M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
        </element>
        <element api="P:System.IO.Log.IRecordSequence.LastSequenceNumber" />
        <element api="P:System.IO.Log.IRecordSequence.MaximumRecordLength" />
        <element api="M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
        <element api="M:System.IO.Log.IRecordSequence.ReadRestartAreas" />
        <element api="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend">
          <element api="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
          <element api="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
        </element>
        <element api="P:System.IO.Log.IRecordSequence.ReservedBytes" />
        <element api="P:System.IO.Log.IRecordSequence.RestartSequenceNumber" />
        <element api="P:System.IO.Log.IRecordSequence.RetryAppend" />
        <element api="E:System.IO.Log.IRecordSequence.TailPinned" />
        <element api="Overload:System.IO.Log.IRecordSequence.WriteRestartArea">
          <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
          <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
          <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
          <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
          <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
          <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="AllMembers_T_System_IO_Log_IRecordSequence" />
    </api>
    <api id="Methods.T:System.IO.Log.IRecordSequence">
      <topicdata name="IRecordSequence" group="list" subgroup="Methods" typeTopicId="T:System.IO.Log.IRecordSequence" />
      <apidata name="IRecordSequence" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.IDisposable.Dispose" />
        <element api="M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
        <element api="Overload:System.IO.Log.IRecordSequence.Append">
          <element api="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
          <element api="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
          <element api="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
          <element api="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
        </element>
        <element api="Overload:System.IO.Log.IRecordSequence.BeginAppend">
          <element api="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.IO.Log.IRecordSequence.BeginReserveAndAppend">
          <element api="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.IO.Log.IRecordSequence.BeginWriteRestartArea">
          <element api="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.IO.Log.IRecordSequence.CreateReservationCollection" />
        <element api="M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)" />
        <element api="M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)" />
        <element api="M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
        <element api="M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
        <element api="Overload:System.IO.Log.IRecordSequence.Flush">
          <element api="M:System.IO.Log.IRecordSequence.Flush" />
          <element api="M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
        </element>
        <element api="M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
        <element api="M:System.IO.Log.IRecordSequence.ReadRestartAreas" />
        <element api="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend">
          <element api="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
          <element api="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
        </element>
        <element api="Overload:System.IO.Log.IRecordSequence.WriteRestartArea">
          <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
          <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
          <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
          <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
          <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
          <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Methods_T_System_IO_Log_IRecordSequence" />
    </api>
    <api id="Properties.T:System.IO.Log.IRecordSequence">
      <topicdata name="IRecordSequence" group="list" subgroup="Properties" typeTopicId="T:System.IO.Log.IRecordSequence" />
      <apidata name="IRecordSequence" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Log.IRecordSequence.BaseSequenceNumber" />
        <element api="P:System.IO.Log.IRecordSequence.LastSequenceNumber" />
        <element api="P:System.IO.Log.IRecordSequence.MaximumRecordLength" />
        <element api="P:System.IO.Log.IRecordSequence.ReservedBytes" />
        <element api="P:System.IO.Log.IRecordSequence.RestartSequenceNumber" />
        <element api="P:System.IO.Log.IRecordSequence.RetryAppend" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Properties_T_System_IO_Log_IRecordSequence" />
    </api>
    <api id="Events.T:System.IO.Log.IRecordSequence">
      <topicdata name="IRecordSequence" group="list" subgroup="Events" typeTopicId="T:System.IO.Log.IRecordSequence" />
      <apidata name="IRecordSequence" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.IO.Log.IRecordSequence.TailPinned" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Events_T_System_IO_Log_IRecordSequence" />
    </api>
    <api id="Overload:System.IO.Log.IRecordSequence.Append">
      <topicdata name="Append" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.IRecordSequence" />
      <apidata name="Append" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
        <element api="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
        <element api="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
        <element api="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_IRecordSequence_Append" />
    </api>
    <api id="Overload:System.IO.Log.IRecordSequence.BeginAppend">
      <topicdata name="BeginAppend" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.IRecordSequence" />
      <apidata name="BeginAppend" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_IRecordSequence_BeginAppend" />
    </api>
    <api id="Overload:System.IO.Log.IRecordSequence.BeginReserveAndAppend">
      <topicdata name="BeginReserveAndAppend" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.IRecordSequence" />
      <apidata name="BeginReserveAndAppend" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_IRecordSequence_BeginReserveAndAppend" />
    </api>
    <api id="Overload:System.IO.Log.IRecordSequence.BeginWriteRestartArea">
      <topicdata name="BeginWriteRestartArea" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.IRecordSequence" />
      <apidata name="BeginWriteRestartArea" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_IRecordSequence_BeginWriteRestartArea" />
    </api>
    <api id="Overload:System.IO.Log.IRecordSequence.Flush">
      <topicdata name="Flush" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.IRecordSequence" />
      <apidata name="Flush" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.IRecordSequence.Flush" />
        <element api="M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_IRecordSequence_Flush" />
    </api>
    <api id="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend">
      <topicdata name="ReserveAndAppend" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.IRecordSequence" />
      <apidata name="ReserveAndAppend" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
        <element api="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_IRecordSequence_ReserveAndAppend" />
    </api>
    <api id="Overload:System.IO.Log.IRecordSequence.WriteRestartArea">
      <topicdata name="WriteRestartArea" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.IRecordSequence" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
        <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
        <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
        <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
        <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
        <element api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_IRecordSequence_WriteRestartArea" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="AdvanceBaseSequenceNumber" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="newBaseSequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_AdvanceBaseSequenceNumber_1_2b312b3e" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.Append" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_Append_4_4883359b" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.Append" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservations">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_Append_5_3c827036" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.Append" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_Append_4_2c312946" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.Append" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservations">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_Append_5_2c2e09b2" />
    </api>
    <api id="P:System.IO.Log.IRecordSequence.BaseSequenceNumber">
      <topicdata group="api" />
      <apidata name="BaseSequenceNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_IRecordSequence_BaseSequenceNumber" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.BeginAppend" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_BeginAppend_6_5eda97c7" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.BeginAppend" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservations">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_BeginAppend_7_120cff1a" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.BeginAppend" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_BeginAppend_6_82a5e004" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.BeginAppend" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservations">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_BeginAppend_7_f171c463" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginFlush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_BeginFlush_3_3098a1f1" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginReserveAndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.BeginReserveAndAppend" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservationCollection">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="reservations">
          <arrayOf rank="1">
            <type api="T:System.Int64" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_BeginReserveAndAppend_8_fbff063a" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginReserveAndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.BeginReserveAndAppend" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservationCollection">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="reservations">
          <arrayOf rank="1">
            <type api="T:System.Int64" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_BeginReserveAndAppend_8_e8d9fb62" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginWriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.BeginWriteRestartArea" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="reservation">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_BeginWriteRestartArea_5_8d78055e" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginWriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.BeginWriteRestartArea" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="reservation">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_BeginWriteRestartArea_5_8b626bca" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.CreateReservationCollection">
      <topicdata group="api" />
      <apidata name="CreateReservationCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_CreateReservationCollection" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_EndAppend_1_35dda1aa" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndFlush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_EndFlush_1_35dda1aa" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndReserveAndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_EndReserveAndAppend_1_35dda1aa" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndWriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_EndWriteRestartArea_1_35dda1aa" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.Flush" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_Flush" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.Flush" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_Flush_1_2b312b3e" />
    </api>
    <api id="P:System.IO.Log.IRecordSequence.LastSequenceNumber">
      <topicdata group="api" />
      <apidata name="LastSequenceNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_IRecordSequence_LastSequenceNumber" />
    </api>
    <api id="P:System.IO.Log.IRecordSequence.MaximumRecordLength">
      <topicdata group="api" />
      <apidata name="MaximumRecordLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_IRecordSequence_MaximumRecordLength" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)">
      <topicdata group="api" />
      <apidata name="ReadLogRecords" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="start">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="logRecordEnum">
          <type api="T:System.IO.Log.LogRecordEnumeratorType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IO.Log.LogRecord" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_ReadLogRecords_2_142c9984" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.ReadRestartAreas">
      <topicdata group="api" />
      <apidata name="ReadRestartAreas" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IO.Log.LogRecord" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_ReadRestartAreas" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])">
      <topicdata group="api" />
      <apidata name="ReserveAndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservationCollection">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="reservations">
          <arrayOf rank="1">
            <type api="T:System.Int64" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_ReserveAndAppend_6_d099a5f0" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])">
      <topicdata group="api" />
      <apidata name="ReserveAndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservationCollection">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="reservations">
          <arrayOf rank="1">
            <type api="T:System.Int64" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_ReserveAndAppend_6_6b74252d" />
    </api>
    <api id="P:System.IO.Log.IRecordSequence.ReservedBytes">
      <topicdata group="api" />
      <apidata name="ReservedBytes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_IRecordSequence_ReservedBytes" />
    </api>
    <api id="P:System.IO.Log.IRecordSequence.RestartSequenceNumber">
      <topicdata group="api" />
      <apidata name="RestartSequenceNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_IRecordSequence_RestartSequenceNumber" />
    </api>
    <api id="P:System.IO.Log.IRecordSequence.RetryAppend">
      <topicdata group="api" />
      <apidata name="RetryAppend" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_IRecordSequence_RetryAppend" />
    </api>
    <api id="E:System.IO.Log.IRecordSequence.TailPinned">
      <topicdata group="api" />
      <apidata name="TailPinned" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.IO.Log.TailPinnedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.IO.Log.TailPinnedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="E_System_IO_Log_IRecordSequence_TailPinned" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.WriteRestartArea" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_WriteRestartArea_1_f9323a20" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.WriteRestartArea" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_WriteRestartArea_2_1b1960a3" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.WriteRestartArea" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="reservation">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_WriteRestartArea_3_b2e859eb" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.WriteRestartArea" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_WriteRestartArea_1_41f795ad" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.WriteRestartArea" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_WriteRestartArea_2_f428a4d0" />
    </api>
    <api id="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.IRecordSequence.WriteRestartArea" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="reservation">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_IRecordSequence_WriteRestartArea_3_d1e8816a" />
    </api>
    <api id="T:System.IO.Log.LogArchiveSnapshot">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Log.LogArchiveSnapshot" />
      <apidata name="LogArchiveSnapshot" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_LogArchiveSnapshot" />
    </api>
    <api id="AllMembers.T:System.IO.Log.LogArchiveSnapshot">
      <topicdata name="LogArchiveSnapshot" group="list" subgroup="members" typeTopicId="T:System.IO.Log.LogArchiveSnapshot" />
      <apidata name="LogArchiveSnapshot" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Log.LogArchiveSnapshot.ArchiveRegions" />
        <element api="P:System.IO.Log.LogArchiveSnapshot.ArchiveTail" />
        <element api="P:System.IO.Log.LogArchiveSnapshot.BaseSequenceNumber" />
        <element api="P:System.IO.Log.LogArchiveSnapshot.LastSequenceNumber" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="AllMembers_T_System_IO_Log_LogArchiveSnapshot" />
    </api>
    <api id="Properties.T:System.IO.Log.LogArchiveSnapshot">
      <topicdata name="LogArchiveSnapshot" group="list" subgroup="Properties" typeTopicId="T:System.IO.Log.LogArchiveSnapshot" />
      <apidata name="LogArchiveSnapshot" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Log.LogArchiveSnapshot.ArchiveRegions" />
        <element api="P:System.IO.Log.LogArchiveSnapshot.ArchiveTail" />
        <element api="P:System.IO.Log.LogArchiveSnapshot.BaseSequenceNumber" />
        <element api="P:System.IO.Log.LogArchiveSnapshot.LastSequenceNumber" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Properties_T_System_IO_Log_LogArchiveSnapshot" />
    </api>
    <api id="P:System.IO.Log.LogArchiveSnapshot.ArchiveRegions">
      <topicdata group="api" />
      <apidata name="ArchiveRegions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IO.Log.FileRegion" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogArchiveSnapshot" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogArchiveSnapshot_ArchiveRegions" />
    </api>
    <api id="P:System.IO.Log.LogArchiveSnapshot.ArchiveTail">
      <topicdata group="api" />
      <apidata name="ArchiveTail" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogArchiveSnapshot" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogArchiveSnapshot_ArchiveTail" />
    </api>
    <api id="P:System.IO.Log.LogArchiveSnapshot.BaseSequenceNumber">
      <topicdata group="api" />
      <apidata name="BaseSequenceNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogArchiveSnapshot" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogArchiveSnapshot_BaseSequenceNumber" />
    </api>
    <api id="P:System.IO.Log.LogArchiveSnapshot.LastSequenceNumber">
      <topicdata group="api" />
      <apidata name="LastSequenceNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogArchiveSnapshot" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogArchiveSnapshot_LastSequenceNumber" />
    </api>
    <api id="T:System.IO.Log.LogExtent">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Log.LogExtent" />
      <apidata name="LogExtent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_LogExtent" />
    </api>
    <api id="AllMembers.T:System.IO.Log.LogExtent">
      <topicdata name="LogExtent" group="list" subgroup="members" typeTopicId="T:System.IO.Log.LogExtent" />
      <apidata name="LogExtent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Log.LogExtent.Path" />
        <element api="P:System.IO.Log.LogExtent.Size" />
        <element api="P:System.IO.Log.LogExtent.State" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="AllMembers_T_System_IO_Log_LogExtent" />
    </api>
    <api id="Properties.T:System.IO.Log.LogExtent">
      <topicdata name="LogExtent" group="list" subgroup="Properties" typeTopicId="T:System.IO.Log.LogExtent" />
      <apidata name="LogExtent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Log.LogExtent.Path" />
        <element api="P:System.IO.Log.LogExtent.Size" />
        <element api="P:System.IO.Log.LogExtent.State" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Properties_T_System_IO_Log_LogExtent" />
    </api>
    <api id="P:System.IO.Log.LogExtent.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtent" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogExtent_Path" />
    </api>
    <api id="P:System.IO.Log.LogExtent.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtent" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogExtent_Size" />
    </api>
    <api id="P:System.IO.Log.LogExtent.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.LogExtentState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtent" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogExtent_State" />
    </api>
    <api id="T:System.IO.Log.LogExtentCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Log.LogExtentCollection" />
      <apidata name="LogExtentCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IO.Log.LogExtent" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_LogExtentCollection" />
    </api>
    <api id="AllMembers.T:System.IO.Log.LogExtentCollection">
      <topicdata name="LogExtentCollection" group="list" subgroup="members" typeTopicId="T:System.IO.Log.LogExtentCollection" />
      <apidata name="LogExtentCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IO.Log.LogExtentCollection.Add">
          <element api="M:System.IO.Log.LogExtentCollection.Add(System.String)" />
          <element api="M:System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)" />
        </element>
        <element api="P:System.IO.Log.LogExtentCollection.Count" />
        <element api="P:System.IO.Log.LogExtentCollection.FreeCount" />
        <element api="M:System.IO.Log.LogExtentCollection.GetEnumerator" />
        <element api="Overload:System.IO.Log.LogExtentCollection.Remove">
          <element api="M:System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)" />
          <element api="M:System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)" />
        </element>
        <element api="M:System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="AllMembers_T_System_IO_Log_LogExtentCollection" />
    </api>
    <api id="Methods.T:System.IO.Log.LogExtentCollection">
      <topicdata name="LogExtentCollection" group="list" subgroup="Methods" typeTopicId="T:System.IO.Log.LogExtentCollection" />
      <apidata name="LogExtentCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IO.Log.LogExtentCollection.Add">
          <element api="M:System.IO.Log.LogExtentCollection.Add(System.String)" />
          <element api="M:System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)" />
        </element>
        <element api="M:System.IO.Log.LogExtentCollection.GetEnumerator" />
        <element api="Overload:System.IO.Log.LogExtentCollection.Remove">
          <element api="M:System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)" />
          <element api="M:System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)" />
        </element>
        <element api="M:System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Methods_T_System_IO_Log_LogExtentCollection" />
    </api>
    <api id="Properties.T:System.IO.Log.LogExtentCollection">
      <topicdata name="LogExtentCollection" group="list" subgroup="Properties" typeTopicId="T:System.IO.Log.LogExtentCollection" />
      <apidata name="LogExtentCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Log.LogExtentCollection.Count" />
        <element api="P:System.IO.Log.LogExtentCollection.FreeCount" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Properties_T_System_IO_Log_LogExtentCollection" />
    </api>
    <api id="Overload:System.IO.Log.LogExtentCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.LogExtentCollection" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.LogExtentCollection.Add(System.String)" />
        <element api="M:System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentCollection" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_LogExtentCollection_Add" />
    </api>
    <api id="Overload:System.IO.Log.LogExtentCollection.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.LogExtentCollection" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)" />
        <element api="M:System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentCollection" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_LogExtentCollection_Remove" />
    </api>
    <api id="M:System.IO.Log.LogExtentCollection.Add(System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogExtentCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogExtentCollection_Add_1_72eac341" />
    </api>
    <api id="M:System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogExtentCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="size">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogExtentCollection_Add_2_d1a0f57d" />
    </api>
    <api id="P:System.IO.Log.LogExtentCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentCollection" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogExtentCollection_Count" />
    </api>
    <api id="P:System.IO.Log.LogExtentCollection.FreeCount">
      <topicdata group="api" />
      <apidata name="FreeCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentCollection" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogExtentCollection_FreeCount" />
    </api>
    <api id="M:System.IO.Log.LogExtentCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.IO.Log.LogExtent" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IO.Log.LogExtent" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogExtentCollection_GetEnumerator" />
    </api>
    <api id="M:System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogExtentCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="extent">
          <type api="T:System.IO.Log.LogExtent" ref="true" />
        </parameter>
        <parameter name="force">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogExtentCollection_Remove_2_b6b9c573" />
    </api>
    <api id="M:System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogExtentCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="force">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogExtentCollection_Remove_2_00bbdc3f" />
    </api>
    <api id="M:System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogExtentCollection_System_Collections_IEnumerable_GetEnumerator" />
    </api>
    <api id="T:System.IO.Log.LogExtentState">
      <topicdata group="api" />
      <apidata name="LogExtentState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.IO.Log.LogExtentState.Unknown" />
        <element api="F:System.IO.Log.LogExtentState.Initializing" />
        <element api="F:System.IO.Log.LogExtentState.Inactive" />
        <element api="F:System.IO.Log.LogExtentState.Active" />
        <element api="F:System.IO.Log.LogExtentState.ActivePendingDelete" />
        <element api="F:System.IO.Log.LogExtentState.PendingArchive" />
        <element api="F:System.IO.Log.LogExtentState.PendingArchiveAndDelete" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_LogExtentState" />
    </api>
    <api id="F:System.IO.Log.LogExtentState.Active">
      <topicdata group="api" notopic="" />
      <apidata name="Active" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Log.LogExtentState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentState" ref="false" />
      </containers>
      <file name="F_System_IO_Log_LogExtentState_Active" />
    </api>
    <api id="F:System.IO.Log.LogExtentState.ActivePendingDelete">
      <topicdata group="api" notopic="" />
      <apidata name="ActivePendingDelete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Log.LogExtentState" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentState" ref="false" />
      </containers>
      <file name="F_System_IO_Log_LogExtentState_ActivePendingDelete" />
    </api>
    <api id="F:System.IO.Log.LogExtentState.Inactive">
      <topicdata group="api" notopic="" />
      <apidata name="Inactive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Log.LogExtentState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentState" ref="false" />
      </containers>
      <file name="F_System_IO_Log_LogExtentState_Inactive" />
    </api>
    <api id="F:System.IO.Log.LogExtentState.Initializing">
      <topicdata group="api" notopic="" />
      <apidata name="Initializing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Log.LogExtentState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentState" ref="false" />
      </containers>
      <file name="F_System_IO_Log_LogExtentState_Initializing" />
    </api>
    <api id="F:System.IO.Log.LogExtentState.PendingArchive">
      <topicdata group="api" notopic="" />
      <apidata name="PendingArchive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Log.LogExtentState" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentState" ref="false" />
      </containers>
      <file name="F_System_IO_Log_LogExtentState_PendingArchive" />
    </api>
    <api id="F:System.IO.Log.LogExtentState.PendingArchiveAndDelete">
      <topicdata group="api" notopic="" />
      <apidata name="PendingArchiveAndDelete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Log.LogExtentState" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentState" ref="false" />
      </containers>
      <file name="F_System_IO_Log_LogExtentState_PendingArchiveAndDelete" />
    </api>
    <api id="F:System.IO.Log.LogExtentState.Unknown">
      <topicdata group="api" notopic="" />
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Log.LogExtentState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogExtentState" ref="false" />
      </containers>
      <file name="F_System_IO_Log_LogExtentState_Unknown" />
    </api>
    <api id="T:System.IO.Log.LogPolicy">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Log.LogPolicy" />
      <apidata name="LogPolicy" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_LogPolicy" />
    </api>
    <api id="AllMembers.T:System.IO.Log.LogPolicy">
      <topicdata name="LogPolicy" group="list" subgroup="members" typeTopicId="T:System.IO.Log.LogPolicy" />
      <apidata name="LogPolicy" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Log.LogPolicy.AutoGrow" />
        <element api="P:System.IO.Log.LogPolicy.AutoShrinkPercentage" />
        <element api="M:System.IO.Log.LogPolicy.Commit" />
        <element api="P:System.IO.Log.LogPolicy.GrowthRate" />
        <element api="P:System.IO.Log.LogPolicy.MaximumExtentCount" />
        <element api="P:System.IO.Log.LogPolicy.MinimumExtentCount" />
        <element api="P:System.IO.Log.LogPolicy.NewExtentPrefix" />
        <element api="P:System.IO.Log.LogPolicy.NextExtentSuffix" />
        <element api="P:System.IO.Log.LogPolicy.PinnedTailThreshold" />
        <element api="M:System.IO.Log.LogPolicy.Refresh" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="AllMembers_T_System_IO_Log_LogPolicy" />
    </api>
    <api id="Methods.T:System.IO.Log.LogPolicy">
      <topicdata name="LogPolicy" group="list" subgroup="Methods" typeTopicId="T:System.IO.Log.LogPolicy" />
      <apidata name="LogPolicy" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Log.LogPolicy.Commit" />
        <element api="M:System.IO.Log.LogPolicy.Refresh" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Methods_T_System_IO_Log_LogPolicy" />
    </api>
    <api id="Properties.T:System.IO.Log.LogPolicy">
      <topicdata name="LogPolicy" group="list" subgroup="Properties" typeTopicId="T:System.IO.Log.LogPolicy" />
      <apidata name="LogPolicy" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Log.LogPolicy.AutoGrow" />
        <element api="P:System.IO.Log.LogPolicy.AutoShrinkPercentage" />
        <element api="P:System.IO.Log.LogPolicy.GrowthRate" />
        <element api="P:System.IO.Log.LogPolicy.MaximumExtentCount" />
        <element api="P:System.IO.Log.LogPolicy.MinimumExtentCount" />
        <element api="P:System.IO.Log.LogPolicy.NewExtentPrefix" />
        <element api="P:System.IO.Log.LogPolicy.NextExtentSuffix" />
        <element api="P:System.IO.Log.LogPolicy.PinnedTailThreshold" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Properties_T_System_IO_Log_LogPolicy" />
    </api>
    <api id="P:System.IO.Log.LogPolicy.AutoGrow">
      <topicdata group="api" />
      <apidata name="AutoGrow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogPolicy" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogPolicy_AutoGrow" />
    </api>
    <api id="P:System.IO.Log.LogPolicy.AutoShrinkPercentage">
      <topicdata group="api" />
      <apidata name="AutoShrinkPercentage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogPolicy" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogPolicy_AutoShrinkPercentage" />
    </api>
    <api id="M:System.IO.Log.LogPolicy.Commit">
      <topicdata group="api" />
      <apidata name="Commit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogPolicy" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogPolicy_Commit" />
    </api>
    <api id="P:System.IO.Log.LogPolicy.GrowthRate">
      <topicdata group="api" />
      <apidata name="GrowthRate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.IO.Log.PolicyUnit" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogPolicy" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogPolicy_GrowthRate" />
    </api>
    <api id="P:System.IO.Log.LogPolicy.MaximumExtentCount">
      <topicdata group="api" />
      <apidata name="MaximumExtentCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogPolicy" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogPolicy_MaximumExtentCount" />
    </api>
    <api id="P:System.IO.Log.LogPolicy.MinimumExtentCount">
      <topicdata group="api" />
      <apidata name="MinimumExtentCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogPolicy" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogPolicy_MinimumExtentCount" />
    </api>
    <api id="P:System.IO.Log.LogPolicy.NewExtentPrefix">
      <topicdata group="api" />
      <apidata name="NewExtentPrefix" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogPolicy" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogPolicy_NewExtentPrefix" />
    </api>
    <api id="P:System.IO.Log.LogPolicy.NextExtentSuffix">
      <topicdata group="api" />
      <apidata name="NextExtentSuffix" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogPolicy" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogPolicy_NextExtentSuffix" />
    </api>
    <api id="P:System.IO.Log.LogPolicy.PinnedTailThreshold">
      <topicdata group="api" />
      <apidata name="PinnedTailThreshold" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.IO.Log.PolicyUnit" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogPolicy" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogPolicy_PinnedTailThreshold" />
    </api>
    <api id="M:System.IO.Log.LogPolicy.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogPolicy" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogPolicy_Refresh" />
    </api>
    <api id="T:System.IO.Log.LogRecord">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Log.LogRecord" />
      <apidata name="LogRecord" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_LogRecord" />
    </api>
    <api id="AllMembers.T:System.IO.Log.LogRecord">
      <topicdata name="LogRecord" group="list" subgroup="members" typeTopicId="T:System.IO.Log.LogRecord" />
      <apidata name="LogRecord" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Log.LogRecord.#ctor" />
        <element api="P:System.IO.Log.LogRecord.Data" />
        <element api="M:System.IO.Log.LogRecord.Dispose" />
        <element api="P:System.IO.Log.LogRecord.Previous" />
        <element api="P:System.IO.Log.LogRecord.SequenceNumber" />
        <element api="P:System.IO.Log.LogRecord.User" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="AllMembers_T_System_IO_Log_LogRecord" />
    </api>
    <api id="Methods.T:System.IO.Log.LogRecord">
      <topicdata name="LogRecord" group="list" subgroup="Methods" typeTopicId="T:System.IO.Log.LogRecord" />
      <apidata name="LogRecord" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Log.LogRecord.Dispose" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Methods_T_System_IO_Log_LogRecord" />
    </api>
    <api id="Properties.T:System.IO.Log.LogRecord">
      <topicdata name="LogRecord" group="list" subgroup="Properties" typeTopicId="T:System.IO.Log.LogRecord" />
      <apidata name="LogRecord" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Log.LogRecord.Data" />
        <element api="P:System.IO.Log.LogRecord.Previous" />
        <element api="P:System.IO.Log.LogRecord.SequenceNumber" />
        <element api="P:System.IO.Log.LogRecord.User" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Properties_T_System_IO_Log_LogRecord" />
    </api>
    <api id="M:System.IO.Log.LogRecord.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecord" ref="true" />
      </containers>
      <file name="C_System_IO_Log_LogRecord_ctor" />
    </api>
    <api id="P:System.IO.Log.LogRecord.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecord" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogRecord_Data" />
    </api>
    <api id="M:System.IO.Log.LogRecord.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecord" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecord_Dispose" />
    </api>
    <api id="P:System.IO.Log.LogRecord.Previous">
      <topicdata group="api" />
      <apidata name="Previous" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecord" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogRecord_Previous" />
    </api>
    <api id="P:System.IO.Log.LogRecord.SequenceNumber">
      <topicdata group="api" />
      <apidata name="SequenceNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecord" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogRecord_SequenceNumber" />
    </api>
    <api id="P:System.IO.Log.LogRecord.User">
      <topicdata group="api" />
      <apidata name="User" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecord" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogRecord_User" />
    </api>
    <api id="T:System.IO.Log.LogRecordEnumeratorType">
      <topicdata group="api" />
      <apidata name="LogRecordEnumeratorType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.IO.Log.LogRecordEnumeratorType.User" />
        <element api="F:System.IO.Log.LogRecordEnumeratorType.Previous" />
        <element api="F:System.IO.Log.LogRecordEnumeratorType.Next" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_LogRecordEnumeratorType" />
    </api>
    <api id="F:System.IO.Log.LogRecordEnumeratorType.Next">
      <topicdata group="api" notopic="" />
      <apidata name="Next" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Log.LogRecordEnumeratorType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordEnumeratorType" ref="false" />
      </containers>
      <file name="F_System_IO_Log_LogRecordEnumeratorType_Next" />
    </api>
    <api id="F:System.IO.Log.LogRecordEnumeratorType.Previous">
      <topicdata group="api" notopic="" />
      <apidata name="Previous" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Log.LogRecordEnumeratorType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordEnumeratorType" ref="false" />
      </containers>
      <file name="F_System_IO_Log_LogRecordEnumeratorType_Previous" />
    </api>
    <api id="F:System.IO.Log.LogRecordEnumeratorType.User">
      <topicdata group="api" notopic="" />
      <apidata name="User" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Log.LogRecordEnumeratorType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordEnumeratorType" ref="false" />
      </containers>
      <file name="F_System_IO_Log_LogRecordEnumeratorType_User" />
    </api>
    <api id="T:System.IO.Log.LogRecordSequence">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Log.LogRecordSequence" />
      <apidata name="LogRecordSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_LogRecordSequence" />
    </api>
    <api id="AllMembers.T:System.IO.Log.LogRecordSequence">
      <topicdata name="LogRecordSequence" group="list" subgroup="members" typeTopicId="T:System.IO.Log.LogRecordSequence" />
      <apidata name="LogRecordSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IO.Log.LogRecordSequence.#ctor">
          <element api="M:System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore)" />
          <element api="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode)" />
          <element api="M:System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore,System.Int32,System.Int32)" />
          <element api="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)" />
          <element api="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
          <element api="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32)" />
          <element api="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32,System.Security.AccessControl.FileSecurity)" />
        </element>
        <element api="M:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
        <element api="Overload:System.IO.Log.LogRecordSequence.Append">
          <element api="M:System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
          <element api="M:System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
          <element api="M:System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
          <element api="M:System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
        </element>
        <element api="P:System.IO.Log.LogRecordSequence.BaseSequenceNumber" />
        <element api="Overload:System.IO.Log.LogRecordSequence.BeginAppend">
          <element api="M:System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.IO.Log.LogRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.IO.Log.LogRecordSequence.BeginReserveAndAppend">
          <element api="M:System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.IO.Log.LogRecordSequence.BeginWriteRestartArea">
          <element api="M:System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.IO.Log.LogRecordSequence.CreateReservationCollection" />
        <element api="M:System.IO.Log.LogRecordSequence.Dispose" />
        <element api="M:System.IO.Log.LogRecordSequence.EndAppend(System.IAsyncResult)" />
        <element api="M:System.IO.Log.LogRecordSequence.EndFlush(System.IAsyncResult)" />
        <element api="M:System.IO.Log.LogRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
        <element api="M:System.IO.Log.LogRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
        <element api="Overload:System.IO.Log.LogRecordSequence.Flush">
          <element api="M:System.IO.Log.LogRecordSequence.Flush" />
          <element api="M:System.IO.Log.LogRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
        </element>
        <element api="P:System.IO.Log.LogRecordSequence.LastSequenceNumber" />
        <element api="P:System.IO.Log.LogRecordSequence.LogStore" />
        <element api="P:System.IO.Log.LogRecordSequence.MaximumRecordLength" />
        <element api="M:System.IO.Log.LogRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
        <element api="M:System.IO.Log.LogRecordSequence.ReadRestartAreas" />
        <element api="Overload:System.IO.Log.LogRecordSequence.ReserveAndAppend">
          <element api="M:System.IO.Log.LogRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
          <element api="M:System.IO.Log.LogRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
        </element>
        <element api="P:System.IO.Log.LogRecordSequence.ReservedBytes" />
        <element api="P:System.IO.Log.LogRecordSequence.RestartSequenceNumber" />
        <element api="P:System.IO.Log.LogRecordSequence.RetryAppend" />
        <element api="M:System.IO.Log.LogRecordSequence.SetLastRecord(System.IO.Log.SequenceNumber)" />
        <element api="E:System.IO.Log.LogRecordSequence.TailPinned" />
        <element api="Overload:System.IO.Log.LogRecordSequence.WriteRestartArea">
          <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
          <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
          <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
          <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
          <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
          <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="AllMembers_T_System_IO_Log_LogRecordSequence" />
    </api>
    <api id="Methods.T:System.IO.Log.LogRecordSequence">
      <topicdata name="LogRecordSequence" group="list" subgroup="Methods" typeTopicId="T:System.IO.Log.LogRecordSequence" />
      <apidata name="LogRecordSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
        <element api="Overload:System.IO.Log.LogRecordSequence.Append">
          <element api="M:System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
          <element api="M:System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
          <element api="M:System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
          <element api="M:System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
        </element>
        <element api="Overload:System.IO.Log.LogRecordSequence.BeginAppend">
          <element api="M:System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.IO.Log.LogRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.IO.Log.LogRecordSequence.BeginReserveAndAppend">
          <element api="M:System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.IO.Log.LogRecordSequence.BeginWriteRestartArea">
          <element api="M:System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
          <element api="M:System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.IO.Log.LogRecordSequence.CreateReservationCollection" />
        <element api="M:System.IO.Log.LogRecordSequence.Dispose" />
        <element api="M:System.IO.Log.LogRecordSequence.EndAppend(System.IAsyncResult)" />
        <element api="M:System.IO.Log.LogRecordSequence.EndFlush(System.IAsyncResult)" />
        <element api="M:System.IO.Log.LogRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
        <element api="M:System.IO.Log.LogRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
        <element api="Overload:System.IO.Log.LogRecordSequence.Flush">
          <element api="M:System.IO.Log.LogRecordSequence.Flush" />
          <element api="M:System.IO.Log.LogRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
        </element>
        <element api="M:System.IO.Log.LogRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
        <element api="M:System.IO.Log.LogRecordSequence.ReadRestartAreas" />
        <element api="Overload:System.IO.Log.LogRecordSequence.ReserveAndAppend">
          <element api="M:System.IO.Log.LogRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
          <element api="M:System.IO.Log.LogRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
        </element>
        <element api="M:System.IO.Log.LogRecordSequence.SetLastRecord(System.IO.Log.SequenceNumber)" />
        <element api="Overload:System.IO.Log.LogRecordSequence.WriteRestartArea">
          <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
          <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
          <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
          <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
          <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
          <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Methods_T_System_IO_Log_LogRecordSequence" />
    </api>
    <api id="Properties.T:System.IO.Log.LogRecordSequence">
      <topicdata name="LogRecordSequence" group="list" subgroup="Properties" typeTopicId="T:System.IO.Log.LogRecordSequence" />
      <apidata name="LogRecordSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Log.LogRecordSequence.BaseSequenceNumber" />
        <element api="P:System.IO.Log.LogRecordSequence.LastSequenceNumber" />
        <element api="P:System.IO.Log.LogRecordSequence.LogStore" />
        <element api="P:System.IO.Log.LogRecordSequence.MaximumRecordLength" />
        <element api="P:System.IO.Log.LogRecordSequence.ReservedBytes" />
        <element api="P:System.IO.Log.LogRecordSequence.RestartSequenceNumber" />
        <element api="P:System.IO.Log.LogRecordSequence.RetryAppend" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Properties_T_System_IO_Log_LogRecordSequence" />
    </api>
    <api id="Events.T:System.IO.Log.LogRecordSequence">
      <topicdata name="LogRecordSequence" group="list" subgroup="Events" typeTopicId="T:System.IO.Log.LogRecordSequence" />
      <apidata name="LogRecordSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.IO.Log.LogRecordSequence.TailPinned" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Events_T_System_IO_Log_LogRecordSequence" />
    </api>
    <api id="Overload:System.IO.Log.LogRecordSequence.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.LogRecordSequence" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore)" />
        <element api="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode)" />
        <element api="M:System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore,System.Int32,System.Int32)" />
        <element api="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)" />
        <element api="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
        <element api="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32)" />
        <element api="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32,System.Security.AccessControl.FileSecurity)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_LogRecordSequence_ctor" />
    </api>
    <api id="Overload:System.IO.Log.LogRecordSequence.Append">
      <topicdata name="Append" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.LogRecordSequence" />
      <apidata name="Append" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
        <element api="M:System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
        <element api="M:System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
        <element api="M:System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_LogRecordSequence_Append" />
    </api>
    <api id="Overload:System.IO.Log.LogRecordSequence.BeginAppend">
      <topicdata name="BeginAppend" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.LogRecordSequence" />
      <apidata name="BeginAppend" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_LogRecordSequence_BeginAppend" />
    </api>
    <api id="Overload:System.IO.Log.LogRecordSequence.BeginReserveAndAppend">
      <topicdata name="BeginReserveAndAppend" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.LogRecordSequence" />
      <apidata name="BeginReserveAndAppend" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_LogRecordSequence_BeginReserveAndAppend" />
    </api>
    <api id="Overload:System.IO.Log.LogRecordSequence.BeginWriteRestartArea">
      <topicdata name="BeginWriteRestartArea" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.LogRecordSequence" />
      <apidata name="BeginWriteRestartArea" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_LogRecordSequence_BeginWriteRestartArea" />
    </api>
    <api id="Overload:System.IO.Log.LogRecordSequence.Flush">
      <topicdata name="Flush" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.LogRecordSequence" />
      <apidata name="Flush" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.LogRecordSequence.Flush" />
        <element api="M:System.IO.Log.LogRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_LogRecordSequence_Flush" />
    </api>
    <api id="Overload:System.IO.Log.LogRecordSequence.ReserveAndAppend">
      <topicdata name="ReserveAndAppend" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.LogRecordSequence" />
      <apidata name="ReserveAndAppend" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.LogRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
        <element api="M:System.IO.Log.LogRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_LogRecordSequence_ReserveAndAppend" />
    </api>
    <api id="Overload:System.IO.Log.LogRecordSequence.WriteRestartArea">
      <topicdata name="WriteRestartArea" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.LogRecordSequence" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
        <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
        <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
        <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
        <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
        <element api="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_LogRecordSequence_WriteRestartArea" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.LogRecordSequence.#ctor" />
      <parameters>
        <parameter name="logStore">
          <type api="T:System.IO.Log.LogStore" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="C_System_IO_Log_LogRecordSequence_ctor_1_7657182f" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.LogRecordSequence.#ctor" />
      <parameters>
        <parameter name="logStore">
          <type api="T:System.IO.Log.LogStore" ref="true" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bufferCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="C_System_IO_Log_LogRecordSequence_ctor_3_b60a5fd9" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.LogRecordSequence.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.IO.FileMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="C_System_IO_Log_LogRecordSequence_ctor_2_0564b5bc" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.LogRecordSequence.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.IO.FileMode" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.IO.FileAccess" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="C_System_IO_Log_LogRecordSequence_ctor_3_0568fdc4" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.LogRecordSequence.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.IO.FileMode" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.IO.FileAccess" ref="false" />
        </parameter>
        <parameter name="share">
          <type api="T:System.IO.FileShare" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="C_System_IO_Log_LogRecordSequence_ctor_4_d1e8bb4f" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.LogRecordSequence.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.IO.FileMode" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.IO.FileAccess" ref="false" />
        </parameter>
        <parameter name="share">
          <type api="T:System.IO.FileShare" ref="false" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bufferCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="C_System_IO_Log_LogRecordSequence_ctor_6_0253ea38" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32,System.Security.AccessControl.FileSecurity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.LogRecordSequence.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.IO.FileMode" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.IO.FileAccess" ref="false" />
        </parameter>
        <parameter name="share">
          <type api="T:System.IO.FileShare" ref="false" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bufferCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="fileSecurity">
          <type api="T:System.Security.AccessControl.FileSecurity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="C_System_IO_Log_LogRecordSequence_ctor_7_56e83036" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="AdvanceBaseSequenceNumber" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="newBaseSequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_AdvanceBaseSequenceNumber_1_2b312b3e" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.Append" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_Append_4_4883359b" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.Append" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservations">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_Append_5_3c827036" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.Append" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="userRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_Append_4_2c312946" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.Append" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="userRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservations">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_Append_5_2c2e09b2" />
    </api>
    <api id="P:System.IO.Log.LogRecordSequence.BaseSequenceNumber">
      <topicdata group="api" />
      <apidata name="BaseSequenceNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IO.Log.IRecordSequence.BaseSequenceNumber">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogRecordSequence_BaseSequenceNumber" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.BeginAppend" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_BeginAppend_6_5eda97c7" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.BeginAppend" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservations">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_BeginAppend_7_120cff1a" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.BeginAppend" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="userRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_BeginAppend_6_82a5e004" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.BeginAppend" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="userRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservations">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_BeginAppend_7_f171c463" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginFlush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="sequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_BeginFlush_3_3098a1f1" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginReserveAndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.BeginReserveAndAppend" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservationCollection">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="reservations">
          <arrayOf rank="1">
            <type api="T:System.Int64" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_BeginReserveAndAppend_8_fbff063a" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginReserveAndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.BeginReserveAndAppend" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="userRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservationCollection">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="reservations">
          <arrayOf rank="1">
            <type api="T:System.Int64" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_BeginReserveAndAppend_8_e8d9fb62" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginWriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.BeginWriteRestartArea" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSeqNum">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="reservation">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_BeginWriteRestartArea_5_8d78055e" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginWriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.BeginWriteRestartArea" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSeqNum">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="reservationCollection">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_BeginWriteRestartArea_5_8b626bca" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.CreateReservationCollection">
      <topicdata group="api" />
      <apidata name="CreateReservationCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.CreateReservationCollection">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_CreateReservationCollection" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_Dispose" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.EndAppend(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_EndAppend_1_35dda1aa" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.EndFlush(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndFlush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_EndFlush_1_35dda1aa" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.EndReserveAndAppend(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndReserveAndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_EndReserveAndAppend_1_35dda1aa" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.EndWriteRestartArea(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndWriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_EndWriteRestartArea_1_35dda1aa" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.Flush" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.Flush">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_Flush" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.Flush(System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.Flush" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="sequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_Flush_1_2b312b3e" />
    </api>
    <api id="P:System.IO.Log.LogRecordSequence.LastSequenceNumber">
      <topicdata group="api" />
      <apidata name="LastSequenceNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IO.Log.IRecordSequence.LastSequenceNumber">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogRecordSequence_LastSequenceNumber" />
    </api>
    <api id="P:System.IO.Log.LogRecordSequence.LogStore">
      <topicdata group="api" />
      <apidata name="LogStore" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogRecordSequence_LogStore" />
    </api>
    <api id="P:System.IO.Log.LogRecordSequence.MaximumRecordLength">
      <topicdata group="api" />
      <apidata name="MaximumRecordLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IO.Log.IRecordSequence.MaximumRecordLength">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogRecordSequence_MaximumRecordLength" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)">
      <topicdata group="api" />
      <apidata name="ReadLogRecords" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="start">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="logRecordEnum">
          <type api="T:System.IO.Log.LogRecordEnumeratorType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IO.Log.LogRecord" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_ReadLogRecords_2_142c9984" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.ReadRestartAreas">
      <topicdata group="api" />
      <apidata name="ReadRestartAreas" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IO.Log.LogRecord" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.ReadRestartAreas">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_ReadRestartAreas" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])">
      <topicdata group="api" />
      <apidata name="ReserveAndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.ReserveAndAppend" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nextUndoRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservationCollection">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="reservations">
          <arrayOf rank="1">
            <type api="T:System.Int64" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_ReserveAndAppend_6_d099a5f0" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])">
      <topicdata group="api" />
      <apidata name="ReserveAndAppend" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.ReserveAndAppend" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="userRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="previousRecord">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="recordAppendOptions">
          <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
        </parameter>
        <parameter name="reservationCollection">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
        <parameter name="reservations">
          <arrayOf rank="1">
            <type api="T:System.Int64" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_ReserveAndAppend_6_6b74252d" />
    </api>
    <api id="P:System.IO.Log.LogRecordSequence.ReservedBytes">
      <topicdata group="api" />
      <apidata name="ReservedBytes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IO.Log.IRecordSequence.ReservedBytes">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogRecordSequence_ReservedBytes" />
    </api>
    <api id="P:System.IO.Log.LogRecordSequence.RestartSequenceNumber">
      <topicdata group="api" />
      <apidata name="RestartSequenceNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IO.Log.IRecordSequence.RestartSequenceNumber">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogRecordSequence_RestartSequenceNumber" />
    </api>
    <api id="P:System.IO.Log.LogRecordSequence.RetryAppend">
      <topicdata group="api" />
      <apidata name="RetryAppend" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IO.Log.IRecordSequence.RetryAppend">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogRecordSequence_RetryAppend" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.SetLastRecord(System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="SetLastRecord" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_SetLastRecord_1_2b312b3e" />
    </api>
    <api id="E:System.IO.Log.LogRecordSequence.TailPinned">
      <topicdata group="api" />
      <apidata name="TailPinned" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.IO.Log.TailPinnedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.IO.Log.TailPinnedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.IO.Log.IRecordSequence.TailPinned">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="E_System_IO_Log_LogRecordSequence_TailPinned" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.WriteRestartArea" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_WriteRestartArea_1_f9323a20" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.WriteRestartArea" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSeqNum">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_WriteRestartArea_2_1b1960a3" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.WriteRestartArea" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.ArraySegment`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSeqNum">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="reservations">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_WriteRestartArea_3_b2e859eb" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.WriteRestartArea" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_WriteRestartArea_1_41f795ad" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.WriteRestartArea" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSeqNum">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_WriteRestartArea_2_f428a4d0" />
    </api>
    <api id="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)">
      <topicdata group="api" />
      <apidata name="WriteRestartArea" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogRecordSequence.WriteRestartArea" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.ArraySegment`1" ref="false">
                <specialization>
                  <type api="T:System.Byte" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="newBaseSeqNum">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="reservationCollection">
          <type api="T:System.IO.Log.ReservationCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)">
          <type api="T:System.IO.Log.IRecordSequence" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogRecordSequence" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogRecordSequence_WriteRestartArea_3_d1e8816a" />
    </api>
    <api id="T:System.IO.Log.LogStore">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Log.LogStore" />
      <apidata name="LogStore" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_LogStore" />
    </api>
    <api id="AllMembers.T:System.IO.Log.LogStore">
      <topicdata name="LogStore" group="list" subgroup="members" typeTopicId="T:System.IO.Log.LogStore" />
      <apidata name="LogStore" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IO.Log.LogStore.#ctor">
          <element api="M:System.IO.Log.LogStore.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle)" />
          <element api="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode)" />
          <element api="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)" />
          <element api="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
          <element api="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Security.AccessControl.FileSecurity)" />
        </element>
        <element api="P:System.IO.Log.LogStore.Archivable" />
        <element api="P:System.IO.Log.LogStore.BaseSequenceNumber" />
        <element api="Overload:System.IO.Log.LogStore.CreateLogArchiveSnapshot">
          <element api="M:System.IO.Log.LogStore.CreateLogArchiveSnapshot" />
          <element api="M:System.IO.Log.LogStore.CreateLogArchiveSnapshot(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)" />
        </element>
        <element api="M:System.IO.Log.LogStore.Delete(System.String)" />
        <element api="M:System.IO.Log.LogStore.Dispose" />
        <element api="P:System.IO.Log.LogStore.Extents" />
        <element api="P:System.IO.Log.LogStore.FreeBytes" />
        <element api="P:System.IO.Log.LogStore.Handle" />
        <element api="P:System.IO.Log.LogStore.LastSequenceNumber" />
        <element api="P:System.IO.Log.LogStore.Length" />
        <element api="P:System.IO.Log.LogStore.Policy" />
        <element api="M:System.IO.Log.LogStore.SetArchiveTail(System.IO.Log.SequenceNumber)" />
        <element api="P:System.IO.Log.LogStore.StreamCount" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="AllMembers_T_System_IO_Log_LogStore" />
    </api>
    <api id="Methods.T:System.IO.Log.LogStore">
      <topicdata name="LogStore" group="list" subgroup="Methods" typeTopicId="T:System.IO.Log.LogStore" />
      <apidata name="LogStore" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.IO.Log.LogStore.CreateLogArchiveSnapshot">
          <element api="M:System.IO.Log.LogStore.CreateLogArchiveSnapshot" />
          <element api="M:System.IO.Log.LogStore.CreateLogArchiveSnapshot(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)" />
        </element>
        <element api="M:System.IO.Log.LogStore.Delete(System.String)" />
        <element api="M:System.IO.Log.LogStore.Dispose" />
        <element api="M:System.IO.Log.LogStore.SetArchiveTail(System.IO.Log.SequenceNumber)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Methods_T_System_IO_Log_LogStore" />
    </api>
    <api id="Properties.T:System.IO.Log.LogStore">
      <topicdata name="LogStore" group="list" subgroup="Properties" typeTopicId="T:System.IO.Log.LogStore" />
      <apidata name="LogStore" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Log.LogStore.Archivable" />
        <element api="P:System.IO.Log.LogStore.BaseSequenceNumber" />
        <element api="P:System.IO.Log.LogStore.Extents" />
        <element api="P:System.IO.Log.LogStore.FreeBytes" />
        <element api="P:System.IO.Log.LogStore.Handle" />
        <element api="P:System.IO.Log.LogStore.LastSequenceNumber" />
        <element api="P:System.IO.Log.LogStore.Length" />
        <element api="P:System.IO.Log.LogStore.Policy" />
        <element api="P:System.IO.Log.LogStore.StreamCount" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Properties_T_System_IO_Log_LogStore" />
    </api>
    <api id="Overload:System.IO.Log.LogStore.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.LogStore" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Log.LogStore.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle)" />
        <element api="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode)" />
        <element api="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)" />
        <element api="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
        <element api="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Security.AccessControl.FileSecurity)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_LogStore_ctor" />
    </api>
    <api id="Overload:System.IO.Log.LogStore.CreateLogArchiveSnapshot">
      <topicdata name="CreateLogArchiveSnapshot" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.LogStore" />
      <apidata name="CreateLogArchiveSnapshot" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.LogStore.CreateLogArchiveSnapshot" />
        <element api="M:System.IO.Log.LogStore.CreateLogArchiveSnapshot(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_LogStore_CreateLogArchiveSnapshot" />
    </api>
    <api id="M:System.IO.Log.LogStore.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.LogStore.#ctor" />
      <parameters>
        <parameter name="handle">
          <type api="T:Microsoft.Win32.SafeHandles.SafeFileHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="C_System_IO_Log_LogStore_ctor_1_63ab46a4" />
    </api>
    <api id="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.LogStore.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.IO.FileMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="C_System_IO_Log_LogStore_ctor_2_0564b5bc" />
    </api>
    <api id="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.LogStore.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.IO.FileMode" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.IO.FileAccess" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="C_System_IO_Log_LogStore_ctor_3_0568fdc4" />
    </api>
    <api id="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.LogStore.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.IO.FileMode" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.IO.FileAccess" ref="false" />
        </parameter>
        <parameter name="share">
          <type api="T:System.IO.FileShare" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="C_System_IO_Log_LogStore_ctor_4_d1e8bb4f" />
    </api>
    <api id="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Security.AccessControl.FileSecurity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.LogStore.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.IO.FileMode" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.IO.FileAccess" ref="false" />
        </parameter>
        <parameter name="share">
          <type api="T:System.IO.FileShare" ref="false" />
        </parameter>
        <parameter name="fileSecurity">
          <type api="T:System.Security.AccessControl.FileSecurity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="C_System_IO_Log_LogStore_ctor_5_db3d17b7" />
    </api>
    <api id="P:System.IO.Log.LogStore.Archivable">
      <topicdata group="api" />
      <apidata name="Archivable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogStore_Archivable" />
    </api>
    <api id="P:System.IO.Log.LogStore.BaseSequenceNumber">
      <topicdata group="api" />
      <apidata name="BaseSequenceNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogStore_BaseSequenceNumber" />
    </api>
    <api id="M:System.IO.Log.LogStore.CreateLogArchiveSnapshot">
      <topicdata group="api" />
      <apidata name="CreateLogArchiveSnapshot" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogStore.CreateLogArchiveSnapshot" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.IO.Log.LogArchiveSnapshot" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogStore_CreateLogArchiveSnapshot" />
    </api>
    <api id="M:System.IO.Log.LogStore.CreateLogArchiveSnapshot(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="CreateLogArchiveSnapshot" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.LogStore.CreateLogArchiveSnapshot" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="first">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="last">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.LogArchiveSnapshot" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogStore_CreateLogArchiveSnapshot_2_9701db79" />
    </api>
    <api id="M:System.IO.Log.LogStore.Delete(System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.PermissionSetAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>FullTrust</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_IO_Log_LogStore_Delete_1_72eac341" />
    </api>
    <api id="M:System.IO.Log.LogStore.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogStore_Dispose" />
    </api>
    <api id="P:System.IO.Log.LogStore.Extents">
      <topicdata group="api" />
      <apidata name="Extents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.LogExtentCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogStore_Extents" />
    </api>
    <api id="P:System.IO.Log.LogStore.FreeBytes">
      <topicdata group="api" />
      <apidata name="FreeBytes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogStore_FreeBytes" />
    </api>
    <api id="P:System.IO.Log.LogStore.Handle">
      <topicdata group="api" />
      <apidata name="Handle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:Microsoft.Win32.SafeHandles.SafeFileHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogStore_Handle" />
    </api>
    <api id="P:System.IO.Log.LogStore.LastSequenceNumber">
      <topicdata group="api" />
      <apidata name="LastSequenceNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogStore_LastSequenceNumber" />
    </api>
    <api id="P:System.IO.Log.LogStore.Length">
      <topicdata group="api" />
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogStore_Length" />
    </api>
    <api id="P:System.IO.Log.LogStore.Policy">
      <topicdata group="api" />
      <apidata name="Policy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.LogPolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogStore_Policy" />
    </api>
    <api id="M:System.IO.Log.LogStore.SetArchiveTail(System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="SetArchiveTail" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="archiveTail">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="M_System_IO_Log_LogStore_SetArchiveTail_1_2b312b3e" />
    </api>
    <api id="P:System.IO.Log.LogStore.StreamCount">
      <topicdata group="api" />
      <apidata name="StreamCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.LogStore" ref="true" />
      </containers>
      <file name="P_System_IO_Log_LogStore_StreamCount" />
    </api>
    <api id="T:System.IO.Log.PolicyUnit">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Log.PolicyUnit" />
      <apidata name="PolicyUnit" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_PolicyUnit" />
    </api>
    <api id="AllMembers.T:System.IO.Log.PolicyUnit">
      <topicdata name="PolicyUnit" group="list" subgroup="members" typeTopicId="T:System.IO.Log.PolicyUnit" />
      <apidata name="PolicyUnit" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IO.Log.PolicyUnit.#ctor(System.Int64,System.IO.Log.PolicyUnitType)" />
        <element api="M:System.IO.Log.PolicyUnit.Equals(System.Object)" />
        <element api="M:System.IO.Log.PolicyUnit.Extents(System.Int64)" />
        <element api="M:System.IO.Log.PolicyUnit.GetHashCode" />
        <element api="M:System.IO.Log.PolicyUnit.op_Equality(System.IO.Log.PolicyUnit,System.IO.Log.PolicyUnit)" />
        <element api="M:System.IO.Log.PolicyUnit.op_Inequality(System.IO.Log.PolicyUnit,System.IO.Log.PolicyUnit)" />
        <element api="M:System.IO.Log.PolicyUnit.Percentage(System.Int64)" />
        <element api="M:System.IO.Log.PolicyUnit.ToString" />
        <element api="P:System.IO.Log.PolicyUnit.Type" />
        <element api="P:System.IO.Log.PolicyUnit.Value" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="AllMembers_T_System_IO_Log_PolicyUnit" />
    </api>
    <api id="Methods.T:System.IO.Log.PolicyUnit">
      <topicdata name="PolicyUnit" group="list" subgroup="Methods" typeTopicId="T:System.IO.Log.PolicyUnit" />
      <apidata name="PolicyUnit" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.IO.Log.PolicyUnit.Equals(System.Object)" />
        <element api="M:System.IO.Log.PolicyUnit.Extents(System.Int64)" />
        <element api="M:System.IO.Log.PolicyUnit.GetHashCode" />
        <element api="M:System.IO.Log.PolicyUnit.op_Equality(System.IO.Log.PolicyUnit,System.IO.Log.PolicyUnit)" />
        <element api="M:System.IO.Log.PolicyUnit.op_Inequality(System.IO.Log.PolicyUnit,System.IO.Log.PolicyUnit)" />
        <element api="M:System.IO.Log.PolicyUnit.Percentage(System.Int64)" />
        <element api="M:System.IO.Log.PolicyUnit.ToString" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Methods_T_System_IO_Log_PolicyUnit" />
    </api>
    <api id="Properties.T:System.IO.Log.PolicyUnit">
      <topicdata name="PolicyUnit" group="list" subgroup="Properties" typeTopicId="T:System.IO.Log.PolicyUnit" />
      <apidata name="PolicyUnit" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="P:System.IO.Log.PolicyUnit.Type" />
        <element api="P:System.IO.Log.PolicyUnit.Value" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Properties_T_System_IO_Log_PolicyUnit" />
    </api>
    <api id="M:System.IO.Log.PolicyUnit.#ctor(System.Int64,System.IO.Log.PolicyUnitType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.IO.Log.PolicyUnitType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.PolicyUnit" ref="false" />
      </containers>
      <file name="C_System_IO_Log_PolicyUnit_ctor_2_1a957eca" />
    </api>
    <api id="M:System.IO.Log.PolicyUnit.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.PolicyUnit" ref="false" />
      </containers>
      <file name="M_System_IO_Log_PolicyUnit_Equals_1_2572741a" />
    </api>
    <api id="M:System.IO.Log.PolicyUnit.Extents(System.Int64)">
      <topicdata group="api" />
      <apidata name="Extents" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.PolicyUnit" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.PolicyUnit" ref="false" />
      </containers>
      <file name="M_System_IO_Log_PolicyUnit_Extents_1_86267ecb" />
    </api>
    <api id="M:System.IO.Log.PolicyUnit.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.PolicyUnit" ref="false" />
      </containers>
      <file name="M_System_IO_Log_PolicyUnit_GetHashCode" />
    </api>
    <api id="M:System.IO.Log.PolicyUnit.op_Equality(System.IO.Log.PolicyUnit,System.IO.Log.PolicyUnit)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.IO.Log.PolicyUnit" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.IO.Log.PolicyUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.PolicyUnit" ref="false" />
      </containers>
      <file name="M_System_IO_Log_PolicyUnit_op_Equality_2_868c1392" />
    </api>
    <api id="M:System.IO.Log.PolicyUnit.op_Inequality(System.IO.Log.PolicyUnit,System.IO.Log.PolicyUnit)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.IO.Log.PolicyUnit" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.IO.Log.PolicyUnit" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.PolicyUnit" ref="false" />
      </containers>
      <file name="M_System_IO_Log_PolicyUnit_op_Inequality_2_868c1392" />
    </api>
    <api id="M:System.IO.Log.PolicyUnit.Percentage(System.Int64)">
      <topicdata group="api" />
      <apidata name="Percentage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Log.PolicyUnit" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.PolicyUnit" ref="false" />
      </containers>
      <file name="M_System_IO_Log_PolicyUnit_Percentage_1_86267ecb" />
    </api>
    <api id="M:System.IO.Log.PolicyUnit.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.PolicyUnit" ref="false" />
      </containers>
      <file name="M_System_IO_Log_PolicyUnit_ToString" />
    </api>
    <api id="P:System.IO.Log.PolicyUnit.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.PolicyUnitType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.PolicyUnit" ref="false" />
      </containers>
      <file name="P_System_IO_Log_PolicyUnit_Type" />
    </api>
    <api id="P:System.IO.Log.PolicyUnit.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.PolicyUnit" ref="false" />
      </containers>
      <file name="P_System_IO_Log_PolicyUnit_Value" />
    </api>
    <api id="T:System.IO.Log.PolicyUnitType">
      <topicdata group="api" />
      <apidata name="PolicyUnitType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.IO.Log.PolicyUnitType.Extents" />
        <element api="F:System.IO.Log.PolicyUnitType.Percentage" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_PolicyUnitType" />
    </api>
    <api id="F:System.IO.Log.PolicyUnitType.Extents">
      <topicdata group="api" notopic="" />
      <apidata name="Extents" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Log.PolicyUnitType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.PolicyUnitType" ref="false" />
      </containers>
      <file name="F_System_IO_Log_PolicyUnitType_Extents" />
    </api>
    <api id="F:System.IO.Log.PolicyUnitType.Percentage">
      <topicdata group="api" notopic="" />
      <apidata name="Percentage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Log.PolicyUnitType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.PolicyUnitType" ref="false" />
      </containers>
      <file name="F_System_IO_Log_PolicyUnitType_Percentage" />
    </api>
    <api id="T:System.IO.Log.RecordAppendOptions">
      <topicdata group="api" />
      <apidata name="RecordAppendOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.IO.Log.RecordAppendOptions.None" />
        <element api="F:System.IO.Log.RecordAppendOptions.ForceAppend" />
        <element api="F:System.IO.Log.RecordAppendOptions.ForceFlush" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_IO_Log_RecordAppendOptions" />
    </api>
    <api id="F:System.IO.Log.RecordAppendOptions.ForceAppend">
      <topicdata group="api" notopic="" />
      <apidata name="ForceAppend" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
      </containers>
      <file name="F_System_IO_Log_RecordAppendOptions_ForceAppend" />
    </api>
    <api id="F:System.IO.Log.RecordAppendOptions.ForceFlush">
      <topicdata group="api" notopic="" />
      <apidata name="ForceFlush" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
      </containers>
      <file name="F_System_IO_Log_RecordAppendOptions_ForceFlush" />
    </api>
    <api id="F:System.IO.Log.RecordAppendOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.RecordAppendOptions" ref="false" />
      </containers>
      <file name="F_System_IO_Log_RecordAppendOptions_None" />
    </api>
    <api id="T:System.IO.Log.ReservationCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Log.ReservationCollection" />
      <apidata name="ReservationCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_ReservationCollection" />
    </api>
    <api id="AllMembers.T:System.IO.Log.ReservationCollection">
      <topicdata name="ReservationCollection" group="list" subgroup="members" typeTopicId="T:System.IO.Log.ReservationCollection" />
      <apidata name="ReservationCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Log.ReservationCollection.#ctor" />
        <element api="M:System.IO.Log.ReservationCollection.Add(System.Int64)" />
        <element api="M:System.IO.Log.ReservationCollection.Clear" />
        <element api="M:System.IO.Log.ReservationCollection.Contains(System.Int64)" />
        <element api="M:System.IO.Log.ReservationCollection.CopyTo(System.Int64[],System.Int32)" />
        <element api="P:System.IO.Log.ReservationCollection.Count" />
        <element api="M:System.IO.Log.ReservationCollection.Finalize" />
        <element api="M:System.IO.Log.ReservationCollection.FreeReservation(System.Int64)" />
        <element api="M:System.IO.Log.ReservationCollection.GetBestMatchingReservation(System.Int64)" />
        <element api="M:System.IO.Log.ReservationCollection.GetEnumerator" />
        <element api="P:System.IO.Log.ReservationCollection.IsReadOnly" />
        <element api="M:System.IO.Log.ReservationCollection.MakeReservation(System.Int64)" />
        <element api="M:System.IO.Log.ReservationCollection.Remove(System.Int64)" />
        <element api="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" />
        <element api="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" />
        <element api="M:System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="AllMembers_T_System_IO_Log_ReservationCollection" />
    </api>
    <api id="Methods.T:System.IO.Log.ReservationCollection">
      <topicdata name="ReservationCollection" group="list" subgroup="Methods" typeTopicId="T:System.IO.Log.ReservationCollection" />
      <apidata name="ReservationCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Log.ReservationCollection.Add(System.Int64)" />
        <element api="M:System.IO.Log.ReservationCollection.Clear" />
        <element api="M:System.IO.Log.ReservationCollection.Contains(System.Int64)" />
        <element api="M:System.IO.Log.ReservationCollection.CopyTo(System.Int64[],System.Int32)" />
        <element api="M:System.IO.Log.ReservationCollection.Finalize" />
        <element api="M:System.IO.Log.ReservationCollection.FreeReservation(System.Int64)" />
        <element api="M:System.IO.Log.ReservationCollection.GetBestMatchingReservation(System.Int64)" />
        <element api="M:System.IO.Log.ReservationCollection.GetEnumerator" />
        <element api="M:System.IO.Log.ReservationCollection.MakeReservation(System.Int64)" />
        <element api="M:System.IO.Log.ReservationCollection.Remove(System.Int64)" />
        <element api="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" />
        <element api="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" />
        <element api="M:System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Methods_T_System_IO_Log_ReservationCollection" />
    </api>
    <api id="Properties.T:System.IO.Log.ReservationCollection">
      <topicdata name="ReservationCollection" group="list" subgroup="Properties" typeTopicId="T:System.IO.Log.ReservationCollection" />
      <apidata name="ReservationCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Log.ReservationCollection.Count" />
        <element api="P:System.IO.Log.ReservationCollection.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Properties_T_System_IO_Log_ReservationCollection" />
    </api>
    <api id="M:System.IO.Log.ReservationCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </containers>
      <file name="C_System_IO_Log_ReservationCollection_ctor" />
    </api>
    <api id="M:System.IO.Log.ReservationCollection.Add(System.Int64)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="size">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_ReservationCollection_Add_1_86267ecb" />
    </api>
    <api id="M:System.IO.Log.ReservationCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_ReservationCollection_Clear" />
    </api>
    <api id="M:System.IO.Log.ReservationCollection.Contains(System.Int64)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="size">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_ReservationCollection_Contains_1_86267ecb" />
    </api>
    <api id="M:System.IO.Log.ReservationCollection.CopyTo(System.Int64[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Int64" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_ReservationCollection_CopyTo_2_7f0d0a49" />
    </api>
    <api id="P:System.IO.Log.ReservationCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </containers>
      <file name="P_System_IO_Log_ReservationCollection_Count" />
    </api>
    <api id="M:System.IO.Log.ReservationCollection.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_ReservationCollection_Finalize" />
    </api>
    <api id="M:System.IO.Log.ReservationCollection.FreeReservation(System.Int64)">
      <topicdata group="api" />
      <apidata name="FreeReservation" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="size">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_ReservationCollection_FreeReservation_1_86267ecb" />
    </api>
    <api id="M:System.IO.Log.ReservationCollection.GetBestMatchingReservation(System.Int64)">
      <topicdata group="api" />
      <apidata name="GetBestMatchingReservation" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="size">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_ReservationCollection_GetBestMatchingReservation_1_86267ecb" />
    </api>
    <api id="M:System.IO.Log.ReservationCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_ReservationCollection_GetEnumerator" />
    </api>
    <api id="P:System.IO.Log.ReservationCollection.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </containers>
      <file name="P_System_IO_Log_ReservationCollection_IsReadOnly" />
    </api>
    <api id="M:System.IO.Log.ReservationCollection.MakeReservation(System.Int64)">
      <topicdata group="api" />
      <apidata name="MakeReservation" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="size">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_ReservationCollection_MakeReservation_1_86267ecb" />
    </api>
    <api id="M:System.IO.Log.ReservationCollection.Remove(System.Int64)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_ReservationCollection_Remove_1_86267ecb" />
    </api>
    <api id="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)">
      <topicdata group="api" />
      <apidata name="ReservationFreed" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="size">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_ReservationCollection_ReservationFreed_1_86267ecb" />
    </api>
    <api id="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)">
      <topicdata group="api" />
      <apidata name="ReservationMade" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="size">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_ReservationCollection_ReservationMade_1_86267ecb" />
    </api>
    <api id="M:System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationCollection" ref="true" />
      </containers>
      <file name="M_System_IO_Log_ReservationCollection_System_Collections_IEnumerable_GetEnumerator" />
    </api>
    <api id="T:System.IO.Log.ReservationNotFoundException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Log.ReservationNotFoundException" />
      <apidata name="ReservationNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ArgumentException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_ReservationNotFoundException" />
    </api>
    <api id="AllMembers.T:System.IO.Log.ReservationNotFoundException">
      <topicdata name="ReservationNotFoundException" group="list" subgroup="members" typeTopicId="T:System.IO.Log.ReservationNotFoundException" />
      <apidata name="ReservationNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.ArgumentException.Message" />
        <element api="P:System.ArgumentException.ParamName" />
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.IO.Log.ReservationNotFoundException.#ctor">
          <element api="M:System.IO.Log.ReservationNotFoundException.#ctor" />
          <element api="M:System.IO.Log.ReservationNotFoundException.#ctor(System.String)" />
          <element api="M:System.IO.Log.ReservationNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IO.Log.ReservationNotFoundException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="AllMembers_T_System_IO_Log_ReservationNotFoundException" />
    </api>
    <api id="Overload:System.IO.Log.ReservationNotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.ReservationNotFoundException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Log.ReservationNotFoundException.#ctor" />
        <element api="M:System.IO.Log.ReservationNotFoundException.#ctor(System.String)" />
        <element api="M:System.IO.Log.ReservationNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IO.Log.ReservationNotFoundException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationNotFoundException" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_ReservationNotFoundException_ctor" />
    </api>
    <api id="M:System.IO.Log.ReservationNotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.ReservationNotFoundException.#ctor" />
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationNotFoundException" ref="true" />
      </containers>
      <file name="C_System_IO_Log_ReservationNotFoundException_ctor" />
    </api>
    <api id="M:System.IO.Log.ReservationNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IO.Log.ReservationNotFoundException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationNotFoundException" ref="true" />
      </containers>
      <file name="C_System_IO_Log_ReservationNotFoundException_ctor_2_4075724f" />
    </api>
    <api id="M:System.IO.Log.ReservationNotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.ReservationNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationNotFoundException" ref="true" />
      </containers>
      <file name="C_System_IO_Log_ReservationNotFoundException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.IO.Log.ReservationNotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.ReservationNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.ReservationNotFoundException" ref="true" />
      </containers>
      <file name="C_System_IO_Log_ReservationNotFoundException_ctor_2_3ec47892" />
    </api>
    <api id="T:System.IO.Log.SequenceFullException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Log.SequenceFullException" />
      <apidata name="SequenceFullException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_SequenceFullException" />
    </api>
    <api id="AllMembers.T:System.IO.Log.SequenceFullException">
      <topicdata name="SequenceFullException" group="list" subgroup="members" typeTopicId="T:System.IO.Log.SequenceFullException" />
      <apidata name="SequenceFullException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.IO.Log.SequenceFullException.#ctor">
          <element api="M:System.IO.Log.SequenceFullException.#ctor" />
          <element api="M:System.IO.Log.SequenceFullException.#ctor(System.String)" />
          <element api="M:System.IO.Log.SequenceFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IO.Log.SequenceFullException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="AllMembers_T_System_IO_Log_SequenceFullException" />
    </api>
    <api id="Overload:System.IO.Log.SequenceFullException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.SequenceFullException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Log.SequenceFullException.#ctor" />
        <element api="M:System.IO.Log.SequenceFullException.#ctor(System.String)" />
        <element api="M:System.IO.Log.SequenceFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IO.Log.SequenceFullException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceFullException" ref="true" />
      </containers>
      <file name="O_T_System_IO_Log_SequenceFullException_ctor" />
    </api>
    <api id="M:System.IO.Log.SequenceFullException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.SequenceFullException.#ctor" />
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceFullException" ref="true" />
      </containers>
      <file name="C_System_IO_Log_SequenceFullException_ctor" />
    </api>
    <api id="M:System.IO.Log.SequenceFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IO.Log.SequenceFullException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceFullException" ref="true" />
      </containers>
      <file name="C_System_IO_Log_SequenceFullException_ctor_2_4075724f" />
    </api>
    <api id="M:System.IO.Log.SequenceFullException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.SequenceFullException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceFullException" ref="true" />
      </containers>
      <file name="C_System_IO_Log_SequenceFullException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.IO.Log.SequenceFullException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Log.SequenceFullException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceFullException" ref="true" />
      </containers>
      <file name="C_System_IO_Log_SequenceFullException_ctor_2_3ec47892" />
    </api>
    <api id="T:System.IO.Log.SequenceNumber">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Log.SequenceNumber" />
      <apidata name="SequenceNumber" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" layout="sequential" format="ansi" />
      <implements>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:System.IO.Log.SequenceNumber" ref="false" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_SequenceNumber" />
    </api>
    <api id="AllMembers.T:System.IO.Log.SequenceNumber">
      <topicdata name="SequenceNumber" group="list" subgroup="members" typeTopicId="T:System.IO.Log.SequenceNumber" />
      <apidata name="SequenceNumber" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.IO.Log.SequenceNumber.#ctor(System.Byte[])" />
        <element api="M:System.IO.Log.SequenceNumber.CompareTo(System.IO.Log.SequenceNumber)" />
        <element api="Overload:System.IO.Log.SequenceNumber.Equals">
          <element api="M:System.IO.Log.SequenceNumber.Equals(System.Object)" />
          <element api="M:System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)" />
        </element>
        <element api="M:System.IO.Log.SequenceNumber.GetBytes" />
        <element api="M:System.IO.Log.SequenceNumber.GetHashCode" />
        <element api="P:System.IO.Log.SequenceNumber.Invalid" />
        <element api="M:System.IO.Log.SequenceNumber.op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)" />
        <element api="M:System.IO.Log.SequenceNumber.op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)" />
        <element api="M:System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)" />
        <element api="M:System.IO.Log.SequenceNumber.op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)" />
        <element api="M:System.IO.Log.SequenceNumber.op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)" />
        <element api="M:System.IO.Log.SequenceNumber.op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="AllMembers_T_System_IO_Log_SequenceNumber" />
    </api>
    <api id="Methods.T:System.IO.Log.SequenceNumber">
      <topicdata name="SequenceNumber" group="list" subgroup="Methods" typeTopicId="T:System.IO.Log.SequenceNumber" />
      <apidata name="SequenceNumber" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.IO.Log.SequenceNumber.CompareTo(System.IO.Log.SequenceNumber)" />
        <element api="Overload:System.IO.Log.SequenceNumber.Equals">
          <element api="M:System.IO.Log.SequenceNumber.Equals(System.Object)" />
          <element api="M:System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)" />
        </element>
        <element api="M:System.IO.Log.SequenceNumber.GetBytes" />
        <element api="M:System.IO.Log.SequenceNumber.GetHashCode" />
        <element api="M:System.IO.Log.SequenceNumber.op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)" />
        <element api="M:System.IO.Log.SequenceNumber.op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)" />
        <element api="M:System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)" />
        <element api="M:System.IO.Log.SequenceNumber.op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)" />
        <element api="M:System.IO.Log.SequenceNumber.op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)" />
        <element api="M:System.IO.Log.SequenceNumber.op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Methods_T_System_IO_Log_SequenceNumber" />
    </api>
    <api id="Properties.T:System.IO.Log.SequenceNumber">
      <topicdata name="SequenceNumber" group="list" subgroup="Properties" typeTopicId="T:System.IO.Log.SequenceNumber" />
      <apidata name="SequenceNumber" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" layout="sequential" format="ansi" />
      <elements>
        <element api="P:System.IO.Log.SequenceNumber.Invalid" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Properties_T_System_IO_Log_SequenceNumber" />
    </api>
    <api id="Overload:System.IO.Log.SequenceNumber.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.IO.Log.SequenceNumber" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Log.SequenceNumber.Equals(System.Object)" />
        <element api="M:System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </containers>
      <file name="O_T_System_IO_Log_SequenceNumber_Equals" />
    </api>
    <api id="M:System.IO.Log.SequenceNumber.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="sequenceNumber">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </containers>
      <file name="C_System_IO_Log_SequenceNumber_ctor_1_17d539e7" />
    </api>
    <api id="M:System.IO.Log.SequenceNumber.CompareTo(System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:System.IO.Log.SequenceNumber" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </containers>
      <file name="M_System_IO_Log_SequenceNumber_CompareTo_1_2b312b3e" />
    </api>
    <api id="M:System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.SequenceNumber.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </containers>
      <file name="M_System_IO_Log_SequenceNumber_Equals_1_2b312b3e" />
    </api>
    <api id="M:System.IO.Log.SequenceNumber.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Log.SequenceNumber.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="other">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </containers>
      <file name="M_System_IO_Log_SequenceNumber_Equals_1_2572741a" />
    </api>
    <api id="M:System.IO.Log.SequenceNumber.GetBytes">
      <topicdata group="api" />
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </containers>
      <file name="M_System_IO_Log_SequenceNumber_GetBytes" />
    </api>
    <api id="M:System.IO.Log.SequenceNumber.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </containers>
      <file name="M_System_IO_Log_SequenceNumber_GetHashCode" />
    </api>
    <api id="P:System.IO.Log.SequenceNumber.Invalid">
      <topicdata group="api" />
      <apidata name="Invalid" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </containers>
      <file name="P_System_IO_Log_SequenceNumber_Invalid" />
    </api>
    <api id="M:System.IO.Log.SequenceNumber.op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c1">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="c2">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </containers>
      <file name="M_System_IO_Log_SequenceNumber_op_Equality_2_9701db79" />
    </api>
    <api id="M:System.IO.Log.SequenceNumber.op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c1">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="c2">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </containers>
      <file name="M_System_IO_Log_SequenceNumber_op_GreaterThan_2_9701db79" />
    </api>
    <api id="M:System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c1">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="c2">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </containers>
      <file name="M_System_IO_Log_SequenceNumber_op_GreaterThanOrEqual_2_9701db79" />
    </api>
    <api id="M:System.IO.Log.SequenceNumber.op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c1">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="c2">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </containers>
      <file name="M_System_IO_Log_SequenceNumber_op_Inequality_2_9701db79" />
    </api>
    <api id="M:System.IO.Log.SequenceNumber.op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c1">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="c2">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </containers>
      <file name="M_System_IO_Log_SequenceNumber_op_LessThan_2_9701db79" />
    </api>
    <api id="M:System.IO.Log.SequenceNumber.op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c1">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
        <parameter name="c2">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </containers>
      <file name="M_System_IO_Log_SequenceNumber_op_LessThanOrEqual_2_9701db79" />
    </api>
    <api id="T:System.IO.Log.TailPinnedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.IO.Log.TailPinnedEventArgs" />
      <apidata name="TailPinnedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="T_System_IO_Log_TailPinnedEventArgs" />
    </api>
    <api id="AllMembers.T:System.IO.Log.TailPinnedEventArgs">
      <topicdata name="TailPinnedEventArgs" group="list" subgroup="members" typeTopicId="T:System.IO.Log.TailPinnedEventArgs" />
      <apidata name="TailPinnedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.Log.TailPinnedEventArgs.#ctor(System.IO.Log.SequenceNumber)" />
        <element api="P:System.IO.Log.TailPinnedEventArgs.TargetSequenceNumber" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="AllMembers_T_System_IO_Log_TailPinnedEventArgs" />
    </api>
    <api id="Properties.T:System.IO.Log.TailPinnedEventArgs">
      <topicdata name="TailPinnedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.IO.Log.TailPinnedEventArgs" />
      <apidata name="TailPinnedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.IO.Log.TailPinnedEventArgs.TargetSequenceNumber" />
      </elements>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log" />
        <namespace api="N:System.IO.Log" />
      </containers>
      <file name="Properties_T_System_IO_Log_TailPinnedEventArgs" />
    </api>
    <api id="M:System.IO.Log.TailPinnedEventArgs.#ctor(System.IO.Log.SequenceNumber)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="sequenceNumber">
          <type api="T:System.IO.Log.SequenceNumber" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.TailPinnedEventArgs" ref="true" />
      </containers>
      <file name="C_System_IO_Log_TailPinnedEventArgs_ctor_1_1472eccb" />
    </api>
    <api id="P:System.IO.Log.TailPinnedEventArgs.TargetSequenceNumber">
      <topicdata group="api" />
      <apidata name="TargetSequenceNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IO.Log.SequenceNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IO.Log" module="System.IO.Log">
          <noAptca />
        </library>
        <namespace api="N:System.IO.Log" />
        <type api="T:System.IO.Log.TailPinnedEventArgs" ref="true" />
      </containers>
      <file name="P_System_IO_Log_TailPinnedEventArgs_TargetSequenceNumber" />
    </api>
  </apis>
</reflection>