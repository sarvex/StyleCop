<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.DirectoryServices">
      <assemblydata version="2.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.DirectoryServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.DirectoryServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.DirectoryServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>F:\RedBits\Tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>2.0.50727.1426</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>2.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>2.0.50727.1426</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.FileIOPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="AllFiles">
            <type api="T:System.Security.Permissions.FileIOPermissionAccess" ref="false" />
            <enumValue>
              <field name="PathDiscovery" />
            </enumValue>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="SkipVerification">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.EnvironmentPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Net.DnsPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="T:System.DirectoryServices.ActiveDirectoryAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      <apidata name="ActiveDirectoryAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectoryAccessRule" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectoryAccessRule">
      <topicdata name="ActiveDirectoryAccessRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      <apidata name="ActiveDirectoryAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectoryAccessRule" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectoryAccessRule">
      <topicdata name="ActiveDirectoryAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      <apidata name="ActiveDirectoryAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectoryAccessRule" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectoryAccessRule_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectoryAccessRule_ctor_3_50ebb2fd" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectoryAccessRule_ctor_4_1eb1e0ff" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectoryAccessRule_ctor_5_59db4af6" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectoryAccessRule_ctor_4_e9a8a192" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectoryAccessRule_ctor_5_e116deec" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectoryAccessRule_ctor_6_f6cf7712" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryRights" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectoryAccessRule_ActiveDirectoryRights" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType">
      <topicdata group="api" />
      <apidata name="InheritanceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectoryAccessRule_InheritanceType" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectoryAuditRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      <apidata name="ActiveDirectoryAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.ObjectAuditRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectoryAuditRule" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectoryAuditRule">
      <topicdata name="ActiveDirectoryAuditRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      <apidata name="ActiveDirectoryAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectoryAuditRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAuditRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AuditRule.AuditFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectoryAuditRule" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectoryAuditRule">
      <topicdata name="ActiveDirectoryAuditRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      <apidata name="ActiveDirectoryAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAuditRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAuditRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AuditRule.AuditFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectoryAuditRule" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectoryAuditRule_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectoryAuditRule_ctor_3_34a5f766" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectoryAuditRule_ctor_4_680b9d47" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectoryAuditRule_ctor_5_ca2ec2df" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectoryAuditRule_ctor_4_101c8da5" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectoryAuditRule_ctor_5_2a5b3f68" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectoryAuditRule_ctor_6_d4460ac7" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectoryAuditRule.ActiveDirectoryRights">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryRights" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectoryAuditRule_ActiveDirectoryRights" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectoryAuditRule.InheritanceType">
      <topicdata group="api" />
      <apidata name="InheritanceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectoryAuditRule_InheritanceType" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectoryRights">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryRights" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.Delete" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ReadControl" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.WriteDacl" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.WriteOwner" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.Synchronize" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.AccessSystemSecurity" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.GenericRead" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.GenericWrite" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.GenericExecute" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.GenericAll" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.CreateChild" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.DeleteChild" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ListChildren" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.Self" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ReadProperty" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.WriteProperty" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.DeleteTree" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ListObject" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ExtendedRight" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectoryRights" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.AccessSystemSecurity">
      <topicdata group="api" notopic="" />
      <apidata name="AccessSystemSecurity" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>16777216</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_AccessSystemSecurity" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.CreateChild">
      <topicdata group="api" notopic="" />
      <apidata name="CreateChild" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_CreateChild" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.Delete">
      <topicdata group="api" notopic="" />
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>65536</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_Delete" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.DeleteChild">
      <topicdata group="api" notopic="" />
      <apidata name="DeleteChild" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_DeleteChild" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.DeleteTree">
      <topicdata group="api" notopic="" />
      <apidata name="DeleteTree" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_DeleteTree" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ExtendedRight">
      <topicdata group="api" notopic="" />
      <apidata name="ExtendedRight" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_ExtendedRight" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.GenericAll">
      <topicdata group="api" notopic="" />
      <apidata name="GenericAll" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>983551</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_GenericAll" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.GenericExecute">
      <topicdata group="api" notopic="" />
      <apidata name="GenericExecute" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>131076</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_GenericExecute" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.GenericRead">
      <topicdata group="api" notopic="" />
      <apidata name="GenericRead" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>131220</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_GenericRead" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.GenericWrite">
      <topicdata group="api" notopic="" />
      <apidata name="GenericWrite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>131112</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_GenericWrite" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ListChildren">
      <topicdata group="api" notopic="" />
      <apidata name="ListChildren" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_ListChildren" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ListObject">
      <topicdata group="api" notopic="" />
      <apidata name="ListObject" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_ListObject" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ReadControl">
      <topicdata group="api" notopic="" />
      <apidata name="ReadControl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>131072</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_ReadControl" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ReadProperty">
      <topicdata group="api" notopic="" />
      <apidata name="ReadProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_ReadProperty" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.Self">
      <topicdata group="api" notopic="" />
      <apidata name="Self" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_Self" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.Synchronize">
      <topicdata group="api" notopic="" />
      <apidata name="Synchronize" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>1048576</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_Synchronize" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.WriteDacl">
      <topicdata group="api" notopic="" />
      <apidata name="WriteDacl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>262144</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_WriteDacl" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.WriteOwner">
      <topicdata group="api" notopic="" />
      <apidata name="WriteOwner" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>524288</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_WriteOwner" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.WriteProperty">
      <topicdata group="api" notopic="" />
      <apidata name="WriteProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectoryRights_WriteProperty" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectorySecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="ActiveDirectorySecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectorySecurity" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity">
      <topicdata name="ActiveDirectorySecurity" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="ActiveDirectorySecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor" />
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRightType" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.GroupModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsContainer" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsDS" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.OwnerModified" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.Persist">
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetSecurityDescriptorBinaryForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetSecurityDescriptorSddlForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectorySecurity" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectorySecurity">
      <topicdata name="ActiveDirectorySecurity" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="ActiveDirectorySecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.Persist">
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetSecurityDescriptorBinaryForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetSecurityDescriptorSddlForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectorySecurity" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectorySecurity">
      <topicdata name="ActiveDirectorySecurity" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="ActiveDirectorySecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRightType" />
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType" />
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.GroupModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsContainer" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsDS" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.OwnerModified" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectorySecurity" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory">
      <topicdata name="AccessRuleFactory" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="AccessRuleFactory" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectorySecurity_AccessRuleFactory" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule">
      <topicdata name="AddAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="AddAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectorySecurity_AddAccessRule" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule">
      <topicdata name="AddAuditRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="AddAuditRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectorySecurity_AddAuditRule" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory">
      <topicdata name="AuditRuleFactory" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="AuditRuleFactory" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectorySecurity_AuditRuleFactory" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule">
      <topicdata name="RemoveAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="RemoveAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectorySecurity_RemoveAccessRule" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific">
      <topicdata name="RemoveAccessRuleSpecific" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="RemoveAccessRuleSpecific" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectorySecurity_RemoveAccessRuleSpecific" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule">
      <topicdata name="RemoveAuditRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="RemoveAuditRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectorySecurity_RemoveAuditRule" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific">
      <topicdata name="RemoveAuditRuleSpecific" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="RemoveAuditRuleSpecific" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectorySecurity_RemoveAuditRuleSpecific" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule">
      <topicdata name="ResetAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="ResetAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectorySecurity_ResetAccessRule" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule">
      <topicdata name="SetAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="SetAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectorySecurity_SetAccessRule" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule">
      <topicdata name="SetAuditRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="SetAuditRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectorySecurity_SetAuditRule" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.Persist">
      <topicdata name="Persist" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" allInherited="true" />
      <apidata name="Persist" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectorySecurity_Persist" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetSecurityDescriptorBinaryForm">
      <topicdata name="SetSecurityDescriptorBinaryForm" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" allInherited="true" />
      <apidata name="SetSecurityDescriptorBinaryForm" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectorySecurity_SetSecurityDescriptorBinaryForm" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetSecurityDescriptorSddlForm">
      <topicdata name="SetSecurityDescriptorSddlForm" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectorySecurity" allInherited="true" />
      <apidata name="SetSecurityDescriptorSddlForm" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectorySecurity_SetSecurityDescriptorSddlForm" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectorySecurity_ctor" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRightType">
      <topicdata group="api" />
      <apidata name="AccessRightType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AccessRightType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectorySecurity_AccessRightType" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name="AccessRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_AccessRuleFactory_6_6d53515a" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)">
      <topicdata group="api" />
      <apidata name="AccessRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)">
          <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="objectGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritedObjectGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_AccessRuleFactory_8_cb7e7567" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType">
      <topicdata group="api" />
      <apidata name="AccessRuleType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectorySecurity_AccessRuleType" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <topicdata group="api" />
      <apidata name="AddAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_AddAccessRule_1_9a56cc59" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <topicdata group="api" />
      <apidata name="AddAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_AddAuditRule_1_00abd93f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <topicdata group="api" />
      <apidata name="AuditRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="flags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_AuditRuleFactory_6_d8c7fe0c" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)">
      <topicdata group="api" />
      <apidata name="AuditRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)">
          <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="flags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="objectGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritedObjectGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_AuditRuleFactory_8_3389bf4e" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType">
      <topicdata group="api" />
      <apidata name="AuditRuleType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectorySecurity_AuditRuleType" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="ModifyAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="modification">
          <type api="T:System.Security.AccessControl.AccessControlModification" ref="false" />
        </parameter>
        <parameter name="rule">
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
        </parameter>
        <parameter name="modified" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_ModifyAccessRule_3_f0a5952e" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="ModifyAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="modification">
          <type api="T:System.Security.AccessControl.AccessControlModification" ref="false" />
        </parameter>
        <parameter name="rule">
          <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
        </parameter>
        <parameter name="modified" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_ModifyAuditRule_3_a6b2cd69" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
      <topicdata group="api" />
      <apidata name="PurgeAccessRules" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_PurgeAccessRules_1_f3c6969d" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
      <topicdata group="api" />
      <apidata name="PurgeAuditRules" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_PurgeAuditRules_1_f3c6969d" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name="RemoveAccess" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_RemoveAccess_2_08771102" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <topicdata group="api" />
      <apidata name="RemoveAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_RemoveAccessRule_1_9a56cc59" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <topicdata group="api" />
      <apidata name="RemoveAccessRuleSpecific" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_RemoveAccessRuleSpecific_1_9a56cc59" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)">
      <topicdata group="api" />
      <apidata name="RemoveAudit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_RemoveAudit_1_f3c6969d" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <topicdata group="api" />
      <apidata name="RemoveAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_RemoveAuditRule_1_00abd93f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <topicdata group="api" />
      <apidata name="RemoveAuditRuleSpecific" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_RemoveAuditRuleSpecific_1_00abd93f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <topicdata group="api" />
      <apidata name="ResetAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_ResetAccessRule_1_9a56cc59" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <topicdata group="api" />
      <apidata name="SetAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_SetAccessRule_1_9a56cc59" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <topicdata group="api" />
      <apidata name="SetAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectorySecurity_SetAuditRule_1_00abd93f" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectorySecurityInheritance">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySecurityInheritance" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.None" />
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.All" />
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Descendents" />
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.SelfAndChildren" />
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Children" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectorySecurityInheritance" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectorySecurityInheritance_All" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Children">
      <topicdata group="api" notopic="" />
      <apidata name="Children" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectorySecurityInheritance_Children" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Descendents">
      <topicdata group="api" notopic="" />
      <apidata name="Descendents" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectorySecurityInheritance_Descendents" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectorySecurityInheritance_None" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.SelfAndChildren">
      <topicdata group="api" notopic="" />
      <apidata name="SelfAndChildren" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectorySecurityInheritance_SelfAndChildren" />
    </api>
    <api id="T:System.DirectoryServices.AuthenticationTypes">
      <topicdata group="api" />
      <apidata name="AuthenticationTypes" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.AuthenticationTypes.None" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Secure" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Encryption" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.SecureSocketsLayer" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.ReadonlyServer" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Anonymous" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.FastBind" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Signing" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Sealing" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Delegation" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.ServerBind" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_AuthenticationTypes" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Anonymous">
      <topicdata group="api" notopic="" />
      <apidata name="Anonymous" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_AuthenticationTypes_Anonymous" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Delegation">
      <topicdata group="api" notopic="" />
      <apidata name="Delegation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_AuthenticationTypes_Delegation" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Encryption">
      <topicdata group="api" notopic="" />
      <apidata name="Encryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_AuthenticationTypes_Encryption" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.FastBind">
      <topicdata group="api" notopic="" />
      <apidata name="FastBind" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_AuthenticationTypes_FastBind" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_AuthenticationTypes_None" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.ReadonlyServer">
      <topicdata group="api" notopic="" />
      <apidata name="ReadonlyServer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_AuthenticationTypes_ReadonlyServer" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Sealing">
      <topicdata group="api" notopic="" />
      <apidata name="Sealing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_AuthenticationTypes_Sealing" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Secure">
      <topicdata group="api" notopic="" />
      <apidata name="Secure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_AuthenticationTypes_Secure" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.SecureSocketsLayer">
      <topicdata group="api" notopic="" />
      <apidata name="SecureSocketsLayer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_AuthenticationTypes_SecureSocketsLayer" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.ServerBind">
      <topicdata group="api" notopic="" />
      <apidata name="ServerBind" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>512</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_AuthenticationTypes_ServerBind" />
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Signing">
      <topicdata group="api" notopic="" />
      <apidata name="Signing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_AuthenticationTypes_Signing" />
    </api>
    <api id="T:System.DirectoryServices.CreateChildAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.CreateChildAccessRule" />
      <apidata name="CreateChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_CreateChildAccessRule" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.CreateChildAccessRule">
      <topicdata name="CreateChildAccessRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.CreateChildAccessRule" />
      <apidata name="CreateChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor">
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_CreateChildAccessRule" />
    </api>
    <api id="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.CreateChildAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_CreateChildAccessRule_ctor" />
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_CreateChildAccessRule_ctor_2_8b89dea7" />
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_CreateChildAccessRule_ctor_3_d0602791" />
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_CreateChildAccessRule_ctor_4_404fdd6a" />
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_CreateChildAccessRule_ctor_3_1e5126e4" />
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_CreateChildAccessRule_ctor_4_90020542" />
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_CreateChildAccessRule_ctor_5_d776bdcb" />
    </api>
    <api id="T:System.DirectoryServices.DeleteChildAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DeleteChildAccessRule" />
      <apidata name="DeleteChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_DeleteChildAccessRule" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DeleteChildAccessRule">
      <topicdata name="DeleteChildAccessRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DeleteChildAccessRule" />
      <apidata name="DeleteChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor">
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_DeleteChildAccessRule" />
    </api>
    <api id="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DeleteChildAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_DeleteChildAccessRule_ctor" />
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DeleteChildAccessRule_ctor_2_8b89dea7" />
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DeleteChildAccessRule_ctor_3_d0602791" />
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DeleteChildAccessRule_ctor_4_404fdd6a" />
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DeleteChildAccessRule_ctor_3_1e5126e4" />
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DeleteChildAccessRule_ctor_4_90020542" />
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DeleteChildAccessRule_ctor_5_d776bdcb" />
    </api>
    <api id="T:System.DirectoryServices.DeleteTreeAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DeleteTreeAccessRule" />
      <apidata name="DeleteTreeAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_DeleteTreeAccessRule" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DeleteTreeAccessRule">
      <topicdata name="DeleteTreeAccessRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DeleteTreeAccessRule" />
      <apidata name="DeleteTreeAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="Overload:System.DirectoryServices.DeleteTreeAccessRule.#ctor">
          <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_DeleteTreeAccessRule" />
    </api>
    <api id="Overload:System.DirectoryServices.DeleteTreeAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DeleteTreeAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_DeleteTreeAccessRule_ctor" />
    </api>
    <api id="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteTreeAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DeleteTreeAccessRule_ctor_2_8b89dea7" />
    </api>
    <api id="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteTreeAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DeleteTreeAccessRule_ctor_3_d0602791" />
    </api>
    <api id="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteTreeAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DeleteTreeAccessRule_ctor_4_404fdd6a" />
    </api>
    <api id="T:System.DirectoryServices.DereferenceAlias">
      <topicdata group="api" />
      <apidata name="DereferenceAlias" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.DereferenceAlias.Never" />
        <element api="F:System.DirectoryServices.DereferenceAlias.InSearching" />
        <element api="F:System.DirectoryServices.DereferenceAlias.FindingBaseObject" />
        <element api="F:System.DirectoryServices.DereferenceAlias.Always" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_DereferenceAlias" />
    </api>
    <api id="F:System.DirectoryServices.DereferenceAlias.Always">
      <topicdata group="api" notopic="" />
      <apidata name="Always" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_DereferenceAlias_Always" />
    </api>
    <api id="F:System.DirectoryServices.DereferenceAlias.FindingBaseObject">
      <topicdata group="api" notopic="" />
      <apidata name="FindingBaseObject" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_DereferenceAlias_FindingBaseObject" />
    </api>
    <api id="F:System.DirectoryServices.DereferenceAlias.InSearching">
      <topicdata group="api" notopic="" />
      <apidata name="InSearching" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_DereferenceAlias_InSearching" />
    </api>
    <api id="F:System.DirectoryServices.DereferenceAlias.Never">
      <topicdata group="api" notopic="" />
      <apidata name="Never" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_DereferenceAlias_Never" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryEntries">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntries" />
      <apidata name="DirectoryEntries" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_DirectoryEntries" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryEntries">
      <topicdata name="DirectoryEntries" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryEntries" />
      <apidata name="DirectoryEntries" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)" />
        <element api="Overload:System.DirectoryServices.DirectoryEntries.Find">
          <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String)" />
          <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntries.GetEnumerator" />
        <element api="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)" />
        <element api="P:System.DirectoryServices.DirectoryEntries.SchemaFilter" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_DirectoryEntries" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryEntries">
      <topicdata name="DirectoryEntries" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryEntries" />
      <apidata name="DirectoryEntries" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)" />
        <element api="Overload:System.DirectoryServices.DirectoryEntries.Find">
          <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String)" />
          <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntries.GetEnumerator" />
        <element api="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_DirectoryEntries" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryEntries">
      <topicdata name="DirectoryEntries" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryEntries" />
      <apidata name="DirectoryEntries" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.DirectoryEntries.SchemaFilter" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_DirectoryEntries" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntries.Find">
      <topicdata name="Find" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntries" />
      <apidata name="Find" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_DirectoryEntries_Find" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="schemaClassName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntries_Add_2_52fce4af" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.Find(System.String)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntries.Find" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntries_Find_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntries.Find" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="schemaClassName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntries_Find_2_52fce4af" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntries_GetEnumerator" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entry">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntries_Remove_1_b1b87265" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntries.SchemaFilter">
      <topicdata group="api" />
      <apidata name="SchemaFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_DirectoryEntries_SchemaFilter" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryEntry">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="DirectoryEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DirectoryEntryDesc</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Assert" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="UnmanagedCode" />
            </enumValue>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.EnvironmentPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Assert" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_DirectoryEntry" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryEntry">
      <topicdata name="DirectoryEntry" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="DirectoryEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)" />
        </element>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.#ctor">
          <element api="M:System.DirectoryServices.DirectoryEntry.#ctor" />
          <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.Object)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)" />
        </element>
        <element api="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Children" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Close" />
        <element api="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.CopyTo">
          <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntry.DeleteTree" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Exists(System.String)" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Guid" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])" />
        <element api="M:System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.MoveTo">
          <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)" />
        </element>
        <element api="P:System.DirectoryServices.DirectoryEntry.Name" />
        <element api="P:System.DirectoryServices.DirectoryEntry.NativeGuid" />
        <element api="P:System.DirectoryServices.DirectoryEntry.NativeObject" />
        <element api="P:System.DirectoryServices.DirectoryEntry.ObjectSecurity" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Options" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Parent" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Password" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Path" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Properties" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.RefreshCache">
          <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
          <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntry.Rename(System.String)" />
        <element api="P:System.DirectoryServices.DirectoryEntry.SchemaClassName" />
        <element api="P:System.DirectoryServices.DirectoryEntry.SchemaEntry" />
        <element api="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Username" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_DirectoryEntry" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryEntry">
      <topicdata name="DirectoryEntry" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="DirectoryEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Close" />
        <element api="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.CopyTo">
          <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntry.DeleteTree" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Exists(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])" />
        <element api="M:System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.MoveTo">
          <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.DirectoryEntry.RefreshCache">
          <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
          <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntry.Rename(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_DirectoryEntry" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryEntry">
      <topicdata name="DirectoryEntry" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="DirectoryEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Children" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Guid" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Name" />
        <element api="P:System.DirectoryServices.DirectoryEntry.NativeGuid" />
        <element api="P:System.DirectoryServices.DirectoryEntry.NativeObject" />
        <element api="P:System.DirectoryServices.DirectoryEntry.ObjectSecurity" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Options" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Parent" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Password" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Path" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Properties" />
        <element api="P:System.DirectoryServices.DirectoryEntry.SchemaClassName" />
        <element api="P:System.DirectoryServices.DirectoryEntry.SchemaEntry" />
        <element api="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Username" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_DirectoryEntry" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntry.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntry" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" />
      </containers>
      <file name="O_T_System_DirectoryServices_DirectoryEntry_MemberwiseClone" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntry.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_DirectoryEntry_Dispose" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntry.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntry" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_DirectoryEntry_ctor" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntry.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_DirectoryEntry_CopyTo" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntry.MoveTo">
      <topicdata name="MoveTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="MoveTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_DirectoryEntry_MoveTo" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntry.RefreshCache">
      <topicdata name="RefreshCache" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="RefreshCache" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
        <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_DirectoryEntry_RefreshCache" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryEntry.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryEntry_ctor" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryEntry.#ctor" />
      <parameters>
        <parameter name="adsObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryEntry_ctor_1_286e8133" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryEntry.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryEntry_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryEntry.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryEntry_ctor_3_ecda0320" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryEntry.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authenticationType">
          <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryEntry_ctor_4_982384f1" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.AuthenticationType">
      <topicdata group="api" />
      <apidata name="AuthenticationType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSAuthenticationType</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryEntry_AuthenticationType" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Children">
      <topicdata group="api" />
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSChildren</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryEntry_Children" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntry_Close" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.CommitChanges">
      <topicdata group="api" />
      <apidata name="CommitChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntry_CommitChanges" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntry_CopyTo_1_b1b87265" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="newName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntry_CopyTo_2_8a933c8c" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.DeleteTree">
      <topicdata group="api" />
      <apidata name="DeleteTree" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntry_DeleteTree" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.DirectoryEntry.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Component" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntry_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Exists(System.String)">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntry_Exists_1_72eac341" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Guid">
      <topicdata group="api" />
      <apidata name="Guid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSGuid</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryEntry_Guid" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntry_Invoke_2_8f98a8ad" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)">
      <topicdata group="api" />
      <apidata name="InvokeGet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_DirectoryEntry_InvokeGet_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="InvokeSet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_DirectoryEntry_InvokeSet_2_8f98a8ad" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)">
      <topicdata group="api" />
      <apidata name="MoveTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.MoveTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntry_MoveTo_1_b1b87265" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)">
      <topicdata group="api" />
      <apidata name="MoveTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.MoveTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="newName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntry_MoveTo_2_8a933c8c" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSName</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryEntry_Name" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.NativeGuid">
      <topicdata group="api" />
      <apidata name="NativeGuid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSNativeGuid</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryEntry_NativeGuid" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.NativeObject">
      <topicdata group="api" />
      <apidata name="NativeObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSNativeObject</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryEntry_NativeObject" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.ObjectSecurity">
      <topicdata group="api" />
      <apidata name="ObjectSecurity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSObjectSecurity</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryEntry_ObjectSecurity" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Options">
      <topicdata group="api" />
      <apidata name="Options" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryEntry_Options" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSParent</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryEntry_Parent" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Password">
      <topicdata group="api" />
      <apidata name="Password" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPassword</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryEntry_Password" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPath</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryEntry_Path" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSProperties</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryEntry_Properties" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.RefreshCache">
      <topicdata group="api" />
      <apidata name="RefreshCache" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.RefreshCache" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntry_RefreshCache" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])">
      <topicdata group="api" />
      <apidata name="RefreshCache" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.RefreshCache" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntry_RefreshCache_1_ceb5cd1f" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Rename(System.String)">
      <topicdata group="api" />
      <apidata name="Rename" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntry_Rename_1_72eac341" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.SchemaClassName">
      <topicdata group="api" />
      <apidata name="SchemaClassName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSchemaClassName</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryEntry_SchemaClassName" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.SchemaEntry">
      <topicdata group="api" />
      <apidata name="SchemaEntry" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSchemaEntry</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryEntry_SchemaEntry" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache">
      <topicdata group="api" />
      <apidata name="UsePropertyCache" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSUsePropertyCache</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryEntry_UsePropertyCache" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Username">
      <topicdata group="api" />
      <apidata name="Username" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSUsername</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryEntry_Username" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryEntryConfiguration">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryEntryConfiguration" />
      <apidata name="DirectoryEntryConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_DirectoryEntryConfiguration" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryEntryConfiguration">
      <topicdata name="DirectoryEntryConfiguration" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryEntryConfiguration" />
      <apidata name="DirectoryEntryConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PageSize" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.Referral" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_DirectoryEntryConfiguration" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryEntryConfiguration">
      <topicdata name="DirectoryEntryConfiguration" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryEntryConfiguration" />
      <apidata name="DirectoryEntryConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_DirectoryEntryConfiguration" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryEntryConfiguration">
      <topicdata name="DirectoryEntryConfiguration" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryEntryConfiguration" />
      <apidata name="DirectoryEntryConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PageSize" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.Referral" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_DirectoryEntryConfiguration" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName">
      <topicdata group="api" />
      <apidata name="GetCurrentServerName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntryConfiguration_GetCurrentServerName" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated">
      <topicdata group="api" />
      <apidata name="IsMutuallyAuthenticated" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntryConfiguration_IsMutuallyAuthenticated" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.PageSize">
      <topicdata group="api" />
      <apidata name="PageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_DirectoryEntryConfiguration_PageSize" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding">
      <topicdata group="api" />
      <apidata name="PasswordEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_DirectoryEntryConfiguration_PasswordEncoding" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort">
      <topicdata group="api" />
      <apidata name="PasswordPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_DirectoryEntryConfiguration_PasswordPort" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.Referral">
      <topicdata group="api" />
      <apidata name="Referral" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_DirectoryEntryConfiguration_Referral" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks">
      <topicdata group="api" />
      <apidata name="SecurityMasks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_DirectoryEntryConfiguration_SecurityMasks" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)">
      <topicdata group="api" />
      <apidata name="SetUserNameQueryQuota" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="accountName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryEntryConfiguration_SetUserNameQueryQuota_1_72eac341" />
    </api>
    <api id="T:System.DirectoryServices.DirectorySearcher">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectorySearcher" />
      <apidata name="DirectorySearcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DirectorySearcherDesc</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_DirectorySearcher" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectorySearcher">
      <topicdata name="DirectorySearcher" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectorySearcher" />
      <apidata name="DirectorySearcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.DirectorySearcher.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="Overload:System.DirectoryServices.DirectorySearcher.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)" />
        </element>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="Overload:System.DirectoryServices.DirectorySearcher.#ctor">
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)" />
        </element>
        <element api="P:System.DirectoryServices.DirectorySearcher.Asynchronous" />
        <element api="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery" />
        <element api="P:System.DirectoryServices.DirectorySearcher.CacheResults" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ClientTimeout" />
        <element api="P:System.DirectoryServices.DirectorySearcher.DerefAlias" />
        <element api="P:System.DirectoryServices.DirectorySearcher.DirectorySynchronization" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ExtendedDN" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <element api="M:System.DirectoryServices.DirectorySearcher.FindAll" />
        <element api="M:System.DirectoryServices.DirectorySearcher.FindOne" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PageSize" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ReferralChasing" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SecurityMasks" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SizeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Sort" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Tombstone" />
        <element api="P:System.DirectoryServices.DirectorySearcher.VirtualListView" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_DirectorySearcher" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectorySearcher">
      <topicdata name="DirectorySearcher" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectorySearcher" />
      <apidata name="DirectorySearcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.DirectorySearcher.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.DirectoryServices.DirectorySearcher.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.DirectoryServices.DirectorySearcher.FindAll" />
        <element api="M:System.DirectoryServices.DirectorySearcher.FindOne" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_DirectorySearcher" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectorySearcher">
      <topicdata name="DirectorySearcher" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectorySearcher" />
      <apidata name="DirectorySearcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Asynchronous" />
        <element api="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery" />
        <element api="P:System.DirectoryServices.DirectorySearcher.CacheResults" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ClientTimeout" />
        <element api="P:System.DirectoryServices.DirectorySearcher.DerefAlias" />
        <element api="P:System.DirectoryServices.DirectorySearcher.DirectorySynchronization" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ExtendedDN" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PageSize" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ReferralChasing" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SecurityMasks" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SizeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Sort" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Tombstone" />
        <element api="P:System.DirectoryServices.DirectorySearcher.VirtualListView" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_DirectorySearcher" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectorySearcher.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectorySearcher" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" />
      </containers>
      <file name="O_T_System_DirectoryServices_DirectorySearcher_MemberwiseClone" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectorySearcher.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectorySearcher" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_DirectorySearcher_Dispose" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectorySearcher.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectorySearcher" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_DirectorySearcher_ctor" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectorySearcher_ctor" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="searchRoot">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectorySearcher_ctor_1_22c49d8f" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="searchRoot">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectorySearcher_ctor_2_e53a2e00" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="searchRoot">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertiesToLoad">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectorySearcher_ctor_3_765dc459" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="searchRoot">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertiesToLoad">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="scope">
          <type api="T:System.DirectoryServices.SearchScope" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectorySearcher_ctor_4_ca005dc1" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectorySearcher_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertiesToLoad">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectorySearcher_ctor_2_655f2de5" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertiesToLoad">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="scope">
          <type api="T:System.DirectoryServices.SearchScope" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectorySearcher_ctor_3_2567f656" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.Asynchronous">
      <topicdata group="api" />
      <apidata name="Asynchronous" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSAsynchronous</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_Asynchronous" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery">
      <topicdata group="api" />
      <apidata name="AttributeScopeQuery" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSAttributeQuery</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_AttributeScopeQuery" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.CacheResults">
      <topicdata group="api" />
      <apidata name="CacheResults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSCacheResults</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_CacheResults" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ClientTimeout">
      <topicdata group="api" />
      <apidata name="ClientTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSClientTimeout</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_ClientTimeout" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.DerefAlias">
      <topicdata group="api" />
      <apidata name="DerefAlias" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSDerefAlias</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_DerefAlias" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.DirectorySynchronization">
      <topicdata group="api" />
      <apidata name="DirectorySynchronization" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSDirectorySynchronization</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_DirectorySynchronization" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.DirectorySearcher.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Component" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectorySearcher_Dispose_1_36d384f7" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ExtendedDN">
      <topicdata group="api" />
      <apidata name="ExtendedDN" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSExtendedDn</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_ExtendedDN" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.Filter">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSFilter</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_Filter" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.FindAll">
      <topicdata group="api" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectorySearcher_FindAll" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.FindOne">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectorySearcher_FindOne" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.PageSize">
      <topicdata group="api" />
      <apidata name="PageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPageSize</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_PageSize" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad">
      <topicdata group="api" />
      <apidata name="PropertiesToLoad" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPropertiesToLoad</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_PropertiesToLoad" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly">
      <topicdata group="api" />
      <apidata name="PropertyNamesOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPropertyNamesOnly</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_PropertyNamesOnly" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ReferralChasing">
      <topicdata group="api" />
      <apidata name="ReferralChasing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSReferralChasing</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_ReferralChasing" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.SearchRoot">
      <topicdata group="api" />
      <apidata name="SearchRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSearchRoot</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_SearchRoot" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.SearchScope">
      <topicdata group="api" />
      <apidata name="SearchScope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSearchScope</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_SearchScope" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.SecurityMasks">
      <topicdata group="api" />
      <apidata name="SecurityMasks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSecurityMasks</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_SecurityMasks" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit">
      <topicdata group="api" />
      <apidata name="ServerPageTimeLimit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSServerPageTimeLimit</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_ServerPageTimeLimit" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit">
      <topicdata group="api" />
      <apidata name="ServerTimeLimit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSServerTimeLimit</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_ServerTimeLimit" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.SizeLimit">
      <topicdata group="api" />
      <apidata name="SizeLimit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSizeLimit</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_SizeLimit" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.Sort">
      <topicdata group="api" />
      <apidata name="Sort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSort</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_Sort" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.Tombstone">
      <topicdata group="api" />
      <apidata name="Tombstone" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSTombstone</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_Tombstone" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.VirtualListView">
      <topicdata group="api" />
      <apidata name="VirtualListView" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSVirtualListView</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySearcher_VirtualListView" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesCOMException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryServicesCOMException" />
      <apidata name="DirectoryServicesCOMException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Runtime.InteropServices.COMException" ref="true" />
          <type api="T:System.Runtime.InteropServices.ExternalException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_DirectoryServicesCOMException" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryServicesCOMException">
      <topicdata name="DirectoryServicesCOMException" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryServicesCOMException" />
      <apidata name="DirectoryServicesCOMException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor">
          <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
          <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedError" />
        <element api="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedErrorMessage" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Runtime.InteropServices.COMException.ToString" />
        <element api="P:System.Runtime.InteropServices.ExternalException.ErrorCode" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_DirectoryServicesCOMException" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryServicesCOMException">
      <topicdata name="DirectoryServicesCOMException" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryServicesCOMException" />
      <apidata name="DirectoryServicesCOMException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Runtime.InteropServices.COMException.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_DirectoryServicesCOMException" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryServicesCOMException">
      <topicdata name="DirectoryServicesCOMException" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryServicesCOMException" />
      <apidata name="DirectoryServicesCOMException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedError" />
        <element api="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedErrorMessage" />
        <element api="P:System.Runtime.InteropServices.ExternalException.ErrorCode" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_DirectoryServicesCOMException" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryServicesCOMException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_DirectoryServicesCOMException_ctor" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryServicesCOMException_ctor" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryServicesCOMException_ctor_2_4075724f" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryServicesCOMException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryServicesCOMException_ctor_2_3ec47892" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedError">
      <topicdata group="api" />
      <apidata name="ExtendedError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_DirectoryServicesCOMException_ExtendedError" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedErrorMessage">
      <topicdata group="api" />
      <apidata name="ExtendedErrorMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_DirectoryServicesCOMException_ExtendedErrorMessage" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_DirectoryServicesCOMException_GetObjectData_2_af75a6ab" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermission">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryServicesPermission" />
      <apidata name="DirectoryServicesPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_DirectoryServicesPermission" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryServicesPermission">
      <topicdata name="DirectoryServicesPermission" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermission" />
      <apidata name="DirectoryServicesPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor">
          <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
          <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
          <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)" />
          <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)" />
        </element>
        <element api="P:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Clear" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Copy" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted" />
        <element api="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
        <element api="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.ToXml" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_DirectoryServicesPermission" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryServicesPermission">
      <topicdata name="DirectoryServicesPermission" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermission" />
      <apidata name="DirectoryServicesPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries" />
        <element api="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType" />
        <element api="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_DirectoryServicesPermission" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryServicesPermission" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_DirectoryServicesPermission_ctor" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermission.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryServicesPermission_ctor" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <parameters>
        <parameter name="permissionAccess">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryServicesPermission_ctor_2_575fcf2f" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <parameters>
        <parameter name="permissionAccessEntries">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryServicesPermission_ctor_1_170bc9a7" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Security.Permissions.PermissionState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryServicesPermission_ctor_1_330c5d6d" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries">
      <topicdata group="api" />
      <apidata name="PermissionEntries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_DirectoryServicesPermission_PermissionEntries" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermissionAccess">
      <topicdata group="api" />
      <apidata name="DirectoryServicesPermissionAccess" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.DirectoryServicesPermissionAccess.None" />
        <element api="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Browse" />
        <element api="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Write" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_DirectoryServicesPermissionAccess" />
    </api>
    <api id="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Browse">
      <topicdata group="api" notopic="" />
      <apidata name="Browse" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_DirectoryServicesPermissionAccess_Browse" />
    </api>
    <api id="F:System.DirectoryServices.DirectoryServicesPermissionAccess.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_DirectoryServicesPermissionAccess_None" />
    </api>
    <api id="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Write">
      <topicdata group="api" notopic="" />
      <apidata name="Write" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_DirectoryServicesPermissionAccess_Write" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermissionAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
      <apidata name="DirectoryServicesPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.CodeAccessSecurityAttribute" ref="true" />
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Struct" />
              <field name="Constructor" />
              <field name="Method" />
              <field name="Event" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_DirectoryServicesPermissionAttribute" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryServicesPermissionAttribute">
      <topicdata name="DirectoryServicesPermissionAttribute" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
      <apidata name="DirectoryServicesPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.Path" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_DirectoryServicesPermissionAttribute" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryServicesPermissionAttribute">
      <topicdata name="DirectoryServicesPermissionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
      <apidata name="DirectoryServicesPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_DirectoryServicesPermissionAttribute" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryServicesPermissionAttribute">
      <topicdata name="DirectoryServicesPermissionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
      <apidata name="DirectoryServicesPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.Path" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_DirectoryServicesPermissionAttribute" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryServicesPermissionAttribute_ctor_1_0fdf6e88" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission">
      <topicdata group="api" />
      <apidata name="CreatePermission" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryServicesPermissionAttribute_CreatePermission" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_DirectoryServicesPermissionAttribute_Path" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess">
      <topicdata group="api" />
      <apidata name="PermissionAccess" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_DirectoryServicesPermissionAttribute_PermissionAccess" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermissionEntry">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
      <apidata name="DirectoryServicesPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_DirectoryServicesPermissionEntry" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryServicesPermissionEntry">
      <topicdata name="DirectoryServicesPermissionEntry" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
      <apidata name="DirectoryServicesPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntry.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntry.Path" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntry.PermissionAccess" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_DirectoryServicesPermissionEntry" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryServicesPermissionEntry">
      <topicdata name="DirectoryServicesPermissionEntry" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
      <apidata name="DirectoryServicesPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntry.Path" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntry.PermissionAccess" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_DirectoryServicesPermissionEntry" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntry.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="permissionAccess">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryServicesPermissionEntry_ctor_2_575fcf2f" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionEntry.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_DirectoryServicesPermissionEntry_Path" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionEntry.PermissionAccess">
      <topicdata group="api" />
      <apidata name="PermissionAccess" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_DirectoryServicesPermissionEntry_PermissionAccess" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      <apidata name="DirectoryServicesPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_DirectoryServicesPermissionEntryCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection">
      <topicdata name="DirectoryServicesPermissionEntryCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      <apidata name="DirectoryServicesPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="Overload:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange">
          <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
          <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_DirectoryServicesPermissionEntryCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection">
      <topicdata name="DirectoryServicesPermissionEntryCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      <apidata name="DirectoryServicesPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="Overload:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange">
          <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
          <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_DirectoryServicesPermissionEntryCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection">
      <topicdata name="DirectoryServicesPermissionEntryCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      <apidata name="DirectoryServicesPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_DirectoryServicesPermissionEntryCollection" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_DirectoryServicesPermissionEntryCollection_AddRange" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryServicesPermissionEntryCollection_Add_1_36ffbd9f" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryServicesPermissionEntryCollection_AddRange_1_c1ce9f0b" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryServicesPermissionEntryCollection_AddRange_1_83856e7d" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryServicesPermissionEntryCollection_Contains_1_36ffbd9f" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryServicesPermissionEntryCollection_CopyTo_2_dca87540" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryServicesPermissionEntryCollection_IndexOf_1_36ffbd9f" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryServicesPermissionEntryCollection_Insert_2_9bfbdb74" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_DirectoryServicesPermissionEntryCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear">
      <topicdata group="api" />
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClear">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryServicesPermissionEntryCollection_OnClear" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsert" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryServicesPermissionEntryCollection_OnInsert_2_a902cdae" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryServicesPermissionEntryCollection_OnRemove_2_a902cdae" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSet" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryServicesPermissionEntryCollection_OnSet_3_6a6320c0" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryServicesPermissionEntryCollection_Remove_1_36ffbd9f" />
    </api>
    <api id="T:System.DirectoryServices.DirectorySynchronization">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectorySynchronization" />
      <apidata name="DirectorySynchronization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_DirectorySynchronization" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectorySynchronization">
      <topicdata name="DirectorySynchronization" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectorySynchronization" />
      <apidata name="DirectorySynchronization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.DirectoryServices.DirectorySynchronization.#ctor">
          <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.Byte[])" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])" />
        </element>
        <element api="M:System.DirectoryServices.DirectorySynchronization.Copy" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie" />
        <element api="P:System.DirectoryServices.DirectorySynchronization.Option" />
        <element api="Overload:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie">
          <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])" />
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_DirectorySynchronization" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectorySynchronization">
      <topicdata name="DirectorySynchronization" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectorySynchronization" />
      <apidata name="DirectorySynchronization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.Copy" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie" />
        <element api="Overload:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie">
          <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])" />
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_DirectorySynchronization" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectorySynchronization">
      <topicdata name="DirectorySynchronization" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectorySynchronization" />
      <apidata name="DirectorySynchronization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.DirectorySynchronization.Option" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_DirectorySynchronization" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectorySynchronization.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectorySynchronization" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.Byte[])" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_DirectorySynchronization_ctor" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie">
      <topicdata name="ResetDirectorySynchronizationCookie" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectorySynchronization" />
      <apidata name="ResetDirectorySynchronizationCookie" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_DirectorySynchronization_ResetDirectorySynchronizationCookie" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectorySynchronization_ctor" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <parameters>
        <parameter name="cookie">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectorySynchronization_ctor_1_17d539e7" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <parameters>
        <parameter name="sync">
          <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectorySynchronization_ctor_1_6577397e" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <parameters>
        <parameter name="option">
          <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectorySynchronization_ctor_1_ba2113ec" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <parameters>
        <parameter name="option">
          <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
        </parameter>
        <parameter name="cookie">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectorySynchronization_ctor_2_6a21353b" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectorySynchronization_Copy" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie">
      <topicdata group="api" />
      <apidata name="GetDirectorySynchronizationCookie" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectorySynchronization_GetDirectorySynchronizationCookie" />
    </api>
    <api id="P:System.DirectoryServices.DirectorySynchronization.Option">
      <topicdata group="api" />
      <apidata name="Option" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSDirectorySynchronizationFlag</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectorySynchronization_Option" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie">
      <topicdata group="api" />
      <apidata name="ResetDirectorySynchronizationCookie" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectorySynchronization_ResetDirectorySynchronizationCookie" />
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])">
      <topicdata group="api" />
      <apidata name="ResetDirectorySynchronizationCookie" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cookie">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectorySynchronization_ResetDirectorySynchronizationCookie_1_8079d5fb" />
    </api>
    <api id="T:System.DirectoryServices.DirectorySynchronizationOptions">
      <topicdata group="api" />
      <apidata name="DirectorySynchronizationOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int64" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.None" />
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.ObjectSecurity" />
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.ParentsFirst" />
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.PublicDataOnly" />
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.IncrementalValues" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_DirectorySynchronizationOptions" />
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.IncrementalValues">
      <topicdata group="api" notopic="" />
      <apidata name="IncrementalValues" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <value>2147483648</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_DirectorySynchronizationOptions_IncrementalValues" />
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_DirectorySynchronizationOptions_None" />
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.ObjectSecurity">
      <topicdata group="api" notopic="" />
      <apidata name="ObjectSecurity" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_DirectorySynchronizationOptions_ObjectSecurity" />
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.ParentsFirst">
      <topicdata group="api" notopic="" />
      <apidata name="ParentsFirst" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <value>2048</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_DirectorySynchronizationOptions_ParentsFirst" />
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.PublicDataOnly">
      <topicdata group="api" notopic="" />
      <apidata name="PublicDataOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <value>8192</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_DirectorySynchronizationOptions_PublicDataOnly" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryVirtualListView">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryVirtualListView" />
      <apidata name="DirectoryVirtualListView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_DirectoryVirtualListView" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryVirtualListView">
      <topicdata name="DirectoryVirtualListView" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryVirtualListView" />
      <apidata name="DirectoryVirtualListView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor">
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32)" />
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String)" />
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32,System.DirectoryServices.DirectoryVirtualListViewContext)" />
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String,System.DirectoryServices.DirectoryVirtualListViewContext)" />
        </element>
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.AfterCount" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.ApproximateTotal" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.BeforeCount" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.DirectoryVirtualListViewContext" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.Offset" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.Target" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.TargetPercentage" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_DirectoryVirtualListView" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryVirtualListView">
      <topicdata name="DirectoryVirtualListView" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryVirtualListView" />
      <apidata name="DirectoryVirtualListView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.AfterCount" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.ApproximateTotal" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.BeforeCount" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.DirectoryVirtualListViewContext" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.Offset" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.Target" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.TargetPercentage" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_DirectoryVirtualListView" />
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryVirtualListView" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String)" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32,System.DirectoryServices.DirectoryVirtualListViewContext)" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String,System.DirectoryServices.DirectoryVirtualListViewContext)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_DirectoryVirtualListView_ctor" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryVirtualListView_ctor" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <parameters>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryVirtualListView_ctor_1_f9cace8a" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <parameters>
        <parameter name="beforeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryVirtualListView_ctor_3_2bb455db" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32,System.DirectoryServices.DirectoryVirtualListViewContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <parameters>
        <parameter name="beforeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="context">
          <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryVirtualListView_ctor_4_8b8f554d" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <parameters>
        <parameter name="beforeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryVirtualListView_ctor_3_5986bc55" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String,System.DirectoryServices.DirectoryVirtualListViewContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <parameters>
        <parameter name="beforeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryVirtualListView_ctor_4_c55938bd" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.AfterCount">
      <topicdata group="api" />
      <apidata name="AfterCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSAfterCount</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryVirtualListView_AfterCount" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.ApproximateTotal">
      <topicdata group="api" />
      <apidata name="ApproximateTotal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSApproximateTotal</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryVirtualListView_ApproximateTotal" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.BeforeCount">
      <topicdata group="api" />
      <apidata name="BeforeCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSBeforeCount</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryVirtualListView_BeforeCount" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.DirectoryVirtualListViewContext">
      <topicdata group="api" />
      <apidata name="DirectoryVirtualListViewContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSDirectoryVirtualListViewContext</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryVirtualListView_DirectoryVirtualListViewContext" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.Offset">
      <topicdata group="api" />
      <apidata name="Offset" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSOffset</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryVirtualListView_Offset" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.Target">
      <topicdata group="api" />
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSTarget</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryVirtualListView_Target" />
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.TargetPercentage">
      <topicdata group="api" />
      <apidata name="TargetPercentage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSTargetPercentage</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_DirectoryVirtualListView_TargetPercentage" />
    </api>
    <api id="T:System.DirectoryServices.DirectoryVirtualListViewContext">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DirectoryVirtualListViewContext" />
      <apidata name="DirectoryVirtualListViewContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_DirectoryVirtualListViewContext" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DirectoryVirtualListViewContext">
      <topicdata name="DirectoryVirtualListViewContext" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DirectoryVirtualListViewContext" />
      <apidata name="DirectoryVirtualListViewContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListViewContext.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListViewContext.Copy" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_DirectoryVirtualListViewContext" />
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryVirtualListViewContext">
      <topicdata name="DirectoryVirtualListViewContext" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryVirtualListViewContext" />
      <apidata name="DirectoryVirtualListViewContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListViewContext.Copy" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_DirectoryVirtualListViewContext" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListViewContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DirectoryVirtualListViewContext_ctor" />
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListViewContext.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_DirectoryVirtualListViewContext_Copy" />
    </api>
    <api id="T:System.DirectoryServices.DSDescriptionAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.DSDescriptionAttribute" />
      <apidata name="DSDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_DSDescriptionAttribute" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.DSDescriptionAttribute">
      <topicdata name="DSDescriptionAttribute" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.DSDescriptionAttribute" />
      <apidata name="DSDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue" />
        <element api="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute" />
        <element api="M:System.DirectoryServices.DSDescriptionAttribute.#ctor(System.String)" />
        <element api="P:System.DirectoryServices.DSDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_DSDescriptionAttribute" />
    </api>
    <api id="Properties.T:System.DirectoryServices.DSDescriptionAttribute">
      <topicdata name="DSDescriptionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DSDescriptionAttribute" />
      <apidata name="DSDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue" />
        <element api="P:System.DirectoryServices.DSDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_DSDescriptionAttribute" />
    </api>
    <api id="M:System.DirectoryServices.DSDescriptionAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_DSDescriptionAttribute_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.DirectoryServices.DSDescriptionAttribute.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.DescriptionAttribute.Description">
          <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_DSDescriptionAttribute_Description" />
    </api>
    <api id="T:System.DirectoryServices.ExtendedDN">
      <topicdata group="api" />
      <apidata name="ExtendedDN" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ExtendedDN.None" />
        <element api="F:System.DirectoryServices.ExtendedDN.HexString" />
        <element api="F:System.DirectoryServices.ExtendedDN.Standard" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_ExtendedDN" />
    </api>
    <api id="F:System.DirectoryServices.ExtendedDN.HexString">
      <topicdata group="api" notopic="" />
      <apidata name="HexString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ExtendedDN_HexString" />
    </api>
    <api id="F:System.DirectoryServices.ExtendedDN.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ExtendedDN_None" />
    </api>
    <api id="F:System.DirectoryServices.ExtendedDN.Standard">
      <topicdata group="api" notopic="" />
      <apidata name="Standard" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ExtendedDN_Standard" />
    </api>
    <api id="T:System.DirectoryServices.ExtendedRightAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ExtendedRightAccessRule" />
      <apidata name="ExtendedRightAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_ExtendedRightAccessRule" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ExtendedRightAccessRule">
      <topicdata name="ExtendedRightAccessRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ExtendedRightAccessRule" />
      <apidata name="ExtendedRightAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor">
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ExtendedRightAccessRule" />
    </api>
    <api id="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ExtendedRightAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ExtendedRightAccessRule_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ExtendedRightAccessRule_ctor_2_8b89dea7" />
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ExtendedRightAccessRule_ctor_3_d0602791" />
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ExtendedRightAccessRule_ctor_4_404fdd6a" />
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="extendedRightType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ExtendedRightAccessRule_ctor_3_1e5126e4" />
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="extendedRightType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ExtendedRightAccessRule_ctor_4_90020542" />
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="extendedRightType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ExtendedRightAccessRule_ctor_5_d776bdcb" />
    </api>
    <api id="T:System.DirectoryServices.ListChildrenAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ListChildrenAccessRule" />
      <apidata name="ListChildrenAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_ListChildrenAccessRule" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ListChildrenAccessRule">
      <topicdata name="ListChildrenAccessRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ListChildrenAccessRule" />
      <apidata name="ListChildrenAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="Overload:System.DirectoryServices.ListChildrenAccessRule.#ctor">
          <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ListChildrenAccessRule" />
    </api>
    <api id="Overload:System.DirectoryServices.ListChildrenAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ListChildrenAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ListChildrenAccessRule_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ListChildrenAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ListChildrenAccessRule_ctor_2_8b89dea7" />
    </api>
    <api id="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ListChildrenAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ListChildrenAccessRule_ctor_3_d0602791" />
    </api>
    <api id="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ListChildrenAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ListChildrenAccessRule_ctor_4_404fdd6a" />
    </api>
    <api id="T:System.DirectoryServices.PasswordEncodingMethod">
      <topicdata group="api" />
      <apidata name="PasswordEncodingMethod" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingSsl" />
        <element api="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingClear" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_PasswordEncodingMethod" />
    </api>
    <api id="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingClear">
      <topicdata group="api" notopic="" />
      <apidata name="PasswordEncodingClear" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_PasswordEncodingMethod_PasswordEncodingClear" />
    </api>
    <api id="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingSsl">
      <topicdata group="api" notopic="" />
      <apidata name="PasswordEncodingSsl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_PasswordEncodingMethod_PasswordEncodingSsl" />
    </api>
    <api id="T:System.DirectoryServices.PropertyAccess">
      <topicdata group="api" />
      <apidata name="PropertyAccess" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.PropertyAccess.Read" />
        <element api="F:System.DirectoryServices.PropertyAccess.Write" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_PropertyAccess" />
    </api>
    <api id="F:System.DirectoryServices.PropertyAccess.Read">
      <topicdata group="api" notopic="" />
      <apidata name="Read" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_PropertyAccess_Read" />
    </api>
    <api id="F:System.DirectoryServices.PropertyAccess.Write">
      <topicdata group="api" notopic="" />
      <apidata name="Write" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_PropertyAccess_Write" />
    </api>
    <api id="T:System.DirectoryServices.PropertyAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.PropertyAccessRule" />
      <apidata name="PropertyAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_PropertyAccessRule" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.PropertyAccessRule">
      <topicdata name="PropertyAccessRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.PropertyAccessRule" />
      <apidata name="PropertyAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="Overload:System.DirectoryServices.PropertyAccessRule.#ctor">
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess)" />
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)" />
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_PropertyAccessRule" />
    </api>
    <api id="Overload:System.DirectoryServices.PropertyAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.PropertyAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_PropertyAccessRule_ctor" />
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_PropertyAccessRule_ctor_3_9d145c35" />
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_PropertyAccessRule_ctor_4_f3109f34" />
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_PropertyAccessRule_ctor_5_f6308689" />
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_PropertyAccessRule_ctor_4_4f2f09b4" />
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_PropertyAccessRule_ctor_5_5a021fec" />
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_PropertyAccessRule_ctor_6_9cb79e88" />
    </api>
    <api id="T:System.DirectoryServices.PropertyCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.PropertyCollection" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IDictionary" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_PropertyCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.PropertyCollection">
      <topicdata name="PropertyCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.PropertyCollection" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.PropertyCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)" />
        <element api="P:System.DirectoryServices.PropertyCollection.Count" />
        <element api="M:System.DirectoryServices.PropertyCollection.GetEnumerator" />
        <element api="P:System.DirectoryServices.PropertyCollection.Item(System.String)" />
        <element api="P:System.DirectoryServices.PropertyCollection.PropertyNames" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:System.DirectoryServices.PropertyCollection.Values" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_PropertyCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.PropertyCollection">
      <topicdata name="PropertyCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.PropertyCollection" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.PropertyCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_PropertyCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.PropertyCollection">
      <topicdata name="PropertyCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.PropertyCollection" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.PropertyCollection.Count" />
        <element api="P:System.DirectoryServices.PropertyCollection.Item(System.String)" />
        <element api="P:System.DirectoryServices.PropertyCollection.PropertyNames" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys" />
        <element api="P:System.DirectoryServices.PropertyCollection.Values" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_PropertyCollection" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyCollection_Contains_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyCollection_CopyTo_2_a4415a57" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_PropertyCollection_Count" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IDictionaryEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.GetEnumerator">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyCollection_GetEnumerator" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_PropertyCollection_Item_1_72eac341" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.PropertyNames">
      <topicdata group="api" />
      <apidata name="PropertyNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_PropertyCollection_PropertyNames" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyCollection_System_Collections_ICollection_CopyTo_2_4b274b99" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_PropertyCollection_System_Collections_ICollection_IsSynchronized" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_PropertyCollection_System_Collections_ICollection_SyncRoot" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyCollection_System_Collections_IDictionary_Add_2_3fcf08df" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IDictionary.Clear">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyCollection_System_Collections_IDictionary_Clear" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.Contains(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyCollection_System_Collections_IDictionary_Contains_1_2572741a" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
      <topicdata group="api" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsFixedSize">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_PropertyCollection_System_Collections_IDictionary_IsFixedSize" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsReadOnly">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_PropertyCollection_System_Collections_IDictionary_IsReadOnly" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Item(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_PropertyCollection_System_Collections_IDictionary_Item_1_2572741a" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Keys">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_PropertyCollection_System_Collections_IDictionary_Keys" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Remove(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyCollection_System_Collections_IDictionary_Remove_1_2572741a" />
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyCollection_System_Collections_IEnumerable_GetEnumerator" />
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Values">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_PropertyCollection_Values" />
    </api>
    <api id="T:System.DirectoryServices.PropertySetAccessRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.PropertySetAccessRule" />
      <apidata name="PropertySetAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_PropertySetAccessRule" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.PropertySetAccessRule">
      <topicdata name="PropertySetAccessRule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.PropertySetAccessRule" />
      <apidata name="PropertySetAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="Overload:System.DirectoryServices.PropertySetAccessRule.#ctor">
          <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)" />
          <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_PropertySetAccessRule" />
    </api>
    <api id="Overload:System.DirectoryServices.PropertySetAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.PropertySetAccessRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)" />
        <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_PropertySetAccessRule_ctor" />
    </api>
    <api id="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertySetAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertySetType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_PropertySetAccessRule_ctor_4_4f2f09b4" />
    </api>
    <api id="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertySetAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertySetType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_PropertySetAccessRule_ctor_5_5a021fec" />
    </api>
    <api id="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertySetAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertySetType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_PropertySetAccessRule_ctor_6_9cb79e88" />
    </api>
    <api id="T:System.DirectoryServices.PropertyValueCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.PropertyValueCollection" />
      <apidata name="PropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_PropertyValueCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.PropertyValueCollection">
      <topicdata name="PropertyValueCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.PropertyValueCollection" />
      <apidata name="PropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Add(System.Object)" />
        <element api="Overload:System.DirectoryServices.PropertyValueCollection.AddRange">
          <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])" />
          <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)" />
        </element>
        <element api="M:System.DirectoryServices.PropertyValueCollection.Contains(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.Item(System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.PropertyName" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Remove(System.Object)" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.Value" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_PropertyValueCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.PropertyValueCollection">
      <topicdata name="PropertyValueCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.PropertyValueCollection" />
      <apidata name="PropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Add(System.Object)" />
        <element api="Overload:System.DirectoryServices.PropertyValueCollection.AddRange">
          <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])" />
          <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)" />
        </element>
        <element api="M:System.DirectoryServices.PropertyValueCollection.Contains(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_PropertyValueCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.PropertyValueCollection">
      <topicdata name="PropertyValueCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.PropertyValueCollection" />
      <apidata name="PropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.PropertyName" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.Value" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_PropertyValueCollection" />
    </api>
    <api id="Overload:System.DirectoryServices.PropertyValueCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.PropertyValueCollection" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_PropertyValueCollection_AddRange" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.Add(System.Object)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyValueCollection_Add_1_2572741a" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.PropertyValueCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyValueCollection_AddRange_1_3863437f" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.PropertyValueCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyValueCollection_AddRange_1_0e1149fa" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyValueCollection_Contains_1_2572741a" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyValueCollection_CopyTo_2_88544d69" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyValueCollection_IndexOf_1_2572741a" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyValueCollection_Insert_2_a902cdae" />
    </api>
    <api id="P:System.DirectoryServices.PropertyValueCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_PropertyValueCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.OnClearComplete">
      <topicdata group="api" />
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyValueCollection_OnClearComplete" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyValueCollection_OnInsertComplete_2_a902cdae" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyValueCollection_OnRemoveComplete_2_a902cdae" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyValueCollection_OnSetComplete_3_6a6320c0" />
    </api>
    <api id="P:System.DirectoryServices.PropertyValueCollection.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_PropertyValueCollection_PropertyName" />
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.Remove(System.Object)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_PropertyValueCollection_Remove_1_2572741a" />
    </api>
    <api id="P:System.DirectoryServices.PropertyValueCollection.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_PropertyValueCollection_Value" />
    </api>
    <api id="T:System.DirectoryServices.ReferralChasingOption">
      <topicdata group="api" />
      <apidata name="ReferralChasingOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ReferralChasingOption.None" />
        <element api="F:System.DirectoryServices.ReferralChasingOption.Subordinate" />
        <element api="F:System.DirectoryServices.ReferralChasingOption.External" />
        <element api="F:System.DirectoryServices.ReferralChasingOption.All" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_ReferralChasingOption" />
    </api>
    <api id="F:System.DirectoryServices.ReferralChasingOption.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <value>96</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ReferralChasingOption_All" />
    </api>
    <api id="F:System.DirectoryServices.ReferralChasingOption.External">
      <topicdata group="api" notopic="" />
      <apidata name="External" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ReferralChasingOption_External" />
    </api>
    <api id="F:System.DirectoryServices.ReferralChasingOption.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ReferralChasingOption_None" />
    </api>
    <api id="F:System.DirectoryServices.ReferralChasingOption.Subordinate">
      <topicdata group="api" notopic="" />
      <apidata name="Subordinate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ReferralChasingOption_Subordinate" />
    </api>
    <api id="T:System.DirectoryServices.ResultPropertyCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ResultPropertyCollection" />
      <apidata name="ResultPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.DictionaryBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_ResultPropertyCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ResultPropertyCollection">
      <topicdata name="ResultPropertyCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ResultPropertyCollection" />
      <apidata name="ResultPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.DictionaryBase.Clear" />
        <element api="Overload:System.DirectoryServices.ResultPropertyCollection.CopyTo">
          <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)" />
        </element>
        <element api="P:System.Collections.DictionaryBase.Count" />
        <element api="P:System.Collections.DictionaryBase.Dictionary" />
        <element api="M:System.Collections.DictionaryBase.GetEnumerator" />
        <element api="P:System.Collections.DictionaryBase.InnerHashtable" />
        <element api="M:System.Collections.DictionaryBase.OnClear" />
        <element api="M:System.Collections.DictionaryBase.OnClearComplete" />
        <element api="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.DirectoryServices.ResultPropertyCollection.Contains(System.String)" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.Item(System.String)" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.PropertyNames" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.Values" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ResultPropertyCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ResultPropertyCollection">
      <topicdata name="ResultPropertyCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ResultPropertyCollection" />
      <apidata name="ResultPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.DictionaryBase.Clear" />
        <element api="Overload:System.DirectoryServices.ResultPropertyCollection.CopyTo">
          <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)" />
        </element>
        <element api="M:System.Collections.DictionaryBase.GetEnumerator" />
        <element api="M:System.Collections.DictionaryBase.OnClear" />
        <element api="M:System.Collections.DictionaryBase.OnClearComplete" />
        <element api="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.DirectoryServices.ResultPropertyCollection.Contains(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ResultPropertyCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ResultPropertyCollection">
      <topicdata name="ResultPropertyCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ResultPropertyCollection" />
      <apidata name="ResultPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.DictionaryBase.Count" />
        <element api="P:System.Collections.DictionaryBase.Dictionary" />
        <element api="P:System.Collections.DictionaryBase.InnerHashtable" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.Item(System.String)" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.PropertyNames" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.Values" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ResultPropertyCollection" />
    </api>
    <api id="Overload:System.DirectoryServices.ResultPropertyCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ResultPropertyCollection" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ResultPropertyCollection_CopyTo" />
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ResultPropertyCollection_Contains_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ResultPropertyCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ResultPropertyCollection_CopyTo_2_e2ecabd8" />
    </api>
    <api id="P:System.DirectoryServices.ResultPropertyCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ResultPropertyCollection_Item_1_72eac341" />
    </api>
    <api id="P:System.DirectoryServices.ResultPropertyCollection.PropertyNames">
      <topicdata group="api" />
      <apidata name="PropertyNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ResultPropertyCollection_PropertyNames" />
    </api>
    <api id="P:System.DirectoryServices.ResultPropertyCollection.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ResultPropertyCollection_Values" />
    </api>
    <api id="T:System.DirectoryServices.ResultPropertyValueCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ResultPropertyValueCollection" />
      <apidata name="ResultPropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_ResultPropertyValueCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ResultPropertyValueCollection">
      <topicdata name="ResultPropertyValueCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ResultPropertyValueCollection" />
      <apidata name="ResultPropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)" />
        <element api="P:System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ResultPropertyValueCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ResultPropertyValueCollection">
      <topicdata name="ResultPropertyValueCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ResultPropertyValueCollection" />
      <apidata name="ResultPropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ResultPropertyValueCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ResultPropertyValueCollection">
      <topicdata name="ResultPropertyValueCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ResultPropertyValueCollection" />
      <apidata name="ResultPropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ResultPropertyValueCollection" />
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ResultPropertyValueCollection_Contains_1_2572741a" />
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ResultPropertyValueCollection_CopyTo_2_88544d69" />
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ResultPropertyValueCollection_IndexOf_1_2572741a" />
    </api>
    <api id="P:System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ResultPropertyValueCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.SchemaNameCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.SchemaNameCollection" />
      <apidata name="SchemaNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_SchemaNameCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.SchemaNameCollection">
      <topicdata name="SchemaNameCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.SchemaNameCollection" />
      <apidata name="SchemaNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)" />
        <element api="Overload:System.DirectoryServices.SchemaNameCollection.AddRange">
          <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)" />
          <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])" />
        </element>
        <element api="M:System.DirectoryServices.SchemaNameCollection.Clear" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.Count" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_SchemaNameCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.SchemaNameCollection">
      <topicdata name="SchemaNameCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.SchemaNameCollection" />
      <apidata name="SchemaNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)" />
        <element api="Overload:System.DirectoryServices.SchemaNameCollection.AddRange">
          <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)" />
          <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])" />
        </element>
        <element api="M:System.DirectoryServices.SchemaNameCollection.Clear" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_SchemaNameCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.SchemaNameCollection">
      <topicdata name="SchemaNameCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.SchemaNameCollection" />
      <apidata name="SchemaNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.SchemaNameCollection.Count" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_SchemaNameCollection" />
    </api>
    <api id="Overload:System.DirectoryServices.SchemaNameCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.SchemaNameCollection" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_SchemaNameCollection_AddRange" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_Add_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.SchemaNameCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_AddRange_1_274421ba" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.SchemaNameCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_AddRange_1_ceb5cd1f" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_Clear" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_Contains_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringArray">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_CopyTo_2_0fd10382" />
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_SchemaNameCollection_Count" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_GetEnumerator" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_IndexOf_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_Insert_2_fdad1945" />
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_SchemaNameCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_Remove_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_RemoveAt_1_cd2d7ec9" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_System_Collections_ICollection_CopyTo_2_4b274b99" />
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_SchemaNameCollection_System_Collections_ICollection_IsSynchronized" />
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_SchemaNameCollection_System_Collections_ICollection_SyncRoot" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_System_Collections_IList_Add_1_2572741a" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_System_Collections_IList_Contains_1_2572741a" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_System_Collections_IList_IndexOf_1_2572741a" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_System_Collections_IList_Insert_2_a902cdae" />
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize">
      <topicdata group="api" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_SchemaNameCollection_System_Collections_IList_IsFixedSize" />
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_SchemaNameCollection_System_Collections_IList_IsReadOnly" />
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_SchemaNameCollection_System_Collections_IList_Item_1_cd2d7ec9" />
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SchemaNameCollection_System_Collections_IList_Remove_1_2572741a" />
    </api>
    <api id="T:System.DirectoryServices.SearchResult">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.SearchResult" />
      <apidata name="SearchResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_SearchResult" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.SearchResult">
      <topicdata name="SearchResult" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.SearchResult" />
      <apidata name="SearchResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.SearchResult.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.SearchResult.Path" />
        <element api="P:System.DirectoryServices.SearchResult.Properties" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_SearchResult" />
    </api>
    <api id="Methods.T:System.DirectoryServices.SearchResult">
      <topicdata name="SearchResult" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.SearchResult" />
      <apidata name="SearchResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.SearchResult.GetDirectoryEntry" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_SearchResult" />
    </api>
    <api id="Properties.T:System.DirectoryServices.SearchResult">
      <topicdata name="SearchResult" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.SearchResult" />
      <apidata name="SearchResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.SearchResult.Path" />
        <element api="P:System.DirectoryServices.SearchResult.Properties" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_SearchResult" />
    </api>
    <api id="M:System.DirectoryServices.SearchResult.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Assert" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="UnmanagedCode" />
            </enumValue>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.EnvironmentPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Assert" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_SearchResult_GetDirectoryEntry" />
    </api>
    <api id="P:System.DirectoryServices.SearchResult.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_SearchResult_Path" />
    </api>
    <api id="P:System.DirectoryServices.SearchResult.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_SearchResult_Properties" />
    </api>
    <api id="T:System.DirectoryServices.SearchResultCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.SearchResultCollection" />
      <apidata name="SearchResultCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_SearchResultCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.SearchResultCollection">
      <topicdata name="SearchResultCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.SearchResultCollection" />
      <apidata name="SearchResultCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.SearchResultCollection.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)" />
        <element api="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Count" />
        <element api="Overload:System.DirectoryServices.SearchResultCollection.Dispose">
          <element api="M:System.DirectoryServices.SearchResultCollection.Dispose" />
          <element api="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.SearchResultCollection.Finalize" />
        <element api="M:System.DirectoryServices.SearchResultCollection.GetEnumerator" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Handle" />
        <element api="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded" />
        <element api="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_SearchResultCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.SearchResultCollection">
      <topicdata name="SearchResultCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.SearchResultCollection" />
      <apidata name="SearchResultCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.SearchResultCollection.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)" />
        <element api="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)" />
        <element api="Overload:System.DirectoryServices.SearchResultCollection.Dispose">
          <element api="M:System.DirectoryServices.SearchResultCollection.Dispose" />
          <element api="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.SearchResultCollection.Finalize" />
        <element api="M:System.DirectoryServices.SearchResultCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)" />
        <element api="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_SearchResultCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.SearchResultCollection">
      <topicdata name="SearchResultCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.SearchResultCollection" />
      <apidata name="SearchResultCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.SearchResultCollection.Count" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Handle" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded" />
        <element api="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_SearchResultCollection" />
    </api>
    <api id="Overload:System.DirectoryServices.SearchResultCollection.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.SearchResultCollection" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" />
      </containers>
      <file name="O_T_System_DirectoryServices_SearchResultCollection_MemberwiseClone" />
    </api>
    <api id="Overload:System.DirectoryServices.SearchResultCollection.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.SearchResultCollection" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.SearchResultCollection.Dispose" />
        <element api="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_SearchResultCollection_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.DirectoryServices.SearchResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SearchResultCollection_Contains_1_733bdb86" />
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="results">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.SearchResult" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SearchResultCollection_CopyTo_2_e8c88cd2" />
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_SearchResultCollection_Count" />
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.SearchResultCollection.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SearchResultCollection_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.SearchResultCollection.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SearchResultCollection_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SearchResultCollection_Finalize" />
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SearchResultCollection_GetEnumerator" />
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.Handle">
      <topicdata group="api" />
      <apidata name="Handle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_SearchResultCollection_Handle" />
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.DirectoryServices.SearchResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SearchResultCollection_IndexOf_1_733bdb86" />
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_SearchResultCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded">
      <topicdata group="api" />
      <apidata name="PropertiesLoaded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_SearchResultCollection_PropertiesLoaded" />
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_SearchResultCollection_System_Collections_ICollection_CopyTo_2_4b274b99" />
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_SearchResultCollection_System_Collections_ICollection_IsSynchronized" />
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_SearchResultCollection_System_Collections_ICollection_SyncRoot" />
    </api>
    <api id="T:System.DirectoryServices.SearchScope">
      <topicdata group="api" />
      <apidata name="SearchScope" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.SearchScope.Base" />
        <element api="F:System.DirectoryServices.SearchScope.OneLevel" />
        <element api="F:System.DirectoryServices.SearchScope.Subtree" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_SearchScope" />
    </api>
    <api id="F:System.DirectoryServices.SearchScope.Base">
      <topicdata group="api" notopic="" />
      <apidata name="Base" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_SearchScope_Base" />
    </api>
    <api id="F:System.DirectoryServices.SearchScope.OneLevel">
      <topicdata group="api" notopic="" />
      <apidata name="OneLevel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_SearchScope_OneLevel" />
    </api>
    <api id="F:System.DirectoryServices.SearchScope.Subtree">
      <topicdata group="api" notopic="" />
      <apidata name="Subtree" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_SearchScope_Subtree" />
    </api>
    <api id="T:System.DirectoryServices.SecurityMasks">
      <topicdata group="api" />
      <apidata name="SecurityMasks" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.SecurityMasks.None" />
        <element api="F:System.DirectoryServices.SecurityMasks.Owner" />
        <element api="F:System.DirectoryServices.SecurityMasks.Group" />
        <element api="F:System.DirectoryServices.SecurityMasks.Dacl" />
        <element api="F:System.DirectoryServices.SecurityMasks.Sacl" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_SecurityMasks" />
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.Dacl">
      <topicdata group="api" notopic="" />
      <apidata name="Dacl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_SecurityMasks_Dacl" />
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.Group">
      <topicdata group="api" notopic="" />
      <apidata name="Group" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_SecurityMasks_Group" />
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_SecurityMasks_None" />
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.Owner">
      <topicdata group="api" notopic="" />
      <apidata name="Owner" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_SecurityMasks_Owner" />
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.Sacl">
      <topicdata group="api" notopic="" />
      <apidata name="Sacl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_SecurityMasks_Sacl" />
    </api>
    <api id="T:System.DirectoryServices.SortDirection">
      <topicdata group="api" />
      <apidata name="SortDirection" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.SortDirection.Ascending" />
        <element api="F:System.DirectoryServices.SortDirection.Descending" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="T_System_DirectoryServices_SortDirection" />
    </api>
    <api id="F:System.DirectoryServices.SortDirection.Ascending">
      <topicdata group="api" notopic="" />
      <apidata name="Ascending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_SortDirection_Ascending" />
    </api>
    <api id="F:System.DirectoryServices.SortDirection.Descending">
      <topicdata group="api" notopic="" />
      <apidata name="Descending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_SortDirection_Descending" />
    </api>
    <api id="T:System.DirectoryServices.SortOption">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.SortOption" />
      <apidata name="SortOption" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_SortOption" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.SortOption">
      <topicdata name="SortOption" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.SortOption" />
      <apidata name="SortOption" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.DirectoryServices.SortOption.#ctor">
          <element api="M:System.DirectoryServices.SortOption.#ctor" />
          <element api="M:System.DirectoryServices.SortOption.#ctor(System.String,System.DirectoryServices.SortDirection)" />
        </element>
        <element api="P:System.DirectoryServices.SortOption.Direction" />
        <element api="P:System.DirectoryServices.SortOption.PropertyName" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_SortOption" />
    </api>
    <api id="Properties.T:System.DirectoryServices.SortOption">
      <topicdata name="SortOption" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.SortOption" />
      <apidata name="SortOption" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.SortOption.Direction" />
        <element api="P:System.DirectoryServices.SortOption.PropertyName" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_SortOption" />
    </api>
    <api id="Overload:System.DirectoryServices.SortOption.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.SortOption" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.SortOption.#ctor" />
        <element api="M:System.DirectoryServices.SortOption.#ctor(System.String,System.DirectoryServices.SortDirection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_SortOption_ctor" />
    </api>
    <api id="M:System.DirectoryServices.SortOption.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.SortOption.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_SortOption_ctor" />
    </api>
    <api id="M:System.DirectoryServices.SortOption.#ctor(System.String,System.DirectoryServices.SortDirection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.SortOption.#ctor" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.SortDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_SortOption_ctor_2_21287b7f" />
    </api>
    <api id="P:System.DirectoryServices.SortOption.Direction">
      <topicdata group="api" />
      <apidata name="Direction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSortDirection</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_SortOption_Direction" />
    </api>
    <api id="P:System.DirectoryServices.SortOption.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSortName</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_DirectoryServices_SortOption_PropertyName" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" />
      <apidata name="ActiveDirectoryInterSiteTransport" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryInterSiteTransport" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport">
      <topicdata name="ActiveDirectoryInterSiteTransport" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" />
      <apidata name="ActiveDirectoryInterSiteTransport" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.BridgeAllSiteLinks" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.FindByTransportType(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.IgnoreReplicationSchedule" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Save" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinkBridges" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinks" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.TransportType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryInterSiteTransport" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport">
      <topicdata name="ActiveDirectoryInterSiteTransport" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" />
      <apidata name="ActiveDirectoryInterSiteTransport" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.FindByTransportType(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryInterSiteTransport" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport">
      <topicdata name="ActiveDirectoryInterSiteTransport" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" />
      <apidata name="ActiveDirectoryInterSiteTransport" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.BridgeAllSiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.IgnoreReplicationSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinkBridges" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.TransportType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryInterSiteTransport" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryInterSiteTransport_Dispose" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.BridgeAllSiteLinks">
      <topicdata group="api" />
      <apidata name="BridgeAllSiteLinks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectoryInterSiteTransport_BridgeAllSiteLinks" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryInterSiteTransport_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryInterSiteTransport_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.FindByTransportType(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <topicdata group="api" />
      <apidata name="FindByTransportType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryInterSiteTransport_FindByTransportType_2_961405a0" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryInterSiteTransport_GetDirectoryEntry" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.IgnoreReplicationSchedule">
      <topicdata group="api" />
      <apidata name="IgnoreReplicationSchedule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectoryInterSiteTransport_IgnoreReplicationSchedule" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryInterSiteTransport_Save" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinkBridges">
      <topicdata group="api" />
      <apidata name="SiteLinkBridges" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectoryInterSiteTransport_SiteLinkBridges" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinks">
      <topicdata group="api" />
      <apidata name="SiteLinks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectoryInterSiteTransport_SiteLinks" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryInterSiteTransport_ToString" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.TransportType">
      <topicdata group="api" />
      <apidata name="TransportType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectoryInterSiteTransport_TransportType" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" />
      <apidata name="ActiveDirectoryObjectExistsException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectExistsException" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">
      <topicdata name="ActiveDirectoryObjectExistsException" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" />
      <apidata name="ActiveDirectoryObjectExistsException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectExistsException" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectExistsException_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectExistsException_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectExistsException_ctor_2_4075724f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectExistsException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectExistsException_ctor_2_3ec47892" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" />
      <apidata name="ActiveDirectoryObjectNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectNotFoundException" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">
      <topicdata name="ActiveDirectoryObjectNotFoundException" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" />
      <apidata name="ActiveDirectoryObjectNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Exception)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Type,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Type" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectNotFoundException" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">
      <topicdata name="ActiveDirectoryObjectNotFoundException" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" />
      <apidata name="ActiveDirectoryObjectNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectNotFoundException" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">
      <topicdata name="ActiveDirectoryObjectNotFoundException" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" />
      <apidata name="ActiveDirectoryObjectNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Type" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectNotFoundException" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectNotFoundException_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectNotFoundException_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectNotFoundException_ctor_2_4075724f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectNotFoundException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectNotFoundException_ctor_2_3ec47892" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Type,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectNotFoundException_ctor_3_a6d38caa" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectNotFoundException_GetObjectData_2_af75a6ab" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectNotFoundException_Name" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectoryObjectNotFoundException_Type" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" />
      <apidata name="ActiveDirectoryOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryOperationException" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">
      <topicdata name="ActiveDirectoryOperationException" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" />
      <apidata name="ActiveDirectoryOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Int32)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception,System.Int32)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryOperationException" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">
      <topicdata name="ActiveDirectoryOperationException" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" />
      <apidata name="ActiveDirectoryOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryOperationException" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">
      <topicdata name="ActiveDirectoryOperationException" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" />
      <apidata name="ActiveDirectoryOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryOperationException" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryOperationException_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryOperationException_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryOperationException_ctor_2_4075724f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryOperationException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryOperationException_ctor_2_3ec47892" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryOperationException_ctor_3_ab722368" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryOperationException_ctor_2_2a12f2ae" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode">
      <topicdata group="api" />
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectoryOperationException_ErrorCode" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryOperationException_GetObjectData_2_af75a6ab" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
      <apidata name="ActiveDirectoryPartition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
          <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryPartition" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition">
      <topicdata name="ActiveDirectoryPartition" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
      <apidata name="ActiveDirectoryPartition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.#ctor" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryPartition" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition">
      <topicdata name="ActiveDirectoryPartition" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
      <apidata name="ActiveDirectoryPartition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryPartition" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition">
      <topicdata name="ActiveDirectoryPartition" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
      <apidata name="ActiveDirectoryPartition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryPartition" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryPartition_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryPartition_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryPartition_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryPartition_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryPartition_GetDirectoryEntry" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectoryPartition_Name" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryPartition_ToString" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" />
      <apidata name="ActiveDirectoryReplicationMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.DictionaryBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryReplicationMetadata" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata">
      <topicdata name="ActiveDirectoryReplicationMetadata" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" />
      <apidata name="ActiveDirectoryReplicationMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.DictionaryBase.Clear" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo">
          <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)" />
        </element>
        <element api="P:System.Collections.DictionaryBase.Count" />
        <element api="P:System.Collections.DictionaryBase.Dictionary" />
        <element api="M:System.Collections.DictionaryBase.GetEnumerator" />
        <element api="P:System.Collections.DictionaryBase.InnerHashtable" />
        <element api="M:System.Collections.DictionaryBase.OnClear" />
        <element api="M:System.Collections.DictionaryBase.OnClearComplete" />
        <element api="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.AttributeNames" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Contains(System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Item(System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Values" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryReplicationMetadata" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata">
      <topicdata name="ActiveDirectoryReplicationMetadata" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" />
      <apidata name="ActiveDirectoryReplicationMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.DictionaryBase.Clear" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo">
          <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)" />
        </element>
        <element api="M:System.Collections.DictionaryBase.GetEnumerator" />
        <element api="M:System.Collections.DictionaryBase.OnClear" />
        <element api="M:System.Collections.DictionaryBase.OnClearComplete" />
        <element api="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Contains(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryReplicationMetadata" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata">
      <topicdata name="ActiveDirectoryReplicationMetadata" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" />
      <apidata name="ActiveDirectoryReplicationMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.DictionaryBase.Count" />
        <element api="P:System.Collections.DictionaryBase.Dictionary" />
        <element api="P:System.Collections.DictionaryBase.InnerHashtable" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.AttributeNames" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Item(System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Values" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryReplicationMetadata" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryReplicationMetadata_CopyTo" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.AttributeNames">
      <topicdata group="api" />
      <apidata name="AttributeNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectoryReplicationMetadata_AttributeNames" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attributeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryReplicationMetadata_Contains_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryReplicationMetadata_CopyTo_2_b9bbd121" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectoryReplicationMetadata_Item_1_72eac341" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectoryReplicationMetadata_Values" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryRole" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.SchemaRole" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.NamingRole" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.PdcRole" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.RidRole" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.InfrastructureRole" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryRole" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.InfrastructureRole">
      <topicdata group="api" notopic="" />
      <apidata name="InfrastructureRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectoryRole_InfrastructureRole" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.NamingRole">
      <topicdata group="api" notopic="" />
      <apidata name="NamingRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectoryRole_NamingRole" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.PdcRole">
      <topicdata group="api" notopic="" />
      <apidata name="PdcRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectoryRole_PdcRole" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.RidRole">
      <topicdata group="api" notopic="" />
      <apidata name="RidRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectoryRole_RidRole" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.SchemaRole">
      <topicdata group="api" notopic="" />
      <apidata name="SchemaRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectoryRole_SchemaRole" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" />
      <apidata name="ActiveDirectoryRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryRoleCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection">
      <topicdata name="ActiveDirectoryRoleCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" />
      <apidata name="ActiveDirectoryRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryRoleCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection">
      <topicdata name="ActiveDirectoryRoleCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" />
      <apidata name="ActiveDirectoryRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryRoleCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection">
      <topicdata name="ActiveDirectoryRoleCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" />
      <apidata name="ActiveDirectoryRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryRoleCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryRoleCollection_Contains_1_3a190799" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="roles">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryRoleCollection_CopyTo_2_f2b0cac9" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryRoleCollection_IndexOf_1_3a190799" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectoryRoleCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
      <apidata name="ActiveDirectorySchedule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchedule" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule">
      <topicdata name="ActiveDirectorySchedule" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
      <apidata name="ActiveDirectorySchedule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchedule" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule">
      <topicdata name="ActiveDirectorySchedule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
      <apidata name="ActiveDirectorySchedule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchedule" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule">
      <topicdata name="ActiveDirectorySchedule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
      <apidata name="ActiveDirectorySchedule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchedule" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchedule_ctor" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule">
      <topicdata name="SetSchedule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
      <apidata name="SetSchedule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchedule_SetSchedule" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchedule_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
      <parameters>
        <parameter name="schedule">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchedule_ctor_1_369d9be8" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule">
      <topicdata group="api" />
      <apidata name="RawSchedule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <arrayOf rank="3">
          <type api="T:System.Boolean" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchedule_RawSchedule" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule">
      <topicdata group="api" />
      <apidata name="ResetSchedule" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchedule_ResetSchedule" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)">
      <topicdata group="api" />
      <apidata name="SetDailySchedule" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fromHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="fromMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
        <parameter name="toHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="toMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchedule_SetDailySchedule_4_fa729f31" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)">
      <topicdata group="api" />
      <apidata name="SetSchedule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="day">
          <type api="T:System.DayOfWeek" ref="false" />
        </parameter>
        <parameter name="fromHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="fromMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
        <parameter name="toHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="toMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchedule_SetSchedule_5_ba7a52cb" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)">
      <topicdata group="api" />
      <apidata name="SetSchedule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="days">
          <arrayOf rank="1">
            <type api="T:System.DayOfWeek" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="fromHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="fromMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
        <parameter name="toHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="toMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchedule_SetSchedule_5_bc5f0d8f" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
      <apidata name="ActiveDirectorySchema" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema">
      <topicdata name="ActiveDirectorySchema" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
      <apidata name="ActiveDirectorySchema" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema">
      <topicdata name="ActiveDirectorySchema" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
      <apidata name="ActiveDirectorySchema" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema">
      <topicdata name="ActiveDirectorySchema" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
      <apidata name="ActiveDirectorySchema" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_Dispose" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses">
      <topicdata name="FindAllClasses" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
      <apidata name="FindAllClasses" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_FindAllClasses" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties">
      <topicdata name="FindAllProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
      <apidata name="FindAllProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_FindAllProperties" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses">
      <topicdata group="api" />
      <apidata name="FindAllClasses" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_FindAllClasses" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)">
      <topicdata group="api" />
      <apidata name="FindAllClasses" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_FindAllClasses_1_bf7be233" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses">
      <topicdata group="api" />
      <apidata name="FindAllDefunctClasses" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_FindAllDefunctClasses" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties">
      <topicdata group="api" />
      <apidata name="FindAllDefunctProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_FindAllDefunctProperties" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties">
      <topicdata group="api" />
      <apidata name="FindAllProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_FindAllProperties" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)">
      <topicdata group="api" />
      <apidata name="FindAllProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_FindAllProperties_1_c4d9a708" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)">
      <topicdata group="api" />
      <apidata name="FindClass" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_FindClass_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)">
      <topicdata group="api" />
      <apidata name="FindDefunctClass" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="commonName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_FindDefunctClass_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)">
      <topicdata group="api" />
      <apidata name="FindDefunctProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="commonName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_FindDefunctProperty_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)">
      <topicdata group="api" />
      <apidata name="FindProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_FindProperty_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema">
      <topicdata group="api" />
      <apidata name="GetCurrentSchema" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_GetCurrentSchema" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_GetDirectoryEntry" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_GetSchema_1_45a50114" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema">
      <topicdata group="api" />
      <apidata name="RefreshSchema" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_RefreshSchema" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner">
      <topicdata group="api" />
      <apidata name="SchemaRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchema_SchemaRoleOwner" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />
      <apidata name="ActiveDirectorySchemaClass" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass">
      <topicdata name="ActiveDirectorySchemaClass" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />
      <apidata name="ActiveDirectorySchemaClass" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.AuxiliaryClasses" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.CommonName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.DefaultObjectSecurityDescriptor" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Description" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetAllProperties" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.IsDefunct" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.MandatoryProperties" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Oid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.OptionalProperties" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleInferiors" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleSuperiors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Save" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SchemaGuid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SubClassOf" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Type" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass">
      <topicdata name="ActiveDirectorySchemaClass" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />
      <apidata name="ActiveDirectorySchemaClass" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetAllProperties" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass">
      <topicdata name="ActiveDirectorySchemaClass" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />
      <apidata name="ActiveDirectorySchemaClass" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.AuxiliaryClasses" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.CommonName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.DefaultObjectSecurityDescriptor" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Description" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.IsDefunct" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.MandatoryProperties" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Oid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.OptionalProperties" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleInferiors" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleSuperiors" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SchemaGuid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SubClassOf" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Type" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_ctor_2_6aa9a225" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.AuxiliaryClasses">
      <topicdata group="api" />
      <apidata name="AuxiliaryClasses" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_AuxiliaryClasses" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.CommonName">
      <topicdata group="api" />
      <apidata name="CommonName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_CommonName" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.DefaultObjectSecurityDescriptor">
      <topicdata group="api" />
      <apidata name="DefaultObjectSecurityDescriptor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_DefaultObjectSecurityDescriptor" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_Description" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_FindByName_2_ba9335c4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetAllProperties">
      <topicdata group="api" />
      <apidata name="GetAllProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_GetAllProperties" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_GetDirectoryEntry" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.IsDefunct">
      <topicdata group="api" />
      <apidata name="IsDefunct" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_IsDefunct" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.MandatoryProperties">
      <topicdata group="api" />
      <apidata name="MandatoryProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_MandatoryProperties" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_Name" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Oid">
      <topicdata group="api" />
      <apidata name="Oid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_Oid" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.OptionalProperties">
      <topicdata group="api" />
      <apidata name="OptionalProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_OptionalProperties" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleInferiors">
      <topicdata group="api" />
      <apidata name="PossibleInferiors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_PossibleInferiors" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleSuperiors">
      <topicdata group="api" />
      <apidata name="PossibleSuperiors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_PossibleSuperiors" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_Save" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SchemaGuid">
      <topicdata group="api" />
      <apidata name="SchemaGuid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_SchemaGuid" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SubClassOf">
      <topicdata group="api" />
      <apidata name="SubClassOf" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_SubClassOf" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_ToString" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClass_Type" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" />
      <apidata name="ActiveDirectorySchemaClassCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection">
      <topicdata name="ActiveDirectorySchemaClassCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" />
      <apidata name="ActiveDirectorySchemaClassCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Item(System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection">
      <topicdata name="ActiveDirectorySchemaClassCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" />
      <apidata name="ActiveDirectorySchemaClassCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection">
      <topicdata name="ActiveDirectorySchemaClassCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" />
      <apidata name="ActiveDirectorySchemaClassCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection_AddRange" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection_Add_1_8d30c341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClasses">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection_AddRange_1_2a8698e1" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClasses">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection_AddRange_1_9bd924cb" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClasses">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection_AddRange_1_45c47405" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection_Contains_1_8d30c341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClasses">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection_CopyTo_2_be5740c9" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection_IndexOf_1_8d30c341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection_Insert_2_3a09f30a" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnClearComplete">
      <topicdata group="api" />
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection_OnClearComplete" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnInsertComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection_OnInsertComplete_2_a902cdae" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnRemoveComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection_OnRemoveComplete_2_a902cdae" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection_OnSetComplete_3_6a6320c0" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnValidate(System.Object)">
      <topicdata group="api" />
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection_OnValidate_1_2572741a" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaClassCollection_Remove_1_8d30c341" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />
      <apidata name="ActiveDirectorySchemaProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty">
      <topicdata name="ActiveDirectorySchemaProperty" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />
      <apidata name="ActiveDirectorySchemaProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.CommonName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Description" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsDefunct" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInAnr" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexed" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexedOverContainer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInGlobalCatalog" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsOnTombstonedObject" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsSingleValued" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsTupleIndexed" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Link" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.LinkId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Oid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeLower" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeUpper" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Save" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.SchemaGuid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Syntax" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty">
      <topicdata name="ActiveDirectorySchemaProperty" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />
      <apidata name="ActiveDirectorySchemaProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty">
      <topicdata name="ActiveDirectorySchemaProperty" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />
      <apidata name="ActiveDirectorySchemaProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.CommonName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Description" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsDefunct" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInAnr" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexed" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexedOverContainer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInGlobalCatalog" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsOnTombstonedObject" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsSingleValued" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsTupleIndexed" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Link" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.LinkId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Oid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeLower" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeUpper" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.SchemaGuid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Syntax" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_ctor_2_6aa9a225" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.CommonName">
      <topicdata group="api" />
      <apidata name="CommonName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_CommonName" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_Description" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_FindByName_2_ba9335c4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_GetDirectoryEntry" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsDefunct">
      <topicdata group="api" />
      <apidata name="IsDefunct" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_IsDefunct" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInAnr">
      <topicdata group="api" />
      <apidata name="IsInAnr" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_IsInAnr" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexed">
      <topicdata group="api" />
      <apidata name="IsIndexed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_IsIndexed" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexedOverContainer">
      <topicdata group="api" />
      <apidata name="IsIndexedOverContainer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_IsIndexedOverContainer" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInGlobalCatalog">
      <topicdata group="api" />
      <apidata name="IsInGlobalCatalog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_IsInGlobalCatalog" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsOnTombstonedObject">
      <topicdata group="api" />
      <apidata name="IsOnTombstonedObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_IsOnTombstonedObject" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsSingleValued">
      <topicdata group="api" />
      <apidata name="IsSingleValued" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_IsSingleValued" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsTupleIndexed">
      <topicdata group="api" />
      <apidata name="IsTupleIndexed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_IsTupleIndexed" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Link">
      <topicdata group="api" />
      <apidata name="Link" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_Link" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.LinkId">
      <topicdata group="api" />
      <apidata name="LinkId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_LinkId" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_Name" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Oid">
      <topicdata group="api" />
      <apidata name="Oid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_Oid" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeLower">
      <topicdata group="api" />
      <apidata name="RangeLower" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_RangeLower" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeUpper">
      <topicdata group="api" />
      <apidata name="RangeUpper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_RangeUpper" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_Save" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.SchemaGuid">
      <topicdata group="api" />
      <apidata name="SchemaGuid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_SchemaGuid" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Syntax">
      <topicdata group="api" />
      <apidata name="Syntax" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_Syntax" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaProperty_ToString" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" />
      <apidata name="ActiveDirectorySchemaPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection">
      <topicdata name="ActiveDirectorySchemaPropertyCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" />
      <apidata name="ActiveDirectorySchemaPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Item(System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection">
      <topicdata name="ActiveDirectorySchemaPropertyCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" />
      <apidata name="ActiveDirectorySchemaPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection">
      <topicdata name="ActiveDirectorySchemaPropertyCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" />
      <apidata name="ActiveDirectorySchemaPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection_AddRange" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection_Add_1_fc65730b" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="properties">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection_AddRange_1_261a3a0d" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="properties">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection_AddRange_1_ed2c94ab" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="properties">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection_AddRange_1_6f3c8514" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection_Contains_1_fc65730b" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="properties">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection_CopyTo_2_c41b47f8" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection_IndexOf_1_fc65730b" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection_Insert_2_fb420035" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnClearComplete">
      <topicdata group="api" />
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection_OnClearComplete" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnInsertComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection_OnInsertComplete_2_a902cdae" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnRemoveComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection_OnRemoveComplete_2_a902cdae" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection_OnSetComplete_3_6a6320c0" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnValidate(System.Object)">
      <topicdata group="api" />
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection_OnValidate_1_2572741a" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySchemaPropertyCollection_Remove_1_fc65730b" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" />
      <apidata name="ActiveDirectoryServerDownException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryServerDownException" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">
      <topicdata name="ActiveDirectoryServerDownException" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" />
      <apidata name="ActiveDirectoryServerDownException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Int32,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception,System.Int32,System.String)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.ErrorCode" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Message" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Name" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryServerDownException" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">
      <topicdata name="ActiveDirectoryServerDownException" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" />
      <apidata name="ActiveDirectoryServerDownException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryServerDownException" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">
      <topicdata name="ActiveDirectoryServerDownException" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" />
      <apidata name="ActiveDirectoryServerDownException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.ErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Message" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Name" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryServerDownException" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Int32,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryServerDownException_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryServerDownException_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryServerDownException_ctor_2_4075724f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryServerDownException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryServerDownException_ctor_2_3ec47892" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryServerDownException_ctor_4_a5d077c6" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectoryServerDownException_ctor_3_d4a7fcef" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.ErrorCode">
      <topicdata group="api" />
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectoryServerDownException_ErrorCode" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectoryServerDownException_GetObjectData_2_af75a6ab" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.Message">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.InteropServices._Exception.Message">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectoryServerDownException_Message" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectoryServerDownException_Name" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" />
      <apidata name="ActiveDirectorySite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite">
      <topicdata name="ActiveDirectorySite" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" />
      <apidata name="ActiveDirectorySite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.AdjacentSites" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.BridgeheadServers" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Domains" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetComputerSite" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.InterSiteTopologyGenerator" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.IntraSiteReplicationSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Location" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Options" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredRpcBridgeheadServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredSmtpBridgeheadServers" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Save" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Servers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.SiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Subnets" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite">
      <topicdata name="ActiveDirectorySite" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" />
      <apidata name="ActiveDirectorySite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetComputerSite" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite">
      <topicdata name="ActiveDirectorySite" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" />
      <apidata name="ActiveDirectorySite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.AdjacentSites" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.BridgeheadServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Domains" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.InterSiteTopologyGenerator" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.IntraSiteReplicationSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Location" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Options" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredRpcBridgeheadServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredSmtpBridgeheadServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Servers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.SiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Subnets" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_ctor_2_6aa9a225" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.AdjacentSites">
      <topicdata group="api" />
      <apidata name="AdjacentSites" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_AdjacentSites" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.BridgeheadServers">
      <topicdata group="api" />
      <apidata name="BridgeheadServers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_BridgeheadServers" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_Delete" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_Dispose_1_36d384f7" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Domains">
      <topicdata group="api" />
      <apidata name="Domains" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_Domains" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_FindByName_2_ba9335c4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetComputerSite">
      <topicdata group="api" />
      <apidata name="GetComputerSite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_GetComputerSite" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_GetDirectoryEntry" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.InterSiteTopologyGenerator">
      <topicdata group="api" />
      <apidata name="InterSiteTopologyGenerator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_InterSiteTopologyGenerator" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.IntraSiteReplicationSchedule">
      <topicdata group="api" />
      <apidata name="IntraSiteReplicationSchedule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_IntraSiteReplicationSchedule" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Location">
      <topicdata group="api" />
      <apidata name="Location" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_Location" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_Name" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Options">
      <topicdata group="api" />
      <apidata name="Options" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_Options" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredRpcBridgeheadServers">
      <topicdata group="api" />
      <apidata name="PreferredRpcBridgeheadServers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_PreferredRpcBridgeheadServers" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredSmtpBridgeheadServers">
      <topicdata group="api" />
      <apidata name="PreferredSmtpBridgeheadServers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_PreferredSmtpBridgeheadServers" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_Save" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Servers">
      <topicdata group="api" />
      <apidata name="Servers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_Servers" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.SiteLinks">
      <topicdata group="api" />
      <apidata name="SiteLinks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_SiteLinks" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Subnets">
      <topicdata group="api" />
      <apidata name="Subnets" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_Subnets" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySite_ToString" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" />
      <apidata name="ActiveDirectorySiteCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection">
      <topicdata name="ActiveDirectorySiteCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" />
      <apidata name="ActiveDirectorySiteCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Item(System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection">
      <topicdata name="ActiveDirectorySiteCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" />
      <apidata name="ActiveDirectorySiteCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection">
      <topicdata name="ActiveDirectorySiteCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" />
      <apidata name="ActiveDirectorySiteCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection_AddRange" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection_Add_1_e2ef1e63" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sites">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection_AddRange_1_ec5ac6e4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sites">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection_AddRange_1_aac0c91d" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection_Contains_1_e2ef1e63" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection_CopyTo_2_7cd86c5f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection_IndexOf_1_e2ef1e63" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection_Insert_2_579429cf" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnClearComplete">
      <topicdata group="api" />
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection_OnClearComplete" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnInsertComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection_OnInsertComplete_2_a902cdae" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnRemoveComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection_OnRemoveComplete_2_a902cdae" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection_OnSetComplete_3_6a6320c0" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnValidate(System.Object)">
      <topicdata group="api" />
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection_OnValidate_1_2572741a" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteCollection_Remove_1_e2ef1e63" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" />
      <apidata name="ActiveDirectorySiteLink" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink">
      <topicdata name="ActiveDirectorySiteLink" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" />
      <apidata name="ActiveDirectorySiteLink" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Cost" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.DataCompressionEnabled" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.InterSiteReplicationSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.NotificationEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReciprocalReplicationEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReplicationInterval" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Save" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Sites" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.TransportType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink">
      <topicdata name="ActiveDirectorySiteLink" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" />
      <apidata name="ActiveDirectorySiteLink" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink">
      <topicdata name="ActiveDirectorySiteLink" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" />
      <apidata name="ActiveDirectorySiteLink" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Cost" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.DataCompressionEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.InterSiteReplicationSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.NotificationEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReciprocalReplicationEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReplicationInterval" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Sites" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.TransportType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_ctor" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_Dispose" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName">
      <topicdata name="FindByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_FindByName" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteLinkName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_ctor_2_6aa9a225" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteLinkName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_ctor_3_4b009383" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteLinkName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
        <parameter name="schedule">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_ctor_4_eb6a88e9" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Cost">
      <topicdata group="api" />
      <apidata name="Cost" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_Cost" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.DataCompressionEnabled">
      <topicdata group="api" />
      <apidata name="DataCompressionEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_DataCompressionEnabled" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_Delete" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteLinkName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_FindByName_2_ba9335c4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteLinkName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_FindByName_3_09038ae5" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_GetDirectoryEntry" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.InterSiteReplicationSchedule">
      <topicdata group="api" />
      <apidata name="InterSiteReplicationSchedule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_InterSiteReplicationSchedule" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_Name" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.NotificationEnabled">
      <topicdata group="api" />
      <apidata name="NotificationEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_NotificationEnabled" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReciprocalReplicationEnabled">
      <topicdata group="api" />
      <apidata name="ReciprocalReplicationEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_ReciprocalReplicationEnabled" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReplicationInterval">
      <topicdata group="api" />
      <apidata name="ReplicationInterval" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_ReplicationInterval" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_Save" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Sites">
      <topicdata group="api" />
      <apidata name="Sites" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_Sites" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_ToString" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.TransportType">
      <topicdata group="api" />
      <apidata name="TransportType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLink_TransportType" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" />
      <apidata name="ActiveDirectorySiteLinkBridge" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge">
      <topicdata name="ActiveDirectorySiteLinkBridge" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" />
      <apidata name="ActiveDirectorySiteLinkBridge" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Name" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Save" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.SiteLinks" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.TransportType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge">
      <topicdata name="ActiveDirectorySiteLinkBridge" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" />
      <apidata name="ActiveDirectorySiteLinkBridge" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge">
      <topicdata name="ActiveDirectorySiteLinkBridge" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" />
      <apidata name="ActiveDirectorySiteLinkBridge" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.SiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.TransportType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge_ctor" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge_Dispose" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName">
      <topicdata name="FindByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge_FindByName" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="bridgeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge_ctor_2_6aa9a225" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="bridgeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge_ctor_3_4b009383" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge_Delete" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="bridgeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge_FindByName_2_ba9335c4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="bridgeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge_FindByName_3_09038ae5" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge_GetDirectoryEntry" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge_Name" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge_Save" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.SiteLinks">
      <topicdata group="api" />
      <apidata name="SiteLinks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge_SiteLinks" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge_ToString" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.TransportType">
      <topicdata group="api" />
      <apidata name="TransportType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkBridge_TransportType" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" />
      <apidata name="ActiveDirectorySiteLinkCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection">
      <topicdata name="ActiveDirectorySiteLinkCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" />
      <apidata name="ActiveDirectorySiteLinkCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Item(System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection">
      <topicdata name="ActiveDirectorySiteLinkCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" />
      <apidata name="ActiveDirectorySiteLinkCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection">
      <topicdata name="ActiveDirectorySiteLinkCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" />
      <apidata name="ActiveDirectorySiteLinkCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection_AddRange" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection_Add_1_6ca7bbfa" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="links">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection_AddRange_1_50323579" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="links">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection_AddRange_1_43eedcf5" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection_Contains_1_6ca7bbfa" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection_CopyTo_2_04ba145c" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection_IndexOf_1_6ca7bbfa" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection_Insert_2_ab5460e7" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnClearComplete">
      <topicdata group="api" />
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection_OnClearComplete" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnInsertComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection_OnInsertComplete_2_a902cdae" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnRemoveComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection_OnRemoveComplete_2_a902cdae" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection_OnSetComplete_3_6a6320c0" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnValidate(System.Object)">
      <topicdata group="api" />
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection_OnValidate_1_2572741a" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteLinkCollection_Remove_1_6ca7bbfa" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySiteOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.None" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoTopologyDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.TopologyCleanupDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoMinimumHopDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.StaleServerDetectDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoInterSiteTopologyDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.GroupMembershipCachingEnabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.ForceKccWindows2003Behavior" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.UseWindows2000IstgElection" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.RandomBridgeHeaderServerSelectionDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.UseHashingForReplicationSchedule" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.RedundantServerTopologyEnabled" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteOptions" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoInterSiteTopologyDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="AutoInterSiteTopologyDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteOptions_AutoInterSiteTopologyDisabled" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoMinimumHopDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="AutoMinimumHopDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteOptions_AutoMinimumHopDisabled" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoTopologyDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="AutoTopologyDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteOptions_AutoTopologyDisabled" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.ForceKccWindows2003Behavior">
      <topicdata group="api" notopic="" />
      <apidata name="ForceKccWindows2003Behavior" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteOptions_ForceKccWindows2003Behavior" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.GroupMembershipCachingEnabled">
      <topicdata group="api" notopic="" />
      <apidata name="GroupMembershipCachingEnabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteOptions_GroupMembershipCachingEnabled" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteOptions_None" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.RandomBridgeHeaderServerSelectionDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="RandomBridgeHeaderServerSelectionDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteOptions_RandomBridgeHeaderServerSelectionDisabled" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.RedundantServerTopologyEnabled">
      <topicdata group="api" notopic="" />
      <apidata name="RedundantServerTopologyEnabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>1024</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteOptions_RedundantServerTopologyEnabled" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.StaleServerDetectDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="StaleServerDetectDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteOptions_StaleServerDetectDisabled" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.TopologyCleanupDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="TopologyCleanupDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteOptions_TopologyCleanupDisabled" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.UseHashingForReplicationSchedule">
      <topicdata group="api" notopic="" />
      <apidata name="UseHashingForReplicationSchedule" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>512</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteOptions_UseHashingForReplicationSchedule" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.UseWindows2000IstgElection">
      <topicdata group="api" notopic="" />
      <apidata name="UseWindows2000IstgElection" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySiteOptions_UseWindows2000IstgElection" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" />
      <apidata name="ActiveDirectorySubnet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet">
      <topicdata name="ActiveDirectorySubnet" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" />
      <apidata name="ActiveDirectorySubnet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet">
      <topicdata name="ActiveDirectorySubnet" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" />
      <apidata name="ActiveDirectorySubnet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet">
      <topicdata name="ActiveDirectorySubnet" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" />
      <apidata name="ActiveDirectorySubnet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet_ctor" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="subnetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet_ctor_2_6aa9a225" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="subnetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet_ctor_3_d5b04945" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet_Delete" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="subnetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet_FindByName_2_ba9335c4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet_GetDirectoryEntry" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location">
      <topicdata group="api" />
      <apidata name="Location" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet_Location" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet_Name" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet_Save" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site">
      <topicdata group="api" />
      <apidata name="Site" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet_Site" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnet_ToString" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" />
      <apidata name="ActiveDirectorySubnetCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection">
      <topicdata name="ActiveDirectorySubnetCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" />
      <apidata name="ActiveDirectorySubnetCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Item(System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClear" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection">
      <topicdata name="ActiveDirectorySubnetCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" />
      <apidata name="ActiveDirectorySubnetCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClear" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection">
      <topicdata name="ActiveDirectorySubnetCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" />
      <apidata name="ActiveDirectorySubnetCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection_AddRange" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subnet">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection_Add_1_aca1fc54" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subnets">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection_AddRange_1_15720cc6" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subnets">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection_AddRange_1_e6b704ff" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subnet">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection_Contains_1_aca1fc54" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection_CopyTo_2_4ebbeb90" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subnet">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection_IndexOf_1_aca1fc54" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="subnet">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection_Insert_2_23223e88" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClear">
      <topicdata group="api" />
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClear">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection_OnClear" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClearComplete">
      <topicdata group="api" />
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection_OnClearComplete" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnInsertComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection_OnInsertComplete_2_a902cdae" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnRemoveComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection_OnRemoveComplete_2_a902cdae" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection_OnSetComplete_3_6a6320c0" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnValidate(System.Object)">
      <topicdata group="api" />
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection_OnValidate_1_2572741a" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subnet">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ActiveDirectorySubnetCollection_Remove_1_aca1fc54" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySyntax" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.CaseExactString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.CaseIgnoreString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.NumericString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DirectoryString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.OctetString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.SecurityDescriptor" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Int" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Int64" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Bool" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Oid" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.GeneralizedTime" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.UtcTime" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DN" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DNWithBinary" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DNWithString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Enumeration" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.IA5String" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.PrintableString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Sid" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.AccessPointDN" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.ORName" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.PresentationAddress" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.ReplicaLink" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.AccessPointDN">
      <topicdata group="api" notopic="" />
      <apidata name="AccessPointDN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>19</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_AccessPointDN" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Bool">
      <topicdata group="api" notopic="" />
      <apidata name="Bool" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_Bool" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.CaseExactString">
      <topicdata group="api" notopic="" />
      <apidata name="CaseExactString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_CaseExactString" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.CaseIgnoreString">
      <topicdata group="api" notopic="" />
      <apidata name="CaseIgnoreString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_CaseIgnoreString" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DirectoryString">
      <topicdata group="api" notopic="" />
      <apidata name="DirectoryString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_DirectoryString" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DN">
      <topicdata group="api" notopic="" />
      <apidata name="DN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_DN" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DNWithBinary">
      <topicdata group="api" notopic="" />
      <apidata name="DNWithBinary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_DNWithBinary" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DNWithString">
      <topicdata group="api" notopic="" />
      <apidata name="DNWithString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_DNWithString" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Enumeration">
      <topicdata group="api" notopic="" />
      <apidata name="Enumeration" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_Enumeration" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.GeneralizedTime">
      <topicdata group="api" notopic="" />
      <apidata name="GeneralizedTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_GeneralizedTime" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.IA5String">
      <topicdata group="api" notopic="" />
      <apidata name="IA5String" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_IA5String" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Int">
      <topicdata group="api" notopic="" />
      <apidata name="Int" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_Int" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Int64">
      <topicdata group="api" notopic="" />
      <apidata name="Int64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_Int64" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.NumericString">
      <topicdata group="api" notopic="" />
      <apidata name="NumericString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_NumericString" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.OctetString">
      <topicdata group="api" notopic="" />
      <apidata name="OctetString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_OctetString" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Oid">
      <topicdata group="api" notopic="" />
      <apidata name="Oid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_Oid" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.ORName">
      <topicdata group="api" notopic="" />
      <apidata name="ORName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_ORName" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.PresentationAddress">
      <topicdata group="api" notopic="" />
      <apidata name="PresentationAddress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>21</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_PresentationAddress" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.PrintableString">
      <topicdata group="api" notopic="" />
      <apidata name="PrintableString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_PrintableString" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.ReplicaLink">
      <topicdata group="api" notopic="" />
      <apidata name="ReplicaLink" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>22</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_ReplicaLink" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.SecurityDescriptor">
      <topicdata group="api" notopic="" />
      <apidata name="SecurityDescriptor" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_SecurityDescriptor" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Sid">
      <topicdata group="api" notopic="" />
      <apidata name="Sid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_Sid" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.UtcTime">
      <topicdata group="api" notopic="" />
      <apidata name="UtcTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectorySyntax_UtcTime" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryTransportType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Rpc" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Smtp" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ActiveDirectoryTransportType" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Rpc">
      <topicdata group="api" notopic="" />
      <apidata name="Rpc" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectoryTransportType_Rpc" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Smtp">
      <topicdata group="api" notopic="" />
      <apidata name="Smtp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ActiveDirectoryTransportType_Smtp" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AdamInstance">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.AdamInstance" />
      <apidata name="AdamInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_AdamInstance" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.AdamInstance">
      <topicdata name="AdamInstance" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AdamInstance" />
      <apidata name="AdamInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.HostName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.Roles" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_AdamInstance" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.AdamInstance">
      <topicdata name="AdamInstance" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AdamInstance" />
      <apidata name="AdamInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_AdamInstance" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.AdamInstance">
      <topicdata name="AdamInstance" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AdamInstance" />
      <apidata name="AdamInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.HostName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.Roles" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_AdamInstance" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.AdamInstance" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_AdamInstance_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency">
      <topicdata group="api" />
      <apidata name="CheckReplicationConsistency" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_CheckReplicationConsistency" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet">
      <topicdata group="api" />
      <apidata name="ConfigurationSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AdamInstance_ConfigurationSet" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition">
      <topicdata group="api" />
      <apidata name="DefaultPartition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AdamInstance_DefaultPartition" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_Finalize" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_FindAll_2_ba9335c4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_FindOne_2_ba9335c4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="GetAdamInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_GetAdamInstance_1_45a50114" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors">
      <topicdata group="api" />
      <apidata name="GetAllReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_GetAllReplicationNeighbors" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures">
      <topicdata group="api" />
      <apidata name="GetReplicationConnectionFailures" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_GetReplicationConnectionFailures" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationCursors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_GetReplicationCursors_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="objectPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_GetReplicationMetadata_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_GetReplicationNeighbors_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation">
      <topicdata group="api" />
      <apidata name="GetReplicationOperationInformation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_GetReplicationOperationInformation" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.HostName">
      <topicdata group="api" />
      <apidata name="HostName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AdamInstance_HostName" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections">
      <topicdata group="api" />
      <apidata name="InboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AdamInstance_InboundConnections" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress">
      <topicdata group="api" />
      <apidata name="IPAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AdamInstance_IPAddress" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort">
      <topicdata group="api" />
      <apidata name="LdapPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AdamInstance_LdapPort" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections">
      <topicdata group="api" />
      <apidata name="OutboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AdamInstance_OutboundConnections" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.Roles">
      <topicdata group="api" />
      <apidata name="Roles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AdamInstance_Roles" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_Save" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <topicdata group="api" />
      <apidata name="SeizeRoleOwnership" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_SeizeRoleOwnership_1_806b1be4" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName">
      <topicdata group="api" />
      <apidata name="SiteName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AdamInstance_SiteName" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort">
      <topicdata group="api" />
      <apidata name="SslPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AdamInstance_SslPort" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback">
      <topicdata group="api" />
      <apidata name="SyncFromAllServersCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AdamInstance_SyncFromAllServersCallback" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
      <topicdata group="api" />
      <apidata name="SyncReplicaFromAllServers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_SyncReplicaFromAllServers_2_2142bfc4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SyncReplicaFromServer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_SyncReplicaFromServer_2_52fce4af" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <topicdata group="api" />
      <apidata name="TransferRoleOwnership" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_TransferRoleOwnership_1_806b1be4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(System.String)">
      <topicdata group="api" />
      <apidata name="TriggerSyncReplicaFromNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstance_TriggerSyncReplicaFromNeighbors_1_72eac341" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" />
      <apidata name="AdamInstanceCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_AdamInstanceCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection">
      <topicdata name="AdamInstanceCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" />
      <apidata name="AdamInstanceCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamInstance)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamInstance[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamInstance)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_AdamInstanceCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection">
      <topicdata name="AdamInstanceCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" />
      <apidata name="AdamInstanceCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamInstance)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamInstance[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamInstance)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_AdamInstanceCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection">
      <topicdata name="AdamInstanceCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" />
      <apidata name="AdamInstanceCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_AdamInstanceCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamInstance)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="adamInstance">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstanceCollection_Contains_1_4b64def5" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamInstance[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="adamInstances">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstanceCollection_CopyTo_2_af7bef6e" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamInstance)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="adamInstance">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamInstanceCollection_IndexOf_1_4b64def5" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AdamInstanceCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AdamRole">
      <topicdata group="api" />
      <apidata name="AdamRole" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.AdamRole.SchemaRole" />
        <element api="F:System.DirectoryServices.ActiveDirectory.AdamRole.NamingRole" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_AdamRole" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.AdamRole.NamingRole">
      <topicdata group="api" notopic="" />
      <apidata name="NamingRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_AdamRole_NamingRole" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.AdamRole.SchemaRole">
      <topicdata group="api" notopic="" />
      <apidata name="SchemaRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_AdamRole_SchemaRole" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" />
      <apidata name="AdamRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_AdamRoleCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection">
      <topicdata name="AdamRoleCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" />
      <apidata name="AdamRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_AdamRoleCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection">
      <topicdata name="AdamRoleCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" />
      <apidata name="AdamRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_AdamRoleCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection">
      <topicdata name="AdamRoleCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" />
      <apidata name="AdamRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_AdamRoleCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamRoleCollection_Contains_1_806b1be4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="roles">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamRoleCollection_CopyTo_2_5eaf2391" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AdamRoleCollection_IndexOf_1_806b1be4" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AdamRoleCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" />
      <apidata name="ApplicationPartition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_ApplicationPartition" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ApplicationPartition">
      <topicdata name="ApplicationPartition" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" />
      <apidata name="ApplicationPartition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Delete" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.DirectoryServers" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers">
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers">
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers(System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer">
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.Boolean)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String,System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetApplicationPartition(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Save" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.SecurityReferenceDomain" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ApplicationPartition" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ApplicationPartition">
      <topicdata name="ApplicationPartition" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" />
      <apidata name="ApplicationPartition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers">
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers">
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers(System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer">
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.Boolean)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String,System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetApplicationPartition(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Save" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ApplicationPartition" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ApplicationPartition">
      <topicdata name="ApplicationPartition" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" />
      <apidata name="ApplicationPartition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.DirectoryServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.SecurityReferenceDomain" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ApplicationPartition" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ApplicationPartition_Dispose" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ApplicationPartition_ctor" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers">
      <topicdata name="FindAllDirectoryServers" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" />
      <apidata name="FindAllDirectoryServers" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ApplicationPartition_FindAllDirectoryServers" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers">
      <topicdata name="FindAllDiscoverableDirectoryServers" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" />
      <apidata name="FindAllDiscoverableDirectoryServers" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ApplicationPartition_FindAllDiscoverableDirectoryServers" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer">
      <topicdata name="FindDirectoryServer" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" />
      <apidata name="FindDirectoryServer" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ApplicationPartition_FindDirectoryServer" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="distinguishedName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ApplicationPartition_ctor_2_6aa9a225" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="distinguishedName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="objectClass">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ApplicationPartition_ctor_3_d5b04945" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartition_Delete" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.DirectoryServers">
      <topicdata group="api" />
      <apidata name="DirectoryServers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ApplicationPartition_DirectoryServers" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartition_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers">
      <topicdata group="api" />
      <apidata name="FindAllDirectoryServers" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartition_FindAllDirectoryServers" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers(System.String)">
      <topicdata group="api" />
      <apidata name="FindAllDirectoryServers" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartition_FindAllDirectoryServers_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers">
      <topicdata group="api" />
      <apidata name="FindAllDiscoverableDirectoryServers" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartition_FindAllDiscoverableDirectoryServers" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers(System.String)">
      <topicdata group="api" />
      <apidata name="FindAllDiscoverableDirectoryServers" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartition_FindAllDiscoverableDirectoryServers_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="distinguishedName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartition_FindByName_2_ba9335c4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer">
      <topicdata group="api" />
      <apidata name="FindDirectoryServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartition_FindDirectoryServer" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindDirectoryServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="forceRediscovery">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartition_FindDirectoryServer_1_36d384f7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String)">
      <topicdata group="api" />
      <apidata name="FindDirectoryServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartition_FindDirectoryServer_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindDirectoryServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="forceRediscovery">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartition_FindDirectoryServer_2_00bbdc3f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetApplicationPartition(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="GetApplicationPartition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartition_GetApplicationPartition_1_45a50114" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartition_GetDirectoryEntry" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartition_Save" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.SecurityReferenceDomain">
      <topicdata group="api" />
      <apidata name="SecurityReferenceDomain" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ApplicationPartition_SecurityReferenceDomain" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" />
      <apidata name="ApplicationPartitionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ApplicationPartitionCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection">
      <topicdata name="ApplicationPartitionCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" />
      <apidata name="ApplicationPartitionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Contains(System.DirectoryServices.ActiveDirectory.ApplicationPartition)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ApplicationPartition[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ApplicationPartition)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ApplicationPartitionCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection">
      <topicdata name="ApplicationPartitionCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" />
      <apidata name="ApplicationPartitionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Contains(System.DirectoryServices.ActiveDirectory.ApplicationPartition)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ApplicationPartition[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ApplicationPartition)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ApplicationPartitionCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection">
      <topicdata name="ApplicationPartitionCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" />
      <apidata name="ApplicationPartitionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ApplicationPartitionCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Contains(System.DirectoryServices.ActiveDirectory.ApplicationPartition)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="applicationPartition">
          <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartitionCollection_Contains_1_597b0dd7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ApplicationPartition[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="applicationPartitions">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartitionCollection_CopyTo_2_e26cb09d" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ApplicationPartition)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="applicationPartition">
          <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ApplicationPartitionCollection_IndexOf_1_597b0dd7" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ApplicationPartitionCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" />
      <apidata name="AttributeMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_AttributeMetadata" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.AttributeMetadata">
      <topicdata name="AttributeMetadata" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" />
      <apidata name="AttributeMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingChangeTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingInvocationId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LocalChangeUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingChangeUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Version" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_AttributeMetadata" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.AttributeMetadata">
      <topicdata name="AttributeMetadata" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" />
      <apidata name="AttributeMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingChangeTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingInvocationId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LocalChangeUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingChangeUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Version" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_AttributeMetadata" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingChangeTime">
      <topicdata group="api" />
      <apidata name="LastOriginatingChangeTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AttributeMetadata_LastOriginatingChangeTime" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingInvocationId">
      <topicdata group="api" />
      <apidata name="LastOriginatingInvocationId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AttributeMetadata_LastOriginatingInvocationId" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LocalChangeUsn">
      <topicdata group="api" />
      <apidata name="LocalChangeUsn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AttributeMetadata_LocalChangeUsn" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AttributeMetadata_Name" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingChangeUsn">
      <topicdata group="api" />
      <apidata name="OriginatingChangeUsn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AttributeMetadata_OriginatingChangeUsn" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingServer">
      <topicdata group="api" />
      <apidata name="OriginatingServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AttributeMetadata_OriginatingServer" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AttributeMetadata_Version" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" />
      <apidata name="AttributeMetadataCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_AttributeMetadataCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection">
      <topicdata name="AttributeMetadataCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" />
      <apidata name="AttributeMetadataCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Contains(System.DirectoryServices.ActiveDirectory.AttributeMetadata)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AttributeMetadata)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_AttributeMetadataCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection">
      <topicdata name="AttributeMetadataCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" />
      <apidata name="AttributeMetadataCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Contains(System.DirectoryServices.ActiveDirectory.AttributeMetadata)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AttributeMetadata)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_AttributeMetadataCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection">
      <topicdata name="AttributeMetadataCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" />
      <apidata name="AttributeMetadataCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_AttributeMetadataCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Contains(System.DirectoryServices.ActiveDirectory.AttributeMetadata)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AttributeMetadataCollection_Contains_1_29b07db7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadata">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AttributeMetadataCollection_CopyTo_2_b9bbd121" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AttributeMetadata)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_AttributeMetadataCollection_IndexOf_1_29b07db7" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_AttributeMetadataCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />
      <apidata name="ConfigurationSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_ConfigurationSet" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ConfigurationSet">
      <topicdata name="ConfigurationSet" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />
      <apidata name="ConfigurationSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance">
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances">
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ConfigurationSet" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ConfigurationSet">
      <topicdata name="ConfigurationSet" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />
      <apidata name="ConfigurationSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance">
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances">
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ConfigurationSet" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ConfigurationSet">
      <topicdata name="ConfigurationSet" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />
      <apidata name="ConfigurationSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ConfigurationSet" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ConfigurationSet_Dispose" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance">
      <topicdata name="FindAdamInstance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />
      <apidata name="FindAdamInstance" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ConfigurationSet_FindAdamInstance" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances">
      <topicdata name="FindAllAdamInstances" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />
      <apidata name="FindAllAdamInstances" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ConfigurationSet_FindAllAdamInstances" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances">
      <topicdata group="api" />
      <apidata name="AdamInstances" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ConfigurationSet_AdamInstances" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions">
      <topicdata group="api" />
      <apidata name="ApplicationPartitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ConfigurationSet_ApplicationPartitions" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ConfigurationSet_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ConfigurationSet_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance">
      <topicdata group="api" />
      <apidata name="FindAdamInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ConfigurationSet_FindAdamInstance" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)">
      <topicdata group="api" />
      <apidata name="FindAdamInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ConfigurationSet_FindAdamInstance_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="FindAdamInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ConfigurationSet_FindAdamInstance_2_52fce4af" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances">
      <topicdata group="api" />
      <apidata name="FindAllAdamInstances" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ConfigurationSet_FindAllAdamInstances" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)">
      <topicdata group="api" />
      <apidata name="FindAllAdamInstances" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ConfigurationSet_FindAllAdamInstances_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="FindAllAdamInstances" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ConfigurationSet_FindAllAdamInstances_2_52fce4af" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="GetConfigurationSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ConfigurationSet_GetConfigurationSet_1_45a50114" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ConfigurationSet_GetDirectoryEntry" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel">
      <topicdata group="api" />
      <apidata name="GetSecurityLevel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ConfigurationSet_GetSecurityLevel" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ConfigurationSet_Name" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner">
      <topicdata group="api" />
      <apidata name="NamingRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ConfigurationSet_NamingRoleOwner" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ConfigurationSet_Schema" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner">
      <topicdata group="api" />
      <apidata name="SchemaRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ConfigurationSet_SchemaRoleOwner" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)">
      <topicdata group="api" />
      <apidata name="SetSecurityLevel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="securityLevel">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ConfigurationSet_SetSecurityLevel_1_ecef4f0f" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites">
      <topicdata group="api" />
      <apidata name="Sites" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ConfigurationSet_Sites" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ConfigurationSet_ToString" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DirectoryContext">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      <apidata name="DirectoryContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.EnvironmentPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Assert" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_DirectoryContext" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.DirectoryContext">
      <topicdata name="DirectoryContext" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      <apidata name="DirectoryContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String,System.String)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_DirectoryContext" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.DirectoryContext">
      <topicdata name="DirectoryContext" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      <apidata name="DirectoryContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_DirectoryContext" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_DirectoryContext_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor" />
      <parameters>
        <parameter name="contextType">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_DirectoryContext_ctor_1_c6d3a921" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor" />
      <parameters>
        <parameter name="contextType">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_DirectoryContext_ctor_2_7713f2d7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor" />
      <parameters>
        <parameter name="contextType">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_DirectoryContext_ctor_3_93197895" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor" />
      <parameters>
        <parameter name="contextType">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_DirectoryContext_ctor_4_8c224571" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType">
      <topicdata group="api" />
      <apidata name="ContextType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DirectoryContext_ContextType" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DirectoryContext_Name" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName">
      <topicdata group="api" />
      <apidata name="UserName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DirectoryContext_UserName" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType">
      <topicdata group="api" />
      <apidata name="DirectoryContextType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Domain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Forest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.DirectoryServer" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.ConfigurationSet" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.ApplicationPartition" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_DirectoryContextType" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.ApplicationPartition">
      <topicdata group="api" notopic="" />
      <apidata name="ApplicationPartition" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_DirectoryContextType_ApplicationPartition" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.ConfigurationSet">
      <topicdata group="api" notopic="" />
      <apidata name="ConfigurationSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_DirectoryContextType_ConfigurationSet" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.DirectoryServer">
      <topicdata group="api" notopic="" />
      <apidata name="DirectoryServer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_DirectoryContextType_DirectoryServer" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Domain">
      <topicdata group="api" notopic="" />
      <apidata name="Domain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_DirectoryContextType_Domain" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Forest">
      <topicdata group="api" notopic="" />
      <apidata name="Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_DirectoryContextType_Forest" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DirectoryServer">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.DirectoryServer" />
      <apidata name="DirectoryServer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_DirectoryServer" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.DirectoryServer">
      <topicdata name="DirectoryServer" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" />
      <apidata name="DirectoryServer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_DirectoryServer" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.DirectoryServer">
      <topicdata name="DirectoryServer" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" />
      <apidata name="DirectoryServer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_DirectoryServer" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.DirectoryServer">
      <topicdata name="DirectoryServer" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" />
      <apidata name="DirectoryServer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_DirectoryServer" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.DirectoryServer" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_DirectoryServer_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_DirectoryServer_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency">
      <topicdata group="api" />
      <apidata name="CheckReplicationConsistency" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServer_CheckReplicationConsistency" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServer_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServer_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServer_Finalize" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors">
      <topicdata group="api" />
      <apidata name="GetAllReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServer_GetAllReplicationNeighbors" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServer_GetDirectoryEntry" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures">
      <topicdata group="api" />
      <apidata name="GetReplicationConnectionFailures" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServer_GetReplicationConnectionFailures" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationCursors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServer_GetReplicationCursors_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="objectPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServer_GetReplicationMetadata_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServer_GetReplicationNeighbors_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation">
      <topicdata group="api" />
      <apidata name="GetReplicationOperationInformation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServer_GetReplicationOperationInformation" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections">
      <topicdata group="api" />
      <apidata name="InboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DirectoryServer_InboundConnections" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress">
      <topicdata group="api" />
      <apidata name="IPAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DirectoryServer_IPAddress" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)">
      <topicdata group="api" />
      <apidata name="MoveToAnotherSite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServer_MoveToAnotherSite_1_72eac341" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DirectoryServer_Name" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections">
      <topicdata group="api" />
      <apidata name="OutboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DirectoryServer_OutboundConnections" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions">
      <topicdata group="api" />
      <apidata name="Partitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DirectoryServer_Partitions" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName">
      <topicdata group="api" />
      <apidata name="SiteName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DirectoryServer_SiteName" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback">
      <topicdata group="api" />
      <apidata name="SyncFromAllServersCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DirectoryServer_SyncFromAllServersCallback" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
      <topicdata group="api" />
      <apidata name="SyncReplicaFromAllServers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServer_SyncReplicaFromAllServers_2_2142bfc4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SyncReplicaFromServer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServer_SyncReplicaFromServer_2_52fce4af" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServer_ToString" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)">
      <topicdata group="api" />
      <apidata name="TriggerSyncReplicaFromNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServer_TriggerSyncReplicaFromNeighbors_1_72eac341" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" />
      <apidata name="DirectoryServerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection">
      <topicdata name="DirectoryServerCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" />
      <apidata name="DirectoryServerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Add(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.AddRange(System.DirectoryServices.ActiveDirectory.DirectoryServer[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Item(System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClear" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Remove(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection">
      <topicdata name="DirectoryServerCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" />
      <apidata name="DirectoryServerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Add(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.AddRange(System.DirectoryServices.ActiveDirectory.DirectoryServer[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClear" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Remove(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection">
      <topicdata name="DirectoryServerCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" />
      <apidata name="DirectoryServerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Add(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="server">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection_Add_1_e0c1d2e2" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.AddRange(System.DirectoryServices.ActiveDirectory.DirectoryServer[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="servers">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection_AddRange_1_50e31bea" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="server">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection_Contains_1_e0c1d2e2" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection_CopyTo_2_6f20bb66" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="server">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection_IndexOf_1_e0c1d2e2" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="server">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection_Insert_2_a3fe74d2" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClear">
      <topicdata group="api" />
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClear">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection_OnClear" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClearComplete">
      <topicdata group="api" />
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection_OnClearComplete" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnInsertComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection_OnInsertComplete_2_a902cdae" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnRemoveComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection_OnRemoveComplete_2_a902cdae" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection_OnSetComplete_3_6a6320c0" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnValidate(System.Object)">
      <topicdata group="api" />
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection_OnValidate_1_2572741a" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Remove(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="server">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DirectoryServerCollection_Remove_1_e0c1d2e2" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.Domain">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.Domain" />
      <apidata name="Domain" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_Domain" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.Domain">
      <topicdata name="Domain" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.Domain" />
      <apidata name="Domain" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.Children" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.DomainControllers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.DomainMode" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers">
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers">
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController">
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.Forest" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.Parent" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship">
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_Domain" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.Domain">
      <topicdata name="Domain" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.Domain" />
      <apidata name="Domain" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers">
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers">
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController">
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship">
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_Domain" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.Domain">
      <topicdata name="Domain" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.Domain" />
      <apidata name="Domain" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.Children" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.DomainControllers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.DomainMode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.Forest" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.Parent" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_Domain" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Domain.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.Domain" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_Domain_Dispose" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers">
      <topicdata name="FindAllDiscoverableDomainControllers" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.Domain" />
      <apidata name="FindAllDiscoverableDomainControllers" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_Domain_FindAllDiscoverableDomainControllers" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers">
      <topicdata name="FindAllDomainControllers" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.Domain" />
      <apidata name="FindAllDomainControllers" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_Domain_FindAllDomainControllers" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController">
      <topicdata name="FindDomainController" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.Domain" />
      <apidata name="FindDomainController" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_Domain_FindDomainController" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship">
      <topicdata name="UpdateLocalSideOfTrustRelationship" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.Domain" />
      <apidata name="UpdateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_Domain_UpdateLocalSideOfTrustRelationship" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.Children">
      <topicdata group="api" />
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Domain_Children" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <topicdata group="api" />
      <apidata name="CreateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
        <parameter name="trustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_CreateLocalSideOfTrustRelationship_3_ae9cbcc6" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <topicdata group="api" />
      <apidata name="CreateTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_CreateTrustRelationship_2_3f2a9716" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)">
      <topicdata group="api" />
      <apidata name="DeleteLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_DeleteLocalSideOfTrustRelationship_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)">
      <topicdata group="api" />
      <apidata name="DeleteTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_DeleteTrustRelationship_1_4ecda35c" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.DomainControllers">
      <topicdata group="api" />
      <apidata name="DomainControllers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Domain_DomainControllers" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.DomainMode">
      <topicdata group="api" />
      <apidata name="DomainMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Domain_DomainMode" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers">
      <topicdata group="api" />
      <apidata name="FindAllDiscoverableDomainControllers" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_FindAllDiscoverableDomainControllers" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)">
      <topicdata group="api" />
      <apidata name="FindAllDiscoverableDomainControllers" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_FindAllDiscoverableDomainControllers_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers">
      <topicdata group="api" />
      <apidata name="FindAllDomainControllers" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_FindAllDomainControllers" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)">
      <topicdata group="api" />
      <apidata name="FindAllDomainControllers" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_FindAllDomainControllers_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController">
      <topicdata group="api" />
      <apidata name="FindDomainController" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_FindDomainController" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <topicdata group="api" />
      <apidata name="FindDomainController" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_FindDomainController_1_11712582" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)">
      <topicdata group="api" />
      <apidata name="FindDomainController" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_FindDomainController_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <topicdata group="api" />
      <apidata name="FindDomainController" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_FindDomainController_2_ed09b1c9" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.Forest">
      <topicdata group="api" />
      <apidata name="Forest" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Domain_Forest" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships">
      <topicdata group="api" />
      <apidata name="GetAllTrustRelationships" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_GetAllTrustRelationships" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain">
      <topicdata group="api" />
      <apidata name="GetComputerDomain" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_GetComputerDomain" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain">
      <topicdata group="api" />
      <apidata name="GetCurrentDomain" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_GetCurrentDomain" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_GetDirectoryEntry" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="GetDomain" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_GetDomain_1_45a50114" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)">
      <topicdata group="api" />
      <apidata name="GetSelectiveAuthenticationStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_GetSelectiveAuthenticationStatus_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)">
      <topicdata group="api" />
      <apidata name="GetSidFilteringStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_GetSidFilteringStatus_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)">
      <topicdata group="api" />
      <apidata name="GetTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_GetTrustRelationship_1_72eac341" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner">
      <topicdata group="api" />
      <apidata name="InfrastructureRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Domain_InfrastructureRoleOwner" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Domain_Parent" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner">
      <topicdata group="api" />
      <apidata name="PdcRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Domain_PdcRoleOwner" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)">
      <topicdata group="api" />
      <apidata name="RaiseDomainFunctionality" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="domainMode">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_RaiseDomainFunctionality_1_4667daa3" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)">
      <topicdata group="api" />
      <apidata name="RepairTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_RepairTrustRelationship_1_4ecda35c" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner">
      <topicdata group="api" />
      <apidata name="RidRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Domain_RidRoleOwner" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetSelectiveAuthenticationStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_SetSelectiveAuthenticationStatus_2_00bbdc3f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetSidFilteringStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_SetSidFilteringStatus_2_00bbdc3f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newTrustDirection">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
        <parameter name="newTrustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_UpdateLocalSideOfTrustRelationship_3_ae9cbcc6" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newTrustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_UpdateLocalSideOfTrustRelationship_2_52fce4af" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <topicdata group="api" />
      <apidata name="UpdateTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
        <parameter name="newTrustDirection">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_UpdateTrustRelationship_2_3f2a9716" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)">
      <topicdata group="api" />
      <apidata name="VerifyOutboundTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_VerifyOutboundTrustRelationship_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <topicdata group="api" />
      <apidata name="VerifyTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Domain_VerifyTrustRelationship_2_3f2a9716" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DomainCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.DomainCollection" />
      <apidata name="DomainCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_DomainCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.DomainCollection">
      <topicdata name="DomainCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DomainCollection" />
      <apidata name="DomainCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainCollection.Contains(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainCollection.CopyTo(System.DirectoryServices.ActiveDirectory.Domain[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainCollection.IndexOf(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_DomainCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.DomainCollection">
      <topicdata name="DomainCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DomainCollection" />
      <apidata name="DomainCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainCollection.Contains(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainCollection.CopyTo(System.DirectoryServices.ActiveDirectory.Domain[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainCollection.IndexOf(System.DirectoryServices.ActiveDirectory.Domain)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_DomainCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.DomainCollection">
      <topicdata name="DomainCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DomainCollection" />
      <apidata name="DomainCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_DomainCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainCollection.Contains(System.DirectoryServices.ActiveDirectory.Domain)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="domain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainCollection_Contains_1_4ecda35c" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainCollection.CopyTo(System.DirectoryServices.ActiveDirectory.Domain[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="domains">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainCollection_CopyTo_2_ff64f485" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainCollection.IndexOf(System.DirectoryServices.ActiveDirectory.Domain)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="domain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainCollection_IndexOf_1_4ecda35c" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DomainCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions">
      <topicdata group="api" />
      <apidata name="DomainCollisionOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.None" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.SidDisabledByAdmin" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.SidDisabledByConflict" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.NetBiosNameDisabledByAdmin" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.NetBiosNameDisabledByConflict" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_DomainCollisionOptions" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.NetBiosNameDisabledByAdmin">
      <topicdata group="api" notopic="" />
      <apidata name="NetBiosNameDisabledByAdmin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_DomainCollisionOptions_NetBiosNameDisabledByAdmin" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.NetBiosNameDisabledByConflict">
      <topicdata group="api" notopic="" />
      <apidata name="NetBiosNameDisabledByConflict" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_DomainCollisionOptions_NetBiosNameDisabledByConflict" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_DomainCollisionOptions_None" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.SidDisabledByAdmin">
      <topicdata group="api" notopic="" />
      <apidata name="SidDisabledByAdmin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_DomainCollisionOptions_SidDisabledByAdmin" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.SidDisabledByConflict">
      <topicdata group="api" notopic="" />
      <apidata name="SidDisabledByConflict" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_DomainCollisionOptions_SidDisabledByConflict" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DomainController">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.DomainController" />
      <apidata name="DomainController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_DomainController" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.DomainController">
      <topicdata name="DomainController" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      <apidata name="DomainController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DomainController.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindAll">
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindOne">
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_DomainController" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.DomainController">
      <topicdata name="DomainController" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      <apidata name="DomainController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DomainController.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindAll">
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindOne">
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_DomainController" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.DomainController">
      <topicdata name="DomainController" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      <apidata name="DomainController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_DomainController" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.DomainController.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.DomainController" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_DomainController_Dispose" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindAll">
      <topicdata name="FindAll" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.DomainController" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_DomainController_FindAll" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindOne">
      <topicdata name="FindOne" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.DomainController" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_DomainController_FindOne" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_DomainController_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency">
      <topicdata group="api" />
      <apidata name="CheckReplicationConsistency" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_CheckReplicationConsistency" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime">
      <topicdata group="api" />
      <apidata name="CurrentTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DomainController_CurrentTime" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.DomainController.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_Dispose_1_36d384f7" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain">
      <topicdata group="api" />
      <apidata name="Domain" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DomainController_Domain" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog">
      <topicdata group="api" />
      <apidata name="EnableGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_EnableGlobalCatalog" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_Finalize" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_FindAll_1_45a50114" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_FindAll_2_ba9335c4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindOne" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_FindOne_1_45a50114" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindOne" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_FindOne_2_abff1d6d" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindOne" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_FindOne_2_ba9335c4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindOne" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_FindOne_3_a3325282" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest">
      <topicdata group="api" />
      <apidata name="Forest" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DomainController_Forest" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors">
      <topicdata group="api" />
      <apidata name="GetAllReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_GetAllReplicationNeighbors" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher">
      <topicdata group="api" />
      <apidata name="GetDirectorySearcher" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_GetDirectorySearcher" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="GetDomainController" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_GetDomainController_1_45a50114" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures">
      <topicdata group="api" />
      <apidata name="GetReplicationConnectionFailures" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_GetReplicationConnectionFailures" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationCursors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_GetReplicationCursors_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="objectPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_GetReplicationMetadata_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_GetReplicationNeighbors_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation">
      <topicdata group="api" />
      <apidata name="GetReplicationOperationInformation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_GetReplicationOperationInformation" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn">
      <topicdata group="api" />
      <apidata name="HighestCommittedUsn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DomainController_HighestCommittedUsn" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections">
      <topicdata group="api" />
      <apidata name="InboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DomainController_InboundConnections" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress">
      <topicdata group="api" />
      <apidata name="IPAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DomainController_IPAddress" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog">
      <topicdata group="api" />
      <apidata name="IsGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_IsGlobalCatalog" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion">
      <topicdata group="api" />
      <apidata name="OSVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DomainController_OSVersion" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections">
      <topicdata group="api" />
      <apidata name="OutboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DomainController_OutboundConnections" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles">
      <topicdata group="api" />
      <apidata name="Roles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DomainController_Roles" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <topicdata group="api" />
      <apidata name="SeizeRoleOwnership" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_SeizeRoleOwnership_1_3a190799" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName">
      <topicdata group="api" />
      <apidata name="SiteName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DomainController_SiteName" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback">
      <topicdata group="api" />
      <apidata name="SyncFromAllServersCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DomainController_SyncFromAllServersCallback" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
      <topicdata group="api" />
      <apidata name="SyncReplicaFromAllServers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_SyncReplicaFromAllServers_2_2142bfc4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SyncReplicaFromServer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_SyncReplicaFromServer_2_52fce4af" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <topicdata group="api" />
      <apidata name="TransferRoleOwnership" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_TransferRoleOwnership_1_3a190799" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)">
      <topicdata group="api" />
      <apidata name="TriggerSyncReplicaFromNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainController_TriggerSyncReplicaFromNeighbors_1_72eac341" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      <apidata name="DomainControllerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_DomainControllerCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection">
      <topicdata name="DomainControllerCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      <apidata name="DomainControllerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Contains(System.DirectoryServices.ActiveDirectory.DomainController)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DomainController[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DomainController)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_DomainControllerCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection">
      <topicdata name="DomainControllerCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      <apidata name="DomainControllerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Contains(System.DirectoryServices.ActiveDirectory.DomainController)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DomainController[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DomainController)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_DomainControllerCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection">
      <topicdata name="DomainControllerCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      <apidata name="DomainControllerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_DomainControllerCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Contains(System.DirectoryServices.ActiveDirectory.DomainController)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="domainController">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainControllerCollection_Contains_1_cd1673cb" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DomainController[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="domainControllers">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainControllerCollection_CopyTo_2_9a8de124" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DomainController)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="domainController">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_DomainControllerCollection_IndexOf_1_cd1673cb" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_DomainControllerCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DomainMode">
      <topicdata group="api" />
      <apidata name="DomainMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000MixedDomain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2008Domain" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_DomainMode" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000MixedDomain">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2000MixedDomain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_DomainMode_Windows2000MixedDomain" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2000NativeDomain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_DomainMode_Windows2000NativeDomain" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2003Domain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_DomainMode_Windows2003Domain" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2003InterimDomain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_DomainMode_Windows2003InterimDomain" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2008Domain">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2008Domain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_DomainMode_Windows2008Domain" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.Forest">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.Forest" />
      <apidata name="Forest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_Forest" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.Forest">
      <topicdata name="Forest" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.Forest" />
      <apidata name="Forest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Domains" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.ForestMode" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.RootDomain" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Schema" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Sites" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_Forest" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.Forest">
      <topicdata name="Forest" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.Forest" />
      <apidata name="Forest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_Forest" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.Forest">
      <topicdata name="Forest" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.Forest" />
      <apidata name="Forest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Domains" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.ForestMode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.RootDomain" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Schema" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Sites" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_Forest" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Forest.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.Forest" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_Forest_Dispose" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs">
      <topicdata name="FindAllDiscoverableGlobalCatalogs" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.Forest" />
      <apidata name="FindAllDiscoverableGlobalCatalogs" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_Forest_FindAllDiscoverableGlobalCatalogs" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs">
      <topicdata name="FindAllGlobalCatalogs" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.Forest" />
      <apidata name="FindAllGlobalCatalogs" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_Forest_FindAllGlobalCatalogs" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog">
      <topicdata name="FindGlobalCatalog" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.Forest" />
      <apidata name="FindGlobalCatalog" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_Forest_FindGlobalCatalog" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship">
      <topicdata name="UpdateLocalSideOfTrustRelationship" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.Forest" />
      <apidata name="UpdateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_Forest_UpdateLocalSideOfTrustRelationship" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions">
      <topicdata group="api" />
      <apidata name="ApplicationPartitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Forest_ApplicationPartitions" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <topicdata group="api" />
      <apidata name="CreateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
        <parameter name="trustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_CreateLocalSideOfTrustRelationship_3_ae9cbcc6" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <topicdata group="api" />
      <apidata name="CreateTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForest">
          <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_CreateTrustRelationship_2_3a11183c" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)">
      <topicdata group="api" />
      <apidata name="DeleteLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_DeleteLocalSideOfTrustRelationship_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)">
      <topicdata group="api" />
      <apidata name="DeleteTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForest">
          <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_DeleteTrustRelationship_1_38dabc53" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.Dispose" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_Dispose_1_36d384f7" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.Domains">
      <topicdata group="api" />
      <apidata name="Domains" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Forest_Domains" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs">
      <topicdata group="api" />
      <apidata name="FindAllDiscoverableGlobalCatalogs" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_FindAllDiscoverableGlobalCatalogs" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)">
      <topicdata group="api" />
      <apidata name="FindAllDiscoverableGlobalCatalogs" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_FindAllDiscoverableGlobalCatalogs_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs">
      <topicdata group="api" />
      <apidata name="FindAllGlobalCatalogs" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_FindAllGlobalCatalogs" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)">
      <topicdata group="api" />
      <apidata name="FindAllGlobalCatalogs" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_FindAllGlobalCatalogs_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog">
      <topicdata group="api" />
      <apidata name="FindGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_FindGlobalCatalog" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <topicdata group="api" />
      <apidata name="FindGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_FindGlobalCatalog_1_11712582" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)">
      <topicdata group="api" />
      <apidata name="FindGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_FindGlobalCatalog_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <topicdata group="api" />
      <apidata name="FindGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_FindGlobalCatalog_2_ed09b1c9" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.ForestMode">
      <topicdata group="api" />
      <apidata name="ForestMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Forest_ForestMode" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships">
      <topicdata group="api" />
      <apidata name="GetAllTrustRelationships" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_GetAllTrustRelationships" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest">
      <topicdata group="api" />
      <apidata name="GetCurrentForest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_GetCurrentForest" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="GetForest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_GetForest_1_45a50114" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)">
      <topicdata group="api" />
      <apidata name="GetSelectiveAuthenticationStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_GetSelectiveAuthenticationStatus_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)">
      <topicdata group="api" />
      <apidata name="GetSidFilteringStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_GetSidFilteringStatus_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)">
      <topicdata group="api" />
      <apidata name="GetTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_GetTrustRelationship_1_72eac341" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs">
      <topicdata group="api" />
      <apidata name="GlobalCatalogs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Forest_GlobalCatalogs" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Forest_Name" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner">
      <topicdata group="api" />
      <apidata name="NamingRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Forest_NamingRoleOwner" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)">
      <topicdata group="api" />
      <apidata name="RaiseForestFunctionality" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="forestMode">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_RaiseForestFunctionality_1_a14dcd3c" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)">
      <topicdata group="api" />
      <apidata name="RepairTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForest">
          <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_RepairTrustRelationship_1_38dabc53" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.RootDomain">
      <topicdata group="api" />
      <apidata name="RootDomain" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Forest_RootDomain" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Forest_Schema" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner">
      <topicdata group="api" />
      <apidata name="SchemaRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Forest_SchemaRoleOwner" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetSelectiveAuthenticationStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_SetSelectiveAuthenticationStatus_2_00bbdc3f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetSidFilteringStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_SetSidFilteringStatus_2_00bbdc3f" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.Sites">
      <topicdata group="api" />
      <apidata name="Sites" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_Forest_Sites" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_ToString" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newTrustDirection">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
        <parameter name="newTrustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_UpdateLocalSideOfTrustRelationship_3_ae9cbcc6" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newTrustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_UpdateLocalSideOfTrustRelationship_2_52fce4af" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <topicdata group="api" />
      <apidata name="UpdateTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForest">
          <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
        </parameter>
        <parameter name="newTrustDirection">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_UpdateTrustRelationship_2_3a11183c" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)">
      <topicdata group="api" />
      <apidata name="VerifyOutboundTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_VerifyOutboundTrustRelationship_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <topicdata group="api" />
      <apidata name="VerifyTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForest">
          <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_Forest_VerifyTrustRelationship_2_3a11183c" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestMode">
      <topicdata group="api" />
      <apidata name="ForestMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2000Forest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2008Forest" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ForestMode" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2000Forest">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2000Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ForestMode_Windows2000Forest" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2003Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ForestMode_Windows2003Forest" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2003InterimForest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ForestMode_Windows2003InterimForest" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2008Forest">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2008Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ForestMode_Windows2008Forest" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" />
      <apidata name="ForestTrustCollisionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ForestTrustCollisionException" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException">
      <topicdata name="ForestTrustCollisionException" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" />
      <apidata name="ForestTrustCollisionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.Collisions" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ForestTrustCollisionException" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException">
      <topicdata name="ForestTrustCollisionException" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" />
      <apidata name="ForestTrustCollisionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ForestTrustCollisionException" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException">
      <topicdata name="ForestTrustCollisionException" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" />
      <apidata name="ForestTrustCollisionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.Collisions" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ForestTrustCollisionException" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ForestTrustCollisionException_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ForestTrustCollisionException_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ForestTrustCollisionException_ctor_2_4075724f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ForestTrustCollisionException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ForestTrustCollisionException_ctor_2_3ec47892" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="collisions">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ForestTrustCollisionException_ctor_3_748c5656" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.Collisions">
      <topicdata group="api" />
      <apidata name="Collisions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ForestTrustCollisionException_Collisions" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_ForestTrustCollisionException_GetObjectData_2_af75a6ab" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType">
      <topicdata group="api" />
      <apidata name="ForestTrustCollisionType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.TopLevelName" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Domain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Other" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ForestTrustCollisionType" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Domain">
      <topicdata group="api" notopic="" />
      <apidata name="Domain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ForestTrustCollisionType_Domain" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Other">
      <topicdata group="api" notopic="" />
      <apidata name="Other" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ForestTrustCollisionType_Other" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.TopLevelName">
      <topicdata group="api" notopic="" />
      <apidata name="TopLevelName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ForestTrustCollisionType_TopLevelName" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" />
      <apidata name="ForestTrustDomainInfoCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ForestTrustDomainInfoCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection">
      <topicdata name="ForestTrustDomainInfoCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" />
      <apidata name="ForestTrustDomainInfoCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ForestTrustDomainInfoCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection">
      <topicdata name="ForestTrustDomainInfoCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" />
      <apidata name="ForestTrustDomainInfoCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ForestTrustDomainInfoCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection">
      <topicdata name="ForestTrustDomainInfoCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" />
      <apidata name="ForestTrustDomainInfoCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ForestTrustDomainInfoCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="information">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ForestTrustDomainInfoCollection_Contains_1_902707dd" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ForestTrustDomainInfoCollection_CopyTo_2_5e00b74d" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="information">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ForestTrustDomainInfoCollection_IndexOf_1_902707dd" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ForestTrustDomainInfoCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" />
      <apidata name="ForestTrustDomainInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ForestTrustDomainInformation" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation">
      <topicdata name="ForestTrustDomainInformation" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" />
      <apidata name="ForestTrustDomainInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DnsName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DomainSid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.NetBiosName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.Status" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ForestTrustDomainInformation" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation">
      <topicdata name="ForestTrustDomainInformation" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" />
      <apidata name="ForestTrustDomainInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DnsName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DomainSid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.NetBiosName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.Status" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ForestTrustDomainInformation" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DnsName">
      <topicdata group="api" />
      <apidata name="DnsName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ForestTrustDomainInformation_DnsName" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DomainSid">
      <topicdata group="api" />
      <apidata name="DomainSid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ForestTrustDomainInformation_DomainSid" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.NetBiosName">
      <topicdata group="api" />
      <apidata name="NetBiosName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ForestTrustDomainInformation_NetBiosName" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.Status">
      <topicdata group="api" />
      <apidata name="Status" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ForestTrustDomainInformation_Status" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus">
      <topicdata group="api" />
      <apidata name="ForestTrustDomainStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.Enabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidAdminDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidConflictDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameAdminDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameConflictDisabled" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ForestTrustDomainStatus" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.Enabled">
      <topicdata group="api" notopic="" />
      <apidata name="Enabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ForestTrustDomainStatus_Enabled" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameAdminDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="NetBiosNameAdminDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ForestTrustDomainStatus_NetBiosNameAdminDisabled" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameConflictDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="NetBiosNameConflictDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ForestTrustDomainStatus_NetBiosNameConflictDisabled" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidAdminDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="SidAdminDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ForestTrustDomainStatus_SidAdminDisabled" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidConflictDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="SidConflictDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ForestTrustDomainStatus_SidConflictDisabled" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" />
      <apidata name="ForestTrustRelationshipCollision" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipCollision" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision">
      <topicdata name="ForestTrustRelationshipCollision" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" />
      <apidata name="ForestTrustRelationshipCollision" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionRecord" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.DomainCollisionOption" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.TopLevelNameCollisionOption" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipCollision" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision">
      <topicdata name="ForestTrustRelationshipCollision" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" />
      <apidata name="ForestTrustRelationshipCollision" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionRecord" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.DomainCollisionOption" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.TopLevelNameCollisionOption" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipCollision" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionRecord">
      <topicdata group="api" />
      <apidata name="CollisionRecord" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipCollision_CollisionRecord" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType">
      <topicdata group="api" />
      <apidata name="CollisionType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipCollision_CollisionType" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.DomainCollisionOption">
      <topicdata group="api" />
      <apidata name="DomainCollisionOption" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipCollision_DomainCollisionOption" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.TopLevelNameCollisionOption">
      <topicdata group="api" />
      <apidata name="TopLevelNameCollisionOption" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipCollision_TopLevelNameCollisionOption" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" />
      <apidata name="ForestTrustRelationshipCollisionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipCollisionCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection">
      <topicdata name="ForestTrustRelationshipCollisionCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" />
      <apidata name="ForestTrustRelationshipCollisionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipCollisionCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection">
      <topicdata name="ForestTrustRelationshipCollisionCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" />
      <apidata name="ForestTrustRelationshipCollisionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipCollisionCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection">
      <topicdata name="ForestTrustRelationshipCollisionCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" />
      <apidata name="ForestTrustRelationshipCollisionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipCollisionCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collision">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipCollisionCollection_Contains_1_c587dde4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipCollisionCollection_CopyTo_2_157882d2" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collision">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipCollisionCollection_IndexOf_1_c587dde4" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipCollisionCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" />
      <apidata name="ForestTrustRelationshipInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipInformation" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation">
      <topicdata name="ForestTrustRelationshipInformation" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" />
      <apidata name="ForestTrustRelationshipInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.ExcludedTopLevelNames" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.Save" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TopLevelNames" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TrustedDomainInformation" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.SourceName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TargetName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustDirection" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipInformation" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation">
      <topicdata name="ForestTrustRelationshipInformation" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" />
      <apidata name="ForestTrustRelationshipInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.Save" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipInformation" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation">
      <topicdata name="ForestTrustRelationshipInformation" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" />
      <apidata name="ForestTrustRelationshipInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.ExcludedTopLevelNames" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TopLevelNames" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TrustedDomainInformation" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.SourceName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TargetName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustDirection" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipInformation" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.ExcludedTopLevelNames">
      <topicdata group="api" />
      <apidata name="ExcludedTopLevelNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipInformation_ExcludedTopLevelNames" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipInformation_Save" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TopLevelNames">
      <topicdata group="api" />
      <apidata name="TopLevelNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipInformation_TopLevelNames" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TrustedDomainInformation">
      <topicdata group="api" />
      <apidata name="TrustedDomainInformation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ForestTrustRelationshipInformation_TrustedDomainInformation" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      <apidata name="GlobalCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_GlobalCatalog" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.GlobalCatalog">
      <topicdata name="GlobalCatalog" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      <apidata name="GlobalCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.EnableGlobalCatalog" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll">
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAllProperties" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne">
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetDirectorySearcher" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetGlobalCatalog(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.IsGlobalCatalog" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_GlobalCatalog" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.GlobalCatalog">
      <topicdata name="GlobalCatalog" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      <apidata name="GlobalCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.EnableGlobalCatalog" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll">
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAllProperties" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne">
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetDirectorySearcher" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetGlobalCatalog(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.IsGlobalCatalog" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_GlobalCatalog" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_GlobalCatalog_Dispose" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll">
      <topicdata name="FindAll" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_GlobalCatalog_FindAll" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne">
      <topicdata name="FindOne" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_GlobalCatalog_FindOne" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog">
      <topicdata group="api" />
      <apidata name="DisableGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_GlobalCatalog_DisableGlobalCatalog" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.EnableGlobalCatalog">
      <topicdata group="api" />
      <apidata name="EnableGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_GlobalCatalog_EnableGlobalCatalog" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_GlobalCatalog_FindAll_1_45a50114" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_GlobalCatalog_FindAll_2_ba9335c4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAllProperties">
      <topicdata group="api" />
      <apidata name="FindAllProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_GlobalCatalog_FindAllProperties" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_GlobalCatalog_FindOne_1_45a50114" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_GlobalCatalog_FindOne_2_abff1d6d" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_GlobalCatalog_FindOne_2_ba9335c4" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_GlobalCatalog_FindOne_3_a3325282" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetDirectorySearcher">
      <topicdata group="api" />
      <apidata name="GetDirectorySearcher" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_GlobalCatalog_GetDirectorySearcher" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetGlobalCatalog(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="GetGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_GlobalCatalog_GetGlobalCatalog_1_45a50114" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.IsGlobalCatalog">
      <topicdata group="api" />
      <apidata name="IsGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_GlobalCatalog_IsGlobalCatalog" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      <apidata name="GlobalCatalogCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_GlobalCatalogCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection">
      <topicdata name="GlobalCatalogCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      <apidata name="GlobalCatalogCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Contains(System.DirectoryServices.ActiveDirectory.GlobalCatalog)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.CopyTo(System.DirectoryServices.ActiveDirectory.GlobalCatalog[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.IndexOf(System.DirectoryServices.ActiveDirectory.GlobalCatalog)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_GlobalCatalogCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection">
      <topicdata name="GlobalCatalogCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      <apidata name="GlobalCatalogCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Contains(System.DirectoryServices.ActiveDirectory.GlobalCatalog)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.CopyTo(System.DirectoryServices.ActiveDirectory.GlobalCatalog[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.IndexOf(System.DirectoryServices.ActiveDirectory.GlobalCatalog)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_GlobalCatalogCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection">
      <topicdata name="GlobalCatalogCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      <apidata name="GlobalCatalogCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_GlobalCatalogCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Contains(System.DirectoryServices.ActiveDirectory.GlobalCatalog)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="globalCatalog">
          <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_GlobalCatalogCollection_Contains_1_0b28f9eb" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.CopyTo(System.DirectoryServices.ActiveDirectory.GlobalCatalog[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="globalCatalogs">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_GlobalCatalogCollection_CopyTo_2_29597125" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.IndexOf(System.DirectoryServices.ActiveDirectory.GlobalCatalog)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="globalCatalog">
          <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_GlobalCatalogCollection_IndexOf_1_0b28f9eb" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_GlobalCatalogCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.HourOfDay">
      <topicdata group="api" />
      <apidata name="HourOfDay" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Zero" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.One" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Two" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Three" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Four" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Five" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Six" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seven" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eight" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nine" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Ten" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eleven" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twelve" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Thirteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fourteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fifteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Sixteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seventeen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eighteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nineteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twenty" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyOne" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyTwo" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyThree" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_HourOfDay" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eight">
      <topicdata group="api" notopic="" />
      <apidata name="Eight" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Eight" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eighteen">
      <topicdata group="api" notopic="" />
      <apidata name="Eighteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Eighteen" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eleven">
      <topicdata group="api" notopic="" />
      <apidata name="Eleven" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Eleven" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fifteen">
      <topicdata group="api" notopic="" />
      <apidata name="Fifteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Fifteen" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Five">
      <topicdata group="api" notopic="" />
      <apidata name="Five" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Five" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Four">
      <topicdata group="api" notopic="" />
      <apidata name="Four" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Four" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fourteen">
      <topicdata group="api" notopic="" />
      <apidata name="Fourteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Fourteen" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nine">
      <topicdata group="api" notopic="" />
      <apidata name="Nine" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Nine" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nineteen">
      <topicdata group="api" notopic="" />
      <apidata name="Nineteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>19</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Nineteen" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.One">
      <topicdata group="api" notopic="" />
      <apidata name="One" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_One" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seven">
      <topicdata group="api" notopic="" />
      <apidata name="Seven" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Seven" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seventeen">
      <topicdata group="api" notopic="" />
      <apidata name="Seventeen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Seventeen" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Six">
      <topicdata group="api" notopic="" />
      <apidata name="Six" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Six" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Sixteen">
      <topicdata group="api" notopic="" />
      <apidata name="Sixteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Sixteen" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Ten">
      <topicdata group="api" notopic="" />
      <apidata name="Ten" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Ten" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Thirteen">
      <topicdata group="api" notopic="" />
      <apidata name="Thirteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Thirteen" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Three">
      <topicdata group="api" notopic="" />
      <apidata name="Three" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Three" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twelve">
      <topicdata group="api" notopic="" />
      <apidata name="Twelve" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Twelve" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twenty">
      <topicdata group="api" notopic="" />
      <apidata name="Twenty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Twenty" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyOne">
      <topicdata group="api" notopic="" />
      <apidata name="TwentyOne" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>21</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_TwentyOne" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyThree">
      <topicdata group="api" notopic="" />
      <apidata name="TwentyThree" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>23</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_TwentyThree" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyTwo">
      <topicdata group="api" notopic="" />
      <apidata name="TwentyTwo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>22</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_TwentyTwo" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Two">
      <topicdata group="api" notopic="" />
      <apidata name="Two" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Two" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Zero">
      <topicdata group="api" notopic="" />
      <apidata name="Zero" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_HourOfDay_Zero" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.LocatorOptions">
      <topicdata group="api" />
      <apidata name="LocatorOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int64" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.ForceRediscovery" />
        <element api="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.KdcRequired" />
        <element api="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.TimeServerRequired" />
        <element api="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.WriteableRequired" />
        <element api="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.AvoidSelf" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_LocatorOptions" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.AvoidSelf">
      <topicdata group="api" notopic="" />
      <apidata name="AvoidSelf" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </returns>
      <value>16384</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_LocatorOptions_AvoidSelf" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.ForceRediscovery">
      <topicdata group="api" notopic="" />
      <apidata name="ForceRediscovery" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_LocatorOptions_ForceRediscovery" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.KdcRequired">
      <topicdata group="api" notopic="" />
      <apidata name="KdcRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </returns>
      <value>1024</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_LocatorOptions_KdcRequired" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.TimeServerRequired">
      <topicdata group="api" notopic="" />
      <apidata name="TimeServerRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </returns>
      <value>2048</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_LocatorOptions_TimeServerRequired" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.WriteableRequired">
      <topicdata group="api" notopic="" />
      <apidata name="WriteableRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </returns>
      <value>4096</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_LocatorOptions_WriteableRequired" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour">
      <topicdata group="api" />
      <apidata name="MinuteOfHour" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Zero" />
        <element api="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Fifteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Thirty" />
        <element api="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.FortyFive" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_MinuteOfHour" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Fifteen">
      <topicdata group="api" notopic="" />
      <apidata name="Fifteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_MinuteOfHour_Fifteen" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.FortyFive">
      <topicdata group="api" notopic="" />
      <apidata name="FortyFive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </returns>
      <value>45</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_MinuteOfHour_FortyFive" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Thirty">
      <topicdata group="api" notopic="" />
      <apidata name="Thirty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </returns>
      <value>30</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_MinuteOfHour_Thirty" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Zero">
      <topicdata group="api" notopic="" />
      <apidata name="Zero" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_MinuteOfHour_Zero" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.NotificationStatus">
      <topicdata group="api" />
      <apidata name="NotificationStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NoNotification" />
        <element api="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.IntraSiteOnly" />
        <element api="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NotificationAlways" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_NotificationStatus" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.IntraSiteOnly">
      <topicdata group="api" notopic="" />
      <apidata name="IntraSiteOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_NotificationStatus_IntraSiteOnly" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NoNotification">
      <topicdata group="api" notopic="" />
      <apidata name="NoNotification" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_NotificationStatus_NoNotification" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NotificationAlways">
      <topicdata group="api" notopic="" />
      <apidata name="NotificationAlways" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_NotificationStatus_NotificationAlways" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.PropertyTypes">
      <topicdata group="api" />
      <apidata name="PropertyTypes" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.Indexed" />
        <element api="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.InGlobalCatalog" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_PropertyTypes" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.Indexed">
      <topicdata group="api" notopic="" />
      <apidata name="Indexed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_PropertyTypes_Indexed" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.InGlobalCatalog">
      <topicdata group="api" notopic="" />
      <apidata name="InGlobalCatalog" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_PropertyTypes_InGlobalCatalog" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" />
      <apidata name="ReadOnlyActiveDirectorySchemaClassCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReadOnlyActiveDirectorySchemaClassCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection">
      <topicdata name="ReadOnlyActiveDirectorySchemaClassCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" />
      <apidata name="ReadOnlyActiveDirectorySchemaClassCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReadOnlyActiveDirectorySchemaClassCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection">
      <topicdata name="ReadOnlyActiveDirectorySchemaClassCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" />
      <apidata name="ReadOnlyActiveDirectorySchemaClassCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ReadOnlyActiveDirectorySchemaClassCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection">
      <topicdata name="ReadOnlyActiveDirectorySchemaClassCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" />
      <apidata name="ReadOnlyActiveDirectorySchemaClassCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReadOnlyActiveDirectorySchemaClassCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlyActiveDirectorySchemaClassCollection_Contains_1_8d30c341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="classes">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlyActiveDirectorySchemaClassCollection_CopyTo_2_be5740c9" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlyActiveDirectorySchemaClassCollection_IndexOf_1_8d30c341" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReadOnlyActiveDirectorySchemaClassCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" />
      <apidata name="ReadOnlyActiveDirectorySchemaPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReadOnlyActiveDirectorySchemaPropertyCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection">
      <topicdata name="ReadOnlyActiveDirectorySchemaPropertyCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" />
      <apidata name="ReadOnlyActiveDirectorySchemaPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReadOnlyActiveDirectorySchemaPropertyCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection">
      <topicdata name="ReadOnlyActiveDirectorySchemaPropertyCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" />
      <apidata name="ReadOnlyActiveDirectorySchemaPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ReadOnlyActiveDirectorySchemaPropertyCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection">
      <topicdata name="ReadOnlyActiveDirectorySchemaPropertyCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" />
      <apidata name="ReadOnlyActiveDirectorySchemaPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReadOnlyActiveDirectorySchemaPropertyCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlyActiveDirectorySchemaPropertyCollection_Contains_1_fc65730b" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="properties">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlyActiveDirectorySchemaPropertyCollection_CopyTo_2_c41b47f8" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlyActiveDirectorySchemaPropertyCollection_IndexOf_1_fc65730b" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReadOnlyActiveDirectorySchemaPropertyCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" />
      <apidata name="ReadOnlyDirectoryServerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReadOnlyDirectoryServerCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection">
      <topicdata name="ReadOnlyDirectoryServerCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" />
      <apidata name="ReadOnlyDirectoryServerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReadOnlyDirectoryServerCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection">
      <topicdata name="ReadOnlyDirectoryServerCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" />
      <apidata name="ReadOnlyDirectoryServerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ReadOnlyDirectoryServerCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection">
      <topicdata name="ReadOnlyDirectoryServerCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" />
      <apidata name="ReadOnlyDirectoryServerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReadOnlyDirectoryServerCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directoryServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlyDirectoryServerCollection_Contains_1_e0c1d2e2" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directoryServers">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlyDirectoryServerCollection_CopyTo_2_6f20bb66" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directoryServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlyDirectoryServerCollection_IndexOf_1_e0c1d2e2" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReadOnlyDirectoryServerCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" />
      <apidata name="ReadOnlySiteCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReadOnlySiteCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection">
      <topicdata name="ReadOnlySiteCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" />
      <apidata name="ReadOnlySiteCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReadOnlySiteCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection">
      <topicdata name="ReadOnlySiteCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" />
      <apidata name="ReadOnlySiteCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ReadOnlySiteCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection">
      <topicdata name="ReadOnlySiteCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" />
      <apidata name="ReadOnlySiteCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReadOnlySiteCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlySiteCollection_Contains_1_e2ef1e63" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sites">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlySiteCollection_CopyTo_2_7cd86c5f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlySiteCollection_IndexOf_1_e2ef1e63" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReadOnlySiteCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" />
      <apidata name="ReadOnlySiteLinkBridgeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReadOnlySiteLinkBridgeCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection">
      <topicdata name="ReadOnlySiteLinkBridgeCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" />
      <apidata name="ReadOnlySiteLinkBridgeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReadOnlySiteLinkBridgeCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection">
      <topicdata name="ReadOnlySiteLinkBridgeCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" />
      <apidata name="ReadOnlySiteLinkBridgeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ReadOnlySiteLinkBridgeCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection">
      <topicdata name="ReadOnlySiteLinkBridgeCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" />
      <apidata name="ReadOnlySiteLinkBridgeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReadOnlySiteLinkBridgeCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bridge">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlySiteLinkBridgeCollection_Contains_1_11791177" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bridges">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlySiteLinkBridgeCollection_CopyTo_2_3653962a" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bridge">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlySiteLinkBridgeCollection_IndexOf_1_11791177" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReadOnlySiteLinkBridgeCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" />
      <apidata name="ReadOnlySiteLinkCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReadOnlySiteLinkCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection">
      <topicdata name="ReadOnlySiteLinkCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" />
      <apidata name="ReadOnlySiteLinkCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReadOnlySiteLinkCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection">
      <topicdata name="ReadOnlySiteLinkCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" />
      <apidata name="ReadOnlySiteLinkCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ReadOnlySiteLinkCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection">
      <topicdata name="ReadOnlySiteLinkCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" />
      <apidata name="ReadOnlySiteLinkCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReadOnlySiteLinkCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlySiteLinkCollection_Contains_1_6ca7bbfa" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="links">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlySiteLinkCollection_CopyTo_2_04ba145c" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlySiteLinkCollection_IndexOf_1_6ca7bbfa" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReadOnlySiteLinkCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" />
      <apidata name="ReadOnlyStringCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReadOnlyStringCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection">
      <topicdata name="ReadOnlyStringCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" />
      <apidata name="ReadOnlyStringCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.CopyTo(System.String[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.IndexOf(System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReadOnlyStringCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection">
      <topicdata name="ReadOnlyStringCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" />
      <apidata name="ReadOnlyStringCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.CopyTo(System.String[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.IndexOf(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ReadOnlyStringCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection">
      <topicdata name="ReadOnlyStringCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" />
      <apidata name="ReadOnlyStringCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReadOnlyStringCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlyStringCollection_Contains_1_72eac341" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.CopyTo(System.String[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlyStringCollection_CopyTo_2_0fd10382" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReadOnlyStringCollection_IndexOf_1_72eac341" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReadOnlyStringCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" />
      <apidata name="ReplicationConnection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReplicationConnection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationConnection">
      <topicdata name="ReplicationConnection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" />
      <apidata name="ReplicationConnection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ChangeNotificationStatus" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DataCompressionEnabled" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Delete" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DestinationServer" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Enabled" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GeneratedByKcc" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GetDirectoryEntry" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReciprocalReplicationEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationScheduleOwnedByUser" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSpan" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Save" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.SourceServer" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.TransportType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReplicationConnection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationConnection">
      <topicdata name="ReplicationConnection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" />
      <apidata name="ReplicationConnection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ReplicationConnection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationConnection">
      <topicdata name="ReplicationConnection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" />
      <apidata name="ReplicationConnection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ChangeNotificationStatus" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DataCompressionEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DestinationServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Enabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GeneratedByKcc" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReciprocalReplicationEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationScheduleOwnedByUser" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSpan" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.TransportType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReplicationConnection" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ReplicationConnection_ctor" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_ReplicationConnection_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ReplicationConnection_ctor_3_02279551" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
        <parameter name="schedule">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ReplicationConnection_ctor_4_226c10d6" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
        <parameter name="schedule">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ReplicationConnection_ctor_5_f28e63a7" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ReplicationConnection_ctor_4_bd96800d" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ChangeNotificationStatus">
      <topicdata group="api" />
      <apidata name="ChangeNotificationStatus" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationConnection_ChangeNotificationStatus" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DataCompressionEnabled">
      <topicdata group="api" />
      <apidata name="DataCompressionEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationConnection_DataCompressionEnabled" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationConnection_Delete" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DestinationServer">
      <topicdata group="api" />
      <apidata name="DestinationServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationConnection_DestinationServer" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationConnection_Dispose" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationConnection_Dispose_1_36d384f7" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationConnection_Enabled" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationConnection_Finalize" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationConnection_FindByName_2_ba9335c4" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GeneratedByKcc">
      <topicdata group="api" />
      <apidata name="GeneratedByKcc" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationConnection_GeneratedByKcc" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationConnection_GetDirectoryEntry" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationConnection_Name" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReciprocalReplicationEnabled">
      <topicdata group="api" />
      <apidata name="ReciprocalReplicationEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationConnection_ReciprocalReplicationEnabled" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSchedule">
      <topicdata group="api" />
      <apidata name="ReplicationSchedule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationConnection_ReplicationSchedule" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationScheduleOwnedByUser">
      <topicdata group="api" />
      <apidata name="ReplicationScheduleOwnedByUser" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationConnection_ReplicationScheduleOwnedByUser" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSpan">
      <topicdata group="api" />
      <apidata name="ReplicationSpan" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationConnection_ReplicationSpan" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationConnection_Save" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.SourceServer">
      <topicdata group="api" />
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationConnection_SourceServer" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationConnection_ToString" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.TransportType">
      <topicdata group="api" />
      <apidata name="TransportType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationConnection_TransportType" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" />
      <apidata name="ReplicationConnectionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReplicationConnectionCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection">
      <topicdata name="ReplicationConnectionCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" />
      <apidata name="ReplicationConnectionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationConnection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationConnection[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationConnection)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReplicationConnectionCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection">
      <topicdata name="ReplicationConnectionCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" />
      <apidata name="ReplicationConnectionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationConnection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationConnection[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationConnection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ReplicationConnectionCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection">
      <topicdata name="ReplicationConnectionCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" />
      <apidata name="ReplicationConnectionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReplicationConnectionCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationConnection)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationConnectionCollection_Contains_1_6def598a" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationConnection[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connections">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationConnectionCollection_CopyTo_2_75cf0064" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationConnection)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationConnectionCollection_IndexOf_1_6def598a" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationConnectionCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" />
      <apidata name="ReplicationCursor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReplicationCursor" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationCursor">
      <topicdata name="ReplicationCursor" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" />
      <apidata name="ReplicationCursor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.LastSuccessfulSyncTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.PartitionName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceInvocationId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.UpToDatenessUsn" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReplicationCursor" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationCursor">
      <topicdata name="ReplicationCursor" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" />
      <apidata name="ReplicationCursor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.LastSuccessfulSyncTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.PartitionName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceInvocationId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.UpToDatenessUsn" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReplicationCursor" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.LastSuccessfulSyncTime">
      <topicdata group="api" />
      <apidata name="LastSuccessfulSyncTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationCursor_LastSuccessfulSyncTime" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.PartitionName">
      <topicdata group="api" />
      <apidata name="PartitionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationCursor_PartitionName" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceInvocationId">
      <topicdata group="api" />
      <apidata name="SourceInvocationId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationCursor_SourceInvocationId" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceServer">
      <topicdata group="api" />
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationCursor_SourceServer" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.UpToDatenessUsn">
      <topicdata group="api" />
      <apidata name="UpToDatenessUsn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationCursor_UpToDatenessUsn" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" />
      <apidata name="ReplicationCursorCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReplicationCursorCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection">
      <topicdata name="ReplicationCursorCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" />
      <apidata name="ReplicationCursorCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationCursor)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationCursor[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationCursor)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReplicationCursorCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection">
      <topicdata name="ReplicationCursorCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" />
      <apidata name="ReplicationCursorCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationCursor)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationCursor[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationCursor)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ReplicationCursorCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection">
      <topicdata name="ReplicationCursorCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" />
      <apidata name="ReplicationCursorCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReplicationCursorCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationCursor)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cursor">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationCursorCollection_Contains_1_cef1456f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationCursor[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationCursorCollection_CopyTo_2_3442857e" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationCursor)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cursor">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationCursorCollection_IndexOf_1_cef1456f" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationCursorCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" />
      <apidata name="ReplicationFailure" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReplicationFailure" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationFailure">
      <topicdata name="ReplicationFailure" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" />
      <apidata name="ReplicationFailure" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.ConsecutiveFailureCount" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.FirstFailureTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorMessage" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.SourceServer" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReplicationFailure" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationFailure">
      <topicdata name="ReplicationFailure" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" />
      <apidata name="ReplicationFailure" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.ConsecutiveFailureCount" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.FirstFailureTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorMessage" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.SourceServer" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReplicationFailure" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.ConsecutiveFailureCount">
      <topicdata group="api" />
      <apidata name="ConsecutiveFailureCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationFailure_ConsecutiveFailureCount" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.FirstFailureTime">
      <topicdata group="api" />
      <apidata name="FirstFailureTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationFailure_FirstFailureTime" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorCode">
      <topicdata group="api" />
      <apidata name="LastErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationFailure_LastErrorCode" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorMessage">
      <topicdata group="api" />
      <apidata name="LastErrorMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationFailure_LastErrorMessage" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.SourceServer">
      <topicdata group="api" />
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationFailure_SourceServer" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" />
      <apidata name="ReplicationFailureCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReplicationFailureCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection">
      <topicdata name="ReplicationFailureCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" />
      <apidata name="ReplicationFailureCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationFailure)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationFailure[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationFailure)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReplicationFailureCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection">
      <topicdata name="ReplicationFailureCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" />
      <apidata name="ReplicationFailureCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationFailure)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationFailure[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationFailure)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ReplicationFailureCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection">
      <topicdata name="ReplicationFailureCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" />
      <apidata name="ReplicationFailureCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReplicationFailureCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationFailure)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="failure">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationFailureCollection_Contains_1_fd1a6879" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationFailure[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="failures">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationFailureCollection_CopyTo_2_40c04d4d" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationFailure)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="failure">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationFailureCollection_IndexOf_1_fd1a6879" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationFailureCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" />
      <apidata name="ReplicationNeighbor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor">
      <topicdata name="ReplicationNeighbor" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" />
      <apidata name="ReplicationNeighbor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ConsecutiveFailureCount" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastAttemptedSync" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSuccessfulSync" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncMessage" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncResult" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.PartitionName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOption" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceInvocationId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.TransportType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnAttributeFilter" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnLastObjectChangeSynced" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor">
      <topicdata name="ReplicationNeighbor" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" />
      <apidata name="ReplicationNeighbor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ConsecutiveFailureCount" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastAttemptedSync" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSuccessfulSync" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncMessage" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncResult" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.PartitionName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOption" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceInvocationId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.TransportType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnAttributeFilter" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnLastObjectChangeSynced" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ConsecutiveFailureCount">
      <topicdata group="api" />
      <apidata name="ConsecutiveFailureCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ConsecutiveFailureCount" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastAttemptedSync">
      <topicdata group="api" />
      <apidata name="LastAttemptedSync" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_LastAttemptedSync" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSuccessfulSync">
      <topicdata group="api" />
      <apidata name="LastSuccessfulSync" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_LastSuccessfulSync" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncMessage">
      <topicdata group="api" />
      <apidata name="LastSyncMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_LastSyncMessage" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncResult">
      <topicdata group="api" />
      <apidata name="LastSyncResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_LastSyncResult" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.PartitionName">
      <topicdata group="api" />
      <apidata name="PartitionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_PartitionName" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOption">
      <topicdata group="api" />
      <apidata name="ReplicationNeighborOption" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOption" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceInvocationId">
      <topicdata group="api" />
      <apidata name="SourceInvocationId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_SourceInvocationId" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceServer">
      <topicdata group="api" />
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_SourceServer" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.TransportType">
      <topicdata group="api" />
      <apidata name="TransportType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_TransportType" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnAttributeFilter">
      <topicdata group="api" />
      <apidata name="UsnAttributeFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_UsnAttributeFilter" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnLastObjectChangeSynced">
      <topicdata group="api" />
      <apidata name="UsnLastObjectChangeSynced" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_UsnLastObjectChangeSynced" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions">
      <topicdata group="api" />
      <apidata name="ReplicationNeighborOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Int64" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Writeable" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.SyncOnStartup" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ScheduledSync" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.UseInterSiteTransport" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.TwoWaySync" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ReturnObjectParent" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncInProgress" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncNextPacket" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NeverSynced" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Preempted" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.IgnoreChangeNotifications" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.DisableScheduledSync" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.CompressChanges" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NoChangeNotifications" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.PartialAttributeSet" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOptions" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.CompressChanges">
      <topicdata group="api" notopic="" />
      <apidata name="CompressChanges" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>268435456</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOptions_CompressChanges" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.DisableScheduledSync">
      <topicdata group="api" notopic="" />
      <apidata name="DisableScheduledSync" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>134217728</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOptions_DisableScheduledSync" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncInProgress">
      <topicdata group="api" notopic="" />
      <apidata name="FullSyncInProgress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>65536</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOptions_FullSyncInProgress" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncNextPacket">
      <topicdata group="api" notopic="" />
      <apidata name="FullSyncNextPacket" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>131072</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOptions_FullSyncNextPacket" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.IgnoreChangeNotifications">
      <topicdata group="api" notopic="" />
      <apidata name="IgnoreChangeNotifications" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>67108864</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOptions_IgnoreChangeNotifications" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NeverSynced">
      <topicdata group="api" notopic="" />
      <apidata name="NeverSynced" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>2097152</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOptions_NeverSynced" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NoChangeNotifications">
      <topicdata group="api" notopic="" />
      <apidata name="NoChangeNotifications" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>536870912</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOptions_NoChangeNotifications" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.PartialAttributeSet">
      <topicdata group="api" notopic="" />
      <apidata name="PartialAttributeSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>1073741824</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOptions_PartialAttributeSet" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Preempted">
      <topicdata group="api" notopic="" />
      <apidata name="Preempted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>16777216</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOptions_Preempted" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ReturnObjectParent">
      <topicdata group="api" notopic="" />
      <apidata name="ReturnObjectParent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>2048</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOptions_ReturnObjectParent" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ScheduledSync">
      <topicdata group="api" notopic="" />
      <apidata name="ScheduledSync" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOptions_ScheduledSync" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.SyncOnStartup">
      <topicdata group="api" notopic="" />
      <apidata name="SyncOnStartup" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOptions_SyncOnStartup" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.TwoWaySync">
      <topicdata group="api" notopic="" />
      <apidata name="TwoWaySync" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>512</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOptions_TwoWaySync" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.UseInterSiteTransport">
      <topicdata group="api" notopic="" />
      <apidata name="UseInterSiteTransport" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>128</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOptions_UseInterSiteTransport" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Writeable">
      <topicdata group="api" notopic="" />
      <apidata name="Writeable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationNeighbor_ReplicationNeighborOptions_Writeable" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" />
      <apidata name="ReplicationNeighborCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReplicationNeighborCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection">
      <topicdata name="ReplicationNeighborCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" />
      <apidata name="ReplicationNeighborCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReplicationNeighborCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection">
      <topicdata name="ReplicationNeighborCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" />
      <apidata name="ReplicationNeighborCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ReplicationNeighborCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection">
      <topicdata name="ReplicationNeighborCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" />
      <apidata name="ReplicationNeighborCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReplicationNeighborCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="neighbor">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationNeighborCollection_Contains_1_0eca26ec" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="neighbors">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationNeighborCollection_CopyTo_2_61238189" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="neighbor">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationNeighborCollection_IndexOf_1_0eca26ec" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationNeighborCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" />
      <apidata name="ReplicationOperation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReplicationOperation" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationOperation">
      <topicdata name="ReplicationOperation" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" />
      <apidata name="ReplicationOperation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationNumber" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.PartitionName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.Priority" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.TimeEnqueued" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReplicationOperation" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationOperation">
      <topicdata name="ReplicationOperation" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" />
      <apidata name="ReplicationOperation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationNumber" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.PartitionName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.Priority" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.TimeEnqueued" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReplicationOperation" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationNumber">
      <topicdata group="api" />
      <apidata name="OperationNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationOperation_OperationNumber" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationType">
      <topicdata group="api" />
      <apidata name="OperationType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationOperation_OperationType" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.PartitionName">
      <topicdata group="api" />
      <apidata name="PartitionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationOperation_PartitionName" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.Priority">
      <topicdata group="api" />
      <apidata name="Priority" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationOperation_Priority" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.SourceServer">
      <topicdata group="api" />
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationOperation_SourceServer" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.TimeEnqueued">
      <topicdata group="api" />
      <apidata name="TimeEnqueued" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationOperation_TimeEnqueued" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" />
      <apidata name="ReplicationOperationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReplicationOperationCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection">
      <topicdata name="ReplicationOperationCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" />
      <apidata name="ReplicationOperationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationOperation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationOperation[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationOperation)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReplicationOperationCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection">
      <topicdata name="ReplicationOperationCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" />
      <apidata name="ReplicationOperationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationOperation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationOperation[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationOperation)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_ReplicationOperationCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection">
      <topicdata name="ReplicationOperationCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" />
      <apidata name="ReplicationOperationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReplicationOperationCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationOperation)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="operation">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationOperationCollection_Contains_1_6811651c" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationOperation[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="operations">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationOperationCollection_CopyTo_2_a35812b1" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationOperation)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="operation">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_ReplicationOperationCollection_IndexOf_1_6811651c" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationOperationCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" />
      <apidata name="ReplicationOperationInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReplicationOperationInformation" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation">
      <topicdata name="ReplicationOperationInformation" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" />
      <apidata name="ReplicationOperationInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.#ctor" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.CurrentOperation" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.OperationStartTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.PendingOperations" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_ReplicationOperationInformation" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation">
      <topicdata name="ReplicationOperationInformation" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" />
      <apidata name="ReplicationOperationInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.CurrentOperation" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.OperationStartTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.PendingOperations" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_ReplicationOperationInformation" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_ReplicationOperationInformation_ctor" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.CurrentOperation">
      <topicdata group="api" />
      <apidata name="CurrentOperation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationOperationInformation_CurrentOperation" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.OperationStartTime">
      <topicdata group="api" />
      <apidata name="OperationStartTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationOperationInformation_OperationStartTime" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.PendingOperations">
      <topicdata group="api" />
      <apidata name="PendingOperations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_ReplicationOperationInformation_PendingOperations" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType">
      <topicdata group="api" />
      <apidata name="ReplicationOperationType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Sync" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Add" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Delete" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Modify" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.UpdateReference" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReplicationOperationType" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Add">
      <topicdata group="api" notopic="" />
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationOperationType_Add" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Delete">
      <topicdata group="api" notopic="" />
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationOperationType_Delete" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Modify">
      <topicdata group="api" notopic="" />
      <apidata name="Modify" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationOperationType_Modify" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Sync">
      <topicdata group="api" notopic="" />
      <apidata name="Sync" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationOperationType_Sync" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.UpdateReference">
      <topicdata group="api" notopic="" />
      <apidata name="UpdateReference" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationOperationType_UpdateReference" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel">
      <topicdata group="api" />
      <apidata name="ReplicationSecurityLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReplicationSecurityLevel" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication">
      <topicdata group="api" notopic="" />
      <apidata name="MutualAuthentication" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationSecurityLevel_MutualAuthentication" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate">
      <topicdata group="api" notopic="" />
      <apidata name="Negotiate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationSecurityLevel_Negotiate" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough">
      <topicdata group="api" notopic="" />
      <apidata name="NegotiatePassThrough" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationSecurityLevel_NegotiatePassThrough" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan">
      <topicdata group="api" />
      <apidata name="ReplicationSpan" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.IntraSite" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.InterSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_ReplicationSpan" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.InterSite">
      <topicdata group="api" notopic="" />
      <apidata name="InterSite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationSpan_InterSite" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.IntraSite">
      <topicdata group="api" notopic="" />
      <apidata name="IntraSite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_ReplicationSpan_IntraSite" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SchemaClassType">
      <topicdata group="api" />
      <apidata name="SchemaClassType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Type88" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Structural" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Abstract" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Auxiliary" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_SchemaClassType" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Abstract">
      <topicdata group="api" notopic="" />
      <apidata name="Abstract" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SchemaClassType_Abstract" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Auxiliary">
      <topicdata group="api" notopic="" />
      <apidata name="Auxiliary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SchemaClassType_Auxiliary" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Structural">
      <topicdata group="api" notopic="" />
      <apidata name="Structural" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SchemaClassType_Structural" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Type88">
      <topicdata group="api" notopic="" />
      <apidata name="Type88" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SchemaClassType_Type88" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory">
      <topicdata group="api" />
      <apidata name="SyncFromAllServersErrorCategory" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorContactingServer" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorReplicating" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ServerUnreachable" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_SyncFromAllServersErrorCategory" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorContactingServer">
      <topicdata group="api" notopic="" />
      <apidata name="ErrorContactingServer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SyncFromAllServersErrorCategory_ErrorContactingServer" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorReplicating">
      <topicdata group="api" notopic="" />
      <apidata name="ErrorReplicating" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SyncFromAllServersErrorCategory_ErrorReplicating" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ServerUnreachable">
      <topicdata group="api" notopic="" />
      <apidata name="ServerUnreachable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SyncFromAllServersErrorCategory_ServerUnreachable" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" />
      <apidata name="SyncFromAllServersErrorInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_SyncFromAllServersErrorInformation" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation">
      <topicdata name="SyncFromAllServersErrorInformation" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" />
      <apidata name="SyncFromAllServersErrorInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCategory" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorMessage" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.TargetServer" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_SyncFromAllServersErrorInformation" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation">
      <topicdata name="SyncFromAllServersErrorInformation" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" />
      <apidata name="SyncFromAllServersErrorInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCategory" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorMessage" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.TargetServer" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_SyncFromAllServersErrorInformation" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCategory">
      <topicdata group="api" />
      <apidata name="ErrorCategory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_SyncFromAllServersErrorInformation_ErrorCategory" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCode">
      <topicdata group="api" />
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_SyncFromAllServersErrorInformation_ErrorCode" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorMessage">
      <topicdata group="api" />
      <apidata name="ErrorMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_SyncFromAllServersErrorInformation_ErrorMessage" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.SourceServer">
      <topicdata group="api" />
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_SyncFromAllServersErrorInformation_SourceServer" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.TargetServer">
      <topicdata group="api" />
      <apidata name="TargetServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_SyncFromAllServersErrorInformation_TargetServer" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent">
      <topicdata group="api" />
      <apidata name="SyncFromAllServersEvent" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Error" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncStarted" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncCompleted" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Finished" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_SyncFromAllServersEvent" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SyncFromAllServersEvent_Error" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Finished">
      <topicdata group="api" notopic="" />
      <apidata name="Finished" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SyncFromAllServersEvent_Finished" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncCompleted">
      <topicdata group="api" notopic="" />
      <apidata name="SyncCompleted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SyncFromAllServersEvent_SyncCompleted" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncStarted">
      <topicdata group="api" notopic="" />
      <apidata name="SyncStarted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SyncFromAllServersEvent_SyncStarted" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" />
      <apidata name="SyncFromAllServersOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOperationException" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">
      <topicdata name="SyncFromAllServersOperationException" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" />
      <apidata name="SyncFromAllServersOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
          <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation[])" />
        </element>
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.ErrorInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOperationException" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">
      <topicdata name="SyncFromAllServersOperationException" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" />
      <apidata name="SyncFromAllServersOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOperationException" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">
      <topicdata name="SyncFromAllServersOperationException" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" />
      <apidata name="SyncFromAllServersOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.ErrorInformation" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOperationException" />
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation[])" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
      <file name="O_T_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOperationException_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOperationException_ctor" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOperationException_ctor_2_4075724f" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOperationException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOperationException_ctor_2_3ec47892" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="errors">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
      <file name="C_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOperationException_ctor_3_f1d865b6" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.ErrorInformation">
      <topicdata group="api" />
      <apidata name="ErrorInformation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOperationException_ErrorInformation" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOperationException_GetObjectData_2_af75a6ab" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions">
      <topicdata group="api" />
      <apidata name="SyncFromAllServersOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.None" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.AbortIfServerUnavailable" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SyncAdjacentServerOnly" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CheckServerAlivenessOnly" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SkipInitialCheck" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.PushChangeOutward" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CrossSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOptions" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.AbortIfServerUnavailable">
      <topicdata group="api" notopic="" />
      <apidata name="AbortIfServerUnavailable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOptions_AbortIfServerUnavailable" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CheckServerAlivenessOnly">
      <topicdata group="api" notopic="" />
      <apidata name="CheckServerAlivenessOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOptions_CheckServerAlivenessOnly" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CrossSite">
      <topicdata group="api" notopic="" />
      <apidata name="CrossSite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOptions_CrossSite" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOptions_None" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.PushChangeOutward">
      <topicdata group="api" notopic="" />
      <apidata name="PushChangeOutward" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOptions_PushChangeOutward" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SkipInitialCheck">
      <topicdata group="api" notopic="" />
      <apidata name="SkipInitialCheck" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOptions_SkipInitialCheck" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SyncAdjacentServerOnly">
      <topicdata group="api" notopic="" />
      <apidata name="SyncAdjacentServerOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_SyncFromAllServersOptions_SyncAdjacentServerOnly" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback">
      <topicdata group="api" />
      <apidata name="SyncUpdateCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="eventType">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
        </parameter>
        <parameter name="targetServer">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_SyncUpdateCallback" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TopLevelName">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.TopLevelName" />
      <apidata name="TopLevelName" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_TopLevelName" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.TopLevelName">
      <topicdata name="TopLevelName" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TopLevelName" />
      <apidata name="TopLevelName" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Status" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_TopLevelName" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.TopLevelName">
      <topicdata name="TopLevelName" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TopLevelName" />
      <apidata name="TopLevelName" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Status" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_TopLevelName" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_TopLevelName_Name" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Status">
      <topicdata group="api" />
      <apidata name="Status" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_TopLevelName_Status" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" />
      <apidata name="TopLevelNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_TopLevelNameCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection">
      <topicdata name="TopLevelNameCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" />
      <apidata name="TopLevelNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_TopLevelNameCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection">
      <topicdata name="TopLevelNameCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" />
      <apidata name="TopLevelNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_TopLevelNameCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection">
      <topicdata name="TopLevelNameCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" />
      <apidata name="TopLevelNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_TopLevelNameCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_TopLevelNameCollection_Contains_1_203275a8" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="names">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_TopLevelNameCollection_CopyTo_2_01c50bd8" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_TopLevelNameCollection_IndexOf_1_203275a8" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_TopLevelNameCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions">
      <topicdata group="api" />
      <apidata name="TopLevelNameCollisionOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.None" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.NewlyCreated" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByAdmin" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByConflict" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_DirectoryServices_ActiveDirectory_TopLevelNameCollisionOptions" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByAdmin">
      <topicdata group="api" notopic="" />
      <apidata name="DisabledByAdmin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TopLevelNameCollisionOptions_DisabledByAdmin" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByConflict">
      <topicdata group="api" notopic="" />
      <apidata name="DisabledByConflict" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TopLevelNameCollisionOptions_DisabledByConflict" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.NewlyCreated">
      <topicdata group="api" notopic="" />
      <apidata name="NewlyCreated" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TopLevelNameCollisionOptions_NewlyCreated" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TopLevelNameCollisionOptions_None" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus">
      <topicdata group="api" />
      <apidata name="TopLevelNameStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.Enabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.NewlyCreated" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.AdminDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.ConflictDisabled" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_TopLevelNameStatus" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.AdminDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="AdminDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TopLevelNameStatus_AdminDisabled" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.ConflictDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="ConflictDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TopLevelNameStatus_ConflictDisabled" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.Enabled">
      <topicdata group="api" notopic="" />
      <apidata name="Enabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TopLevelNameStatus_Enabled" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.NewlyCreated">
      <topicdata group="api" notopic="" />
      <apidata name="NewlyCreated" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TopLevelNameStatus_NewlyCreated" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TrustDirection">
      <topicdata group="api" />
      <apidata name="TrustDirection" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Inbound" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Outbound" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Bidirectional" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_TrustDirection" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Bidirectional">
      <topicdata group="api" notopic="" />
      <apidata name="Bidirectional" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TrustDirection_Bidirectional" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Inbound">
      <topicdata group="api" notopic="" />
      <apidata name="Inbound" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TrustDirection_Inbound" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Outbound">
      <topicdata group="api" notopic="" />
      <apidata name="Outbound" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TrustDirection_Outbound" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" />
      <apidata name="TrustRelationshipInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_TrustRelationshipInformation" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation">
      <topicdata name="TrustRelationshipInformation" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" />
      <apidata name="TrustRelationshipInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.SourceName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TargetName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustDirection" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_TrustRelationshipInformation" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation">
      <topicdata name="TrustRelationshipInformation" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" />
      <apidata name="TrustRelationshipInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.SourceName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TargetName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustDirection" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_TrustRelationshipInformation" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.SourceName">
      <topicdata group="api" />
      <apidata name="SourceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_TrustRelationshipInformation_SourceName" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TargetName">
      <topicdata group="api" />
      <apidata name="TargetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_TrustRelationshipInformation_TargetName" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustDirection">
      <topicdata group="api" />
      <apidata name="TrustDirection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_TrustRelationshipInformation_TrustDirection" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustType">
      <topicdata group="api" />
      <apidata name="TrustType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_TrustRelationshipInformation_TrustType" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" />
      <apidata name="TrustRelationshipInformationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_TrustRelationshipInformationCollection" />
    </api>
    <api id="AllMembers.T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection">
      <topicdata name="TrustRelationshipInformationCollection" group="list" subgroup="members" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" />
      <apidata name="TrustRelationshipInformationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Contains(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="AllMembers_T_System_DirectoryServices_ActiveDirectory_TrustRelationshipInformationCollection" />
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection">
      <topicdata name="TrustRelationshipInformationCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" />
      <apidata name="TrustRelationshipInformationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Contains(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Methods_T_System_DirectoryServices_ActiveDirectory_TrustRelationshipInformationCollection" />
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection">
      <topicdata name="TrustRelationshipInformationCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" />
      <apidata name="TrustRelationshipInformationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="Properties_T_System_DirectoryServices_ActiveDirectory_TrustRelationshipInformationCollection" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Contains(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="information">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_TrustRelationshipInformationCollection_Contains_1_8c5b496d" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_TrustRelationshipInformationCollection_CopyTo_2_a1612924" />
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="information">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </containers>
      <file name="M_System_DirectoryServices_ActiveDirectory_TrustRelationshipInformationCollection_IndexOf_1_8c5b496d" />
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </containers>
      <file name="P_System_DirectoryServices_ActiveDirectory_TrustRelationshipInformationCollection_Item_1_cd2d7ec9" />
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TrustType">
      <topicdata group="api" />
      <apidata name="TrustType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.TreeRoot" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.ParentChild" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.CrossLink" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.External" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.Forest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.Kerberos" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.Unknown" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <file name="T_System_DirectoryServices_ActiveDirectory_TrustType" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.CrossLink">
      <topicdata group="api" notopic="" />
      <apidata name="CrossLink" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TrustType_CrossLink" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.External">
      <topicdata group="api" notopic="" />
      <apidata name="External" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TrustType_External" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.Forest">
      <topicdata group="api" notopic="" />
      <apidata name="Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TrustType_Forest" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.Kerberos">
      <topicdata group="api" notopic="" />
      <apidata name="Kerberos" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TrustType_Kerberos" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.ParentChild">
      <topicdata group="api" notopic="" />
      <apidata name="ParentChild" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TrustType_ParentChild" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.TreeRoot">
      <topicdata group="api" notopic="" />
      <apidata name="TreeRoot" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TrustType_TreeRoot" />
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.Unknown">
      <topicdata group="api" notopic="" />
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" />
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
      <file name="F_System_DirectoryServices_ActiveDirectory_TrustType_Unknown" />
    </api>
  </apis>
</reflection>