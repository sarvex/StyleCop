<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Speech">
      <assemblydata version="3.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright (c) Microsoft Corporation. All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft (R) Windows (R) Operating System</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>d:\sp1.public.x86fre\internal\strongnamekeys\fake\windows.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>6.0.6001.17000</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="SkipVerification">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.PermissionSetAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestOptional" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestOptional" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.RegistryPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestOptional" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.EnvironmentPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestOptional" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.FileIOPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestOptional" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="T:System.Speech.AudioFormat.AudioBitsPerSample">
      <topicdata group="api" />
      <apidata name="AudioBitsPerSample" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.AudioFormat.AudioBitsPerSample.Eight" />
        <element api="F:System.Speech.AudioFormat.AudioBitsPerSample.Sixteen" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.AudioFormat" />
      </containers>
      <file name="T_System_Speech_AudioFormat_AudioBitsPerSample" />
    </api>
    <api id="F:System.Speech.AudioFormat.AudioBitsPerSample.Eight">
      <topicdata group="api" notopic="" />
      <apidata name="Eight" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.AudioFormat.AudioBitsPerSample" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.AudioBitsPerSample" ref="false" />
      </containers>
      <file name="F_System_Speech_AudioFormat_AudioBitsPerSample_Eight" />
    </api>
    <api id="F:System.Speech.AudioFormat.AudioBitsPerSample.Sixteen">
      <topicdata group="api" notopic="" />
      <apidata name="Sixteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.AudioFormat.AudioBitsPerSample" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.AudioBitsPerSample" ref="false" />
      </containers>
      <file name="F_System_Speech_AudioFormat_AudioBitsPerSample_Sixteen" />
    </api>
    <api id="T:System.Speech.AudioFormat.AudioChannel">
      <topicdata group="api" />
      <apidata name="AudioChannel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.AudioFormat.AudioChannel.Mono" />
        <element api="F:System.Speech.AudioFormat.AudioChannel.Stereo" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.AudioFormat" />
      </containers>
      <file name="T_System_Speech_AudioFormat_AudioChannel" />
    </api>
    <api id="F:System.Speech.AudioFormat.AudioChannel.Mono">
      <topicdata group="api" notopic="" />
      <apidata name="Mono" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.AudioFormat.AudioChannel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.AudioChannel" ref="false" />
      </containers>
      <file name="F_System_Speech_AudioFormat_AudioChannel_Mono" />
    </api>
    <api id="F:System.Speech.AudioFormat.AudioChannel.Stereo">
      <topicdata group="api" notopic="" />
      <apidata name="Stereo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.AudioFormat.AudioChannel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.AudioChannel" ref="false" />
      </containers>
      <file name="F_System_Speech_AudioFormat_AudioChannel_Stereo" />
    </api>
    <api id="T:System.Speech.AudioFormat.EncodingFormat">
      <topicdata group="api" />
      <apidata name="EncodingFormat" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.AudioFormat.EncodingFormat.Pcm" />
        <element api="F:System.Speech.AudioFormat.EncodingFormat.ALaw" />
        <element api="F:System.Speech.AudioFormat.EncodingFormat.ULaw" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.AudioFormat" />
      </containers>
      <file name="T_System_Speech_AudioFormat_EncodingFormat" />
    </api>
    <api id="F:System.Speech.AudioFormat.EncodingFormat.ALaw">
      <topicdata group="api" notopic="" />
      <apidata name="ALaw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.AudioFormat.EncodingFormat" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.EncodingFormat" ref="false" />
      </containers>
      <file name="F_System_Speech_AudioFormat_EncodingFormat_ALaw" />
    </api>
    <api id="F:System.Speech.AudioFormat.EncodingFormat.Pcm">
      <topicdata group="api" notopic="" />
      <apidata name="Pcm" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.AudioFormat.EncodingFormat" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.EncodingFormat" ref="false" />
      </containers>
      <file name="F_System_Speech_AudioFormat_EncodingFormat_Pcm" />
    </api>
    <api id="F:System.Speech.AudioFormat.EncodingFormat.ULaw">
      <topicdata group="api" notopic="" />
      <apidata name="ULaw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.AudioFormat.EncodingFormat" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.EncodingFormat" ref="false" />
      </containers>
      <file name="F_System_Speech_AudioFormat_EncodingFormat_ULaw" />
    </api>
    <api id="T:System.Speech.AudioFormat.SpeechAudioFormatInfo">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      <apidata name="SpeechAudioFormatInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.AudioFormat" />
      </containers>
      <file name="T_System_Speech_AudioFormat_SpeechAudioFormatInfo" />
    </api>
    <api id="AllMembers.T:System.Speech.AudioFormat.SpeechAudioFormatInfo">
      <topicdata name="SpeechAudioFormatInfo" group="list" subgroup="members" typeTopicId="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      <apidata name="SpeechAudioFormatInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor">
          <element api="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)" />
          <element api="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond" />
        <element api="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample" />
        <element api="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign" />
        <element api="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount" />
        <element api="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat" />
        <element api="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(System.Object)" />
        <element api="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData" />
        <element api="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode" />
        <element api="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.AudioFormat" />
      </containers>
      <file name="AllMembers_T_System_Speech_AudioFormat_SpeechAudioFormatInfo" />
    </api>
    <api id="Methods.T:System.Speech.AudioFormat.SpeechAudioFormatInfo">
      <topicdata name="SpeechAudioFormatInfo" group="list" subgroup="Methods" typeTopicId="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      <apidata name="SpeechAudioFormatInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(System.Object)" />
        <element api="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData" />
        <element api="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.AudioFormat" />
      </containers>
      <file name="Methods_T_System_Speech_AudioFormat_SpeechAudioFormatInfo" />
    </api>
    <api id="Properties.T:System.Speech.AudioFormat.SpeechAudioFormatInfo">
      <topicdata name="SpeechAudioFormatInfo" group="list" subgroup="Properties" typeTopicId="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      <apidata name="SpeechAudioFormatInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond" />
        <element api="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample" />
        <element api="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign" />
        <element api="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount" />
        <element api="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat" />
        <element api="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.AudioFormat" />
      </containers>
      <file name="Properties_T_System_Speech_AudioFormat_SpeechAudioFormatInfo" />
    </api>
    <api id="Overload:System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)" />
        <element api="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </containers>
      <file name="O_T_System_Speech_AudioFormat_SpeechAudioFormatInfo_ctor" />
    </api>
    <api id="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor" />
      <parameters>
        <parameter name="samplesPerSecond">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bitsPerSample">
          <type api="T:System.Speech.AudioFormat.AudioBitsPerSample" ref="false" />
        </parameter>
        <parameter name="channel">
          <type api="T:System.Speech.AudioFormat.AudioChannel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </containers>
      <file name="C_System_Speech_AudioFormat_SpeechAudioFormatInfo_ctor_3_09242547" />
    </api>
    <api id="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor" />
      <parameters>
        <parameter name="encodingFormat">
          <type api="T:System.Speech.AudioFormat.EncodingFormat" ref="false" />
        </parameter>
        <parameter name="samplesPerSecond">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bitsPerSample">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="channelCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="averageBytesPerSecond">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="blockAlign">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="formatSpecificData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </containers>
      <file name="C_System_Speech_AudioFormat_SpeechAudioFormatInfo_ctor_7_d06eb3de" />
    </api>
    <api id="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond">
      <topicdata group="api" />
      <apidata name="AverageBytesPerSecond" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_AudioFormat_SpeechAudioFormatInfo_AverageBytesPerSecond" />
    </api>
    <api id="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample">
      <topicdata group="api" />
      <apidata name="BitsPerSample" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_AudioFormat_SpeechAudioFormatInfo_BitsPerSample" />
    </api>
    <api id="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign">
      <topicdata group="api" />
      <apidata name="BlockAlign" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_AudioFormat_SpeechAudioFormatInfo_BlockAlign" />
    </api>
    <api id="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount">
      <topicdata group="api" />
      <apidata name="ChannelCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_AudioFormat_SpeechAudioFormatInfo_ChannelCount" />
    </api>
    <api id="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat">
      <topicdata group="api" />
      <apidata name="EncodingFormat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.AudioFormat.EncodingFormat" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_AudioFormat_SpeechAudioFormatInfo_EncodingFormat" />
    </api>
    <api id="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </containers>
      <file name="M_System_Speech_AudioFormat_SpeechAudioFormatInfo_Equals_1_2572741a" />
    </api>
    <api id="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData">
      <topicdata group="api" />
      <apidata name="FormatSpecificData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </containers>
      <file name="M_System_Speech_AudioFormat_SpeechAudioFormatInfo_FormatSpecificData" />
    </api>
    <api id="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </containers>
      <file name="M_System_Speech_AudioFormat_SpeechAudioFormatInfo_GetHashCode" />
    </api>
    <api id="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond">
      <topicdata group="api" />
      <apidata name="SamplesPerSecond" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.AudioFormat" />
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_AudioFormat_SpeechAudioFormatInfo_SamplesPerSecond" />
    </api>
    <api id="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" />
      <apidata name="AudioLevelUpdatedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_AudioLevelUpdatedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.AudioLevelUpdatedEventArgs">
      <topicdata name="AudioLevelUpdatedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" />
      <apidata name="AudioLevelUpdatedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.AudioLevelUpdatedEventArgs.AudioLevel" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_AudioLevelUpdatedEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.AudioLevelUpdatedEventArgs">
      <topicdata name="AudioLevelUpdatedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" />
      <apidata name="AudioLevelUpdatedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.AudioLevelUpdatedEventArgs.AudioLevel" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_AudioLevelUpdatedEventArgs" />
    </api>
    <api id="P:System.Speech.Recognition.AudioLevelUpdatedEventArgs.AudioLevel">
      <topicdata group="api" />
      <apidata name="AudioLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_AudioLevelUpdatedEventArgs_AudioLevel" />
    </api>
    <api id="T:System.Speech.Recognition.AudioSignalProblem">
      <topicdata group="api" />
      <apidata name="AudioSignalProblem" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Recognition.AudioSignalProblem.None" />
        <element api="F:System.Speech.Recognition.AudioSignalProblem.TooNoisy" />
        <element api="F:System.Speech.Recognition.AudioSignalProblem.NoSignal" />
        <element api="F:System.Speech.Recognition.AudioSignalProblem.TooLoud" />
        <element api="F:System.Speech.Recognition.AudioSignalProblem.TooSoft" />
        <element api="F:System.Speech.Recognition.AudioSignalProblem.TooFast" />
        <element api="F:System.Speech.Recognition.AudioSignalProblem.TooSlow" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_AudioSignalProblem" />
    </api>
    <api id="F:System.Speech.Recognition.AudioSignalProblem.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_AudioSignalProblem_None" />
    </api>
    <api id="F:System.Speech.Recognition.AudioSignalProblem.NoSignal">
      <topicdata group="api" notopic="" />
      <apidata name="NoSignal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_AudioSignalProblem_NoSignal" />
    </api>
    <api id="F:System.Speech.Recognition.AudioSignalProblem.TooFast">
      <topicdata group="api" notopic="" />
      <apidata name="TooFast" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_AudioSignalProblem_TooFast" />
    </api>
    <api id="F:System.Speech.Recognition.AudioSignalProblem.TooLoud">
      <topicdata group="api" notopic="" />
      <apidata name="TooLoud" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_AudioSignalProblem_TooLoud" />
    </api>
    <api id="F:System.Speech.Recognition.AudioSignalProblem.TooNoisy">
      <topicdata group="api" notopic="" />
      <apidata name="TooNoisy" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_AudioSignalProblem_TooNoisy" />
    </api>
    <api id="F:System.Speech.Recognition.AudioSignalProblem.TooSlow">
      <topicdata group="api" notopic="" />
      <apidata name="TooSlow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_AudioSignalProblem_TooSlow" />
    </api>
    <api id="F:System.Speech.Recognition.AudioSignalProblem.TooSoft">
      <topicdata group="api" notopic="" />
      <apidata name="TooSoft" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_AudioSignalProblem_TooSoft" />
    </api>
    <api id="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" />
      <apidata name="AudioSignalProblemOccurredEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_AudioSignalProblemOccurredEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs">
      <topicdata name="AudioSignalProblemOccurredEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" />
      <apidata name="AudioSignalProblemOccurredEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioLevel" />
        <element api="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioPosition" />
        <element api="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioSignalProblem" />
        <element api="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.RecognizerAudioPosition" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_AudioSignalProblemOccurredEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs">
      <topicdata name="AudioSignalProblemOccurredEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" />
      <apidata name="AudioSignalProblemOccurredEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioLevel" />
        <element api="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioPosition" />
        <element api="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioSignalProblem" />
        <element api="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.RecognizerAudioPosition" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_AudioSignalProblemOccurredEventArgs" />
    </api>
    <api id="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioLevel">
      <topicdata group="api" />
      <apidata name="AudioLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_AudioSignalProblemOccurredEventArgs_AudioLevel" />
    </api>
    <api id="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_AudioSignalProblemOccurredEventArgs_AudioPosition" />
    </api>
    <api id="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioSignalProblem">
      <topicdata group="api" />
      <apidata name="AudioSignalProblem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_AudioSignalProblemOccurredEventArgs_AudioSignalProblem" />
    </api>
    <api id="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.RecognizerAudioPosition">
      <topicdata group="api" />
      <apidata name="RecognizerAudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_AudioSignalProblemOccurredEventArgs_RecognizerAudioPosition" />
    </api>
    <api id="T:System.Speech.Recognition.AudioState">
      <topicdata group="api" />
      <apidata name="AudioState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Recognition.AudioState.Stopped" />
        <element api="F:System.Speech.Recognition.AudioState.Silence" />
        <element api="F:System.Speech.Recognition.AudioState.Speech" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_AudioState" />
    </api>
    <api id="F:System.Speech.Recognition.AudioState.Silence">
      <topicdata group="api" notopic="" />
      <apidata name="Silence" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_AudioState_Silence" />
    </api>
    <api id="F:System.Speech.Recognition.AudioState.Speech">
      <topicdata group="api" notopic="" />
      <apidata name="Speech" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_AudioState_Speech" />
    </api>
    <api id="F:System.Speech.Recognition.AudioState.Stopped">
      <topicdata group="api" notopic="" />
      <apidata name="Stopped" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_AudioState_Stopped" />
    </api>
    <api id="T:System.Speech.Recognition.AudioStateChangedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.AudioStateChangedEventArgs" />
      <apidata name="AudioStateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_AudioStateChangedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.AudioStateChangedEventArgs">
      <topicdata name="AudioStateChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.AudioStateChangedEventArgs" />
      <apidata name="AudioStateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.AudioStateChangedEventArgs.AudioState" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_AudioStateChangedEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.AudioStateChangedEventArgs">
      <topicdata name="AudioStateChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.AudioStateChangedEventArgs" />
      <apidata name="AudioStateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.AudioStateChangedEventArgs.AudioState" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_AudioStateChangedEventArgs" />
    </api>
    <api id="P:System.Speech.Recognition.AudioStateChangedEventArgs.AudioState">
      <topicdata group="api" />
      <apidata name="AudioState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioStateChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_AudioStateChangedEventArgs_AudioState" />
    </api>
    <api id="T:System.Speech.Recognition.Choices">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.Choices" />
      <apidata name="Choices" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_Choices" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.Choices">
      <topicdata name="Choices" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.Choices" />
      <apidata name="Choices" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.Choices.#ctor">
          <element api="M:System.Speech.Recognition.Choices.#ctor" />
          <element api="M:System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])" />
          <element api="M:System.Speech.Recognition.Choices.#ctor(System.String[])" />
        </element>
        <element api="Overload:System.Speech.Recognition.Choices.Add">
          <element api="M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])" />
          <element api="M:System.Speech.Recognition.Choices.Add(System.String[])" />
        </element>
        <element api="M:System.Speech.Recognition.Choices.ToGrammarBuilder" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_Choices" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.Choices">
      <topicdata name="Choices" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.Choices" />
      <apidata name="Choices" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.Choices.Add">
          <element api="M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])" />
          <element api="M:System.Speech.Recognition.Choices.Add(System.String[])" />
        </element>
        <element api="M:System.Speech.Recognition.Choices.ToGrammarBuilder" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_Choices" />
    </api>
    <api id="Overload:System.Speech.Recognition.Choices.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.Choices" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.Choices.#ctor" />
        <element api="M:System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])" />
        <element api="M:System.Speech.Recognition.Choices.#ctor(System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_Choices_ctor" />
    </api>
    <api id="Overload:System.Speech.Recognition.Choices.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.Choices" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])" />
        <element api="M:System.Speech.Recognition.Choices.Add(System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_Choices_Add" />
    </api>
    <api id="M:System.Speech.Recognition.Choices.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Choices.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Choices_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Choices.#ctor" />
      <parameters>
        <parameter name="alternateChoices">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Choices_ctor_1_834bf9ac" />
    </api>
    <api id="M:System.Speech.Recognition.Choices.#ctor(System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Choices.#ctor" />
      <parameters>
        <parameter name="phrases">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Choices_ctor_1_f84e6fb6" />
    </api>
    <api id="M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.Choices.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="alternateChoices">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_Choices_Add_1_5010443d" />
    </api>
    <api id="M:System.Speech.Recognition.Choices.Add(System.String[])">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.Choices.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="phrases">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_Choices_Add_1_ceb5cd1f" />
    </api>
    <api id="M:System.Speech.Recognition.Choices.ToGrammarBuilder">
      <topicdata group="api" />
      <apidata name="ToGrammarBuilder" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_Choices_ToGrammarBuilder" />
    </api>
    <api id="T:System.Speech.Recognition.DictationGrammar">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.DictationGrammar" />
      <apidata name="DictationGrammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.Grammar" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_DictationGrammar" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.DictationGrammar">
      <topicdata name="DictationGrammar" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.DictationGrammar" />
      <apidata name="DictationGrammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.DictationGrammar.#ctor">
          <element api="M:System.Speech.Recognition.DictationGrammar.#ctor" />
          <element api="M:System.Speech.Recognition.DictationGrammar.#ctor(System.String)" />
        </element>
        <element api="M:System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)" />
        <element api="P:System.Speech.Recognition.Grammar.Enabled" />
        <element api="P:System.Speech.Recognition.Grammar.IsStg" />
        <element api="P:System.Speech.Recognition.Grammar.Loaded" />
        <element api="P:System.Speech.Recognition.Grammar.Name" />
        <element api="P:System.Speech.Recognition.Grammar.Priority" />
        <element api="P:System.Speech.Recognition.Grammar.ResourceName" />
        <element api="P:System.Speech.Recognition.Grammar.RuleName" />
        <element api="E:System.Speech.Recognition.Grammar.SpeechRecognized" />
        <element api="M:System.Speech.Recognition.Grammar.StgInit(System.Object[])" />
        <element api="P:System.Speech.Recognition.Grammar.Weight" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_DictationGrammar" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.DictationGrammar">
      <topicdata name="DictationGrammar" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.DictationGrammar" />
      <apidata name="DictationGrammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)" />
        <element api="M:System.Speech.Recognition.Grammar.StgInit(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_DictationGrammar" />
    </api>
    <api id="Overload:System.Speech.Recognition.DictationGrammar.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.DictationGrammar" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.DictationGrammar.#ctor" />
        <element api="M:System.Speech.Recognition.DictationGrammar.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DictationGrammar" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_DictationGrammar_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.DictationGrammar.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.DictationGrammar.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DictationGrammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_DictationGrammar_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.DictationGrammar.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.DictationGrammar.#ctor" />
      <parameters>
        <parameter name="topic">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DictationGrammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_DictationGrammar_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetDictationContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="precedingText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subsequentText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DictationGrammar" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_DictationGrammar_SetDictationContext_2_52fce4af" />
    </api>
    <api id="T:System.Speech.Recognition.DisplayAttributes">
      <topicdata group="api" />
      <apidata name="DisplayAttributes" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Recognition.DisplayAttributes.None" />
        <element api="F:System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces" />
        <element api="F:System.Speech.Recognition.DisplayAttributes.OneTrailingSpace" />
        <element api="F:System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces" />
        <element api="F:System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_Speech_Recognition_DisplayAttributes" />
    </api>
    <api id="F:System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces">
      <topicdata group="api" notopic="" />
      <apidata name="ConsumeLeadingSpaces" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_DisplayAttributes_ConsumeLeadingSpaces" />
    </api>
    <api id="F:System.Speech.Recognition.DisplayAttributes.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_DisplayAttributes_None" />
    </api>
    <api id="F:System.Speech.Recognition.DisplayAttributes.OneTrailingSpace">
      <topicdata group="api" notopic="" />
      <apidata name="OneTrailingSpace" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_DisplayAttributes_OneTrailingSpace" />
    </api>
    <api id="F:System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces">
      <topicdata group="api" notopic="" />
      <apidata name="TwoTrailingSpaces" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_DisplayAttributes_TwoTrailingSpaces" />
    </api>
    <api id="F:System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces">
      <topicdata group="api" notopic="" />
      <apidata name="ZeroTrailingSpaces" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_DisplayAttributes_ZeroTrailingSpaces" />
    </api>
    <api id="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" />
      <apidata name="EmulateRecognizeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_EmulateRecognizeCompletedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs">
      <topicdata name="EmulateRecognizeCompletedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" />
      <apidata name="EmulateRecognizeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_EmulateRecognizeCompletedEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs">
      <topicdata name="EmulateRecognizeCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" />
      <apidata name="EmulateRecognizeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_EmulateRecognizeCompletedEventArgs" />
    </api>
    <api id="P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_EmulateRecognizeCompletedEventArgs_Result" />
    </api>
    <api id="T:System.Speech.Recognition.Grammar">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.Grammar" />
      <apidata name="Grammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Speech.Recognition.DictationGrammar" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_Grammar" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.Grammar">
      <topicdata name="Grammar" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.Grammar" />
      <apidata name="Grammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.Grammar.#ctor">
          <element api="M:System.Speech.Recognition.Grammar.#ctor" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.String)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])" />
        </element>
        <element api="P:System.Speech.Recognition.Grammar.Enabled" />
        <element api="P:System.Speech.Recognition.Grammar.IsStg" />
        <element api="P:System.Speech.Recognition.Grammar.Loaded" />
        <element api="M:System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])" />
        <element api="P:System.Speech.Recognition.Grammar.Name" />
        <element api="P:System.Speech.Recognition.Grammar.Priority" />
        <element api="P:System.Speech.Recognition.Grammar.ResourceName" />
        <element api="P:System.Speech.Recognition.Grammar.RuleName" />
        <element api="E:System.Speech.Recognition.Grammar.SpeechRecognized" />
        <element api="M:System.Speech.Recognition.Grammar.StgInit(System.Object[])" />
        <element api="P:System.Speech.Recognition.Grammar.Weight" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_Grammar" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.Grammar">
      <topicdata name="Grammar" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.Grammar" />
      <apidata name="Grammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])" />
        <element api="M:System.Speech.Recognition.Grammar.StgInit(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_Grammar" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.Grammar">
      <topicdata name="Grammar" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.Grammar" />
      <apidata name="Grammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.Grammar.Enabled" />
        <element api="P:System.Speech.Recognition.Grammar.IsStg" />
        <element api="P:System.Speech.Recognition.Grammar.Loaded" />
        <element api="P:System.Speech.Recognition.Grammar.Name" />
        <element api="P:System.Speech.Recognition.Grammar.Priority" />
        <element api="P:System.Speech.Recognition.Grammar.ResourceName" />
        <element api="P:System.Speech.Recognition.Grammar.RuleName" />
        <element api="P:System.Speech.Recognition.Grammar.Weight" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_Grammar" />
    </api>
    <api id="Events.T:System.Speech.Recognition.Grammar">
      <topicdata name="Grammar" group="list" subgroup="Events" typeTopicId="T:System.Speech.Recognition.Grammar" />
      <apidata name="Grammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Speech.Recognition.Grammar.SpeechRecognized" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Events_T_System_Speech_Recognition_Grammar" />
    </api>
    <api id="Overload:System.Speech.Recognition.Grammar.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.Grammar" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.Grammar.#ctor" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.String)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_Grammar_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Grammar_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Grammar_ctor_1_014c0eac" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Grammar_ctor_2_69a7ea00" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Grammar_ctor_3_fce09885" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="baseUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Grammar_ctor_3_63958280" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="baseUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Grammar_ctor_4_f5a320fb" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Grammar_ctor_1_0fc4859d" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="srgsDocument">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Grammar_ctor_1_4214c775" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="srgsDocument">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Grammar_ctor_2_453f109d" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="srgsDocument">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Grammar_ctor_3_26550b81" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="srgsDocument">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="baseUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Grammar_ctor_3_a47f2f05" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="srgsDocument">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="baseUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Grammar_ctor_4_355f35fa" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Grammar_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Grammar_ctor_2_6608d038" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_Grammar_ctor_3_29a2b836" />
    </api>
    <api id="P:System.Speech.Recognition.Grammar.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_Grammar_Enabled" />
    </api>
    <api id="P:System.Speech.Recognition.Grammar.IsStg">
      <topicdata group="api" />
      <apidata name="IsStg" group="member" subgroup="property" />
      <memberdata visibility="family or assembly" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_Grammar_IsStg" />
    </api>
    <api id="P:System.Speech.Recognition.Grammar.Loaded">
      <topicdata group="api" />
      <apidata name="Loaded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_Grammar_Loaded" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])">
      <topicdata group="api" />
      <apidata name="LoadLocalizedGrammarFromType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="onInitParameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_Grammar_LoadLocalizedGrammarFromType_2_39496025" />
    </api>
    <api id="P:System.Speech.Recognition.Grammar.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_Grammar_Name" />
    </api>
    <api id="P:System.Speech.Recognition.Grammar.Priority">
      <topicdata group="api" />
      <apidata name="Priority" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_Grammar_Priority" />
    </api>
    <api id="P:System.Speech.Recognition.Grammar.ResourceName">
      <topicdata group="api" />
      <apidata name="ResourceName" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_Grammar_ResourceName" />
    </api>
    <api id="P:System.Speech.Recognition.Grammar.RuleName">
      <topicdata group="api" />
      <apidata name="RuleName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_Grammar_RuleName" />
    </api>
    <api id="E:System.Speech.Recognition.Grammar.SpeechRecognized">
      <topicdata group="api" />
      <apidata name="SpeechRecognized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_Grammar_SpeechRecognized" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.StgInit(System.Object[])">
      <topicdata group="api" />
      <apidata name="StgInit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_Grammar_StgInit_1_0e1149fa" />
    </api>
    <api id="P:System.Speech.Recognition.Grammar.Weight">
      <topicdata group="api" />
      <apidata name="Weight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_Grammar_Weight" />
    </api>
    <api id="T:System.Speech.Recognition.GrammarBuilder">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="GrammarBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_GrammarBuilder" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.GrammarBuilder">
      <topicdata name="GrammarBuilder" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="GrammarBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.#ctor">
          <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.Add">
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.Append">
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.AppendDictation">
          <element api="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.AppendRuleReference">
          <element api="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
        </element>
        <element api="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <element api="P:System.Speech.Recognition.GrammarBuilder.Culture" />
        <element api="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.op_Addition">
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.op_Implicit">
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_GrammarBuilder" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.GrammarBuilder">
      <topicdata name="GrammarBuilder" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="GrammarBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.Add">
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.Append">
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.AppendDictation">
          <element api="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.AppendRuleReference">
          <element api="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
        </element>
        <element api="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.op_Addition">
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.op_Implicit">
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_GrammarBuilder" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.GrammarBuilder">
      <topicdata name="GrammarBuilder" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="GrammarBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.GrammarBuilder.Culture" />
        <element api="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_GrammarBuilder" />
    </api>
    <api id="Overload:System.Speech.Recognition.GrammarBuilder.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_GrammarBuilder_ctor" />
    </api>
    <api id="Overload:System.Speech.Recognition.GrammarBuilder.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_GrammarBuilder_Add" />
    </api>
    <api id="Overload:System.Speech.Recognition.GrammarBuilder.Append">
      <topicdata name="Append" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="Append" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_GrammarBuilder_Append" />
    </api>
    <api id="Overload:System.Speech.Recognition.GrammarBuilder.AppendDictation">
      <topicdata name="AppendDictation" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="AppendDictation" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_GrammarBuilder_AppendDictation" />
    </api>
    <api id="Overload:System.Speech.Recognition.GrammarBuilder.AppendRuleReference">
      <topicdata name="AppendRuleReference" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="AppendRuleReference" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_GrammarBuilder_AppendRuleReference" />
    </api>
    <api id="Overload:System.Speech.Recognition.GrammarBuilder.op_Addition">
      <topicdata name="Addition" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_GrammarBuilder_op_Addition" />
    </api>
    <api id="Overload:System.Speech.Recognition.GrammarBuilder.op_Implicit">
      <topicdata name="Implicit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_GrammarBuilder_op_Implicit" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_GrammarBuilder_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <parameters>
        <parameter name="alternateChoices">
          <type api="T:System.Speech.Recognition.Choices" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_GrammarBuilder_ctor_1_a5e9afcd" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="minRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_GrammarBuilder_ctor_3_25634e89" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Speech.Recognition.SemanticResultKey" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_GrammarBuilder_ctor_1_ac051948" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Speech.Recognition.SemanticResultValue" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_GrammarBuilder_ctor_1_1266372b" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_GrammarBuilder_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="minRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_GrammarBuilder_ctor_3_2e59cdd5" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subsetMatchingCriteria">
          <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_GrammarBuilder_ctor_2_3236082e" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="choices">
          <type api="T:System.Speech.Recognition.Choices" ref="true" />
        </parameter>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_Add_2_83df9703" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="choices">
          <type api="T:System.Speech.Recognition.Choices" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_Add_2_ad8bf4d3" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builder1">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="builder2">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_Add_2_2e4a0275" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_Add_2_a3f37f64" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_Add_2_d7ea0f45" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="alternateChoices">
          <type api="T:System.Speech.Recognition.Choices" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_Append_1_397b0962" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_Append_1_8d565271" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="minRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_Append_3_c1e7326a" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Speech.Recognition.SemanticResultKey" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_Append_1_e5d85db1" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Speech.Recognition.SemanticResultValue" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_Append_1_4fbb9b95" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_Append_1_72eac341" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="minRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_Append_3_c1a5e0c4" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subsetMatchingCriteria">
          <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_Append_2_ef32add5" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.AppendDictation">
      <topicdata group="api" />
      <apidata name="AppendDictation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_AppendDictation" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)">
      <topicdata group="api" />
      <apidata name="AppendDictation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_AppendDictation_1_72eac341" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)">
      <topicdata group="api" />
      <apidata name="AppendRuleReference" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.AppendRuleReference" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_AppendRuleReference_1_72eac341" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AppendRuleReference" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.AppendRuleReference" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rule">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_AppendRuleReference_2_52fce4af" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard">
      <topicdata group="api" />
      <apidata name="AppendWildcard" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_AppendWildcard" />
    </api>
    <api id="P:System.Speech.Recognition.GrammarBuilder.Culture">
      <topicdata group="api" />
      <apidata name="Culture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_GrammarBuilder_Culture" />
    </api>
    <api id="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases">
      <topicdata group="api" />
      <apidata name="DebugShowPhrases" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_GrammarBuilder_DebugShowPhrases" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="choices">
          <type api="T:System.Speech.Recognition.Choices" ref="true" />
        </parameter>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_op_Addition_2_83df9703" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="choices">
          <type api="T:System.Speech.Recognition.Choices" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_op_Addition_2_ad8bf4d3" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builder1">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="builder2">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_op_Addition_2_2e4a0275" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_op_Addition_2_a3f37f64" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_op_Addition_2_d7ea0f45" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="choices">
          <type api="T:System.Speech.Recognition.Choices" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_op_Implicit_1_55be7dfa" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="semanticKey">
          <type api="T:System.Speech.Recognition.SemanticResultKey" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_op_Implicit_1_208d80d1" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="semanticValue">
          <type api="T:System.Speech.Recognition.SemanticResultValue" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_op_Implicit_1_a1c0b99c" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_GrammarBuilder_op_Implicit_1_2c1c0606" />
    </api>
    <api id="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" />
      <apidata name="LoadGrammarCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_LoadGrammarCompletedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.LoadGrammarCompletedEventArgs">
      <topicdata name="LoadGrammarCompletedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" />
      <apidata name="LoadGrammarCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Recognition.LoadGrammarCompletedEventArgs.Grammar" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_LoadGrammarCompletedEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.LoadGrammarCompletedEventArgs">
      <topicdata name="LoadGrammarCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" />
      <apidata name="LoadGrammarCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Recognition.LoadGrammarCompletedEventArgs.Grammar" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_LoadGrammarCompletedEventArgs" />
    </api>
    <api id="P:System.Speech.Recognition.LoadGrammarCompletedEventArgs.Grammar">
      <topicdata group="api" />
      <apidata name="Grammar" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_LoadGrammarCompletedEventArgs_Grammar" />
    </api>
    <api id="T:System.Speech.Recognition.RecognitionEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.RecognitionEventArgs" />
      <apidata name="RecognitionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" ref="true" />
          <type api="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" ref="true" />
          <type api="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_RecognitionEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.RecognitionEventArgs">
      <topicdata name="RecognitionEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.RecognitionEventArgs" />
      <apidata name="RecognitionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognitionEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_RecognitionEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.RecognitionEventArgs">
      <topicdata name="RecognitionEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.RecognitionEventArgs" />
      <apidata name="RecognitionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognitionEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_RecognitionEventArgs" />
    </api>
    <api id="P:System.Speech.Recognition.RecognitionEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognitionEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognitionEventArgs_Result" />
    </api>
    <api id="T:System.Speech.Recognition.RecognitionResult">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.RecognitionResult" />
      <apidata name="RecognitionResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_RecognitionResult" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.RecognitionResult">
      <topicdata name="RecognitionResult" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.RecognitionResult" />
      <apidata name="RecognitionResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognitionResult.Alternates" />
        <element api="P:System.Speech.Recognition.RecognitionResult.Audio" />
        <element api="M:System.Speech.Recognition.RecognitionResult.GetAudioForWordRange(System.Speech.Recognition.RecognizedWordUnit,System.Speech.Recognition.RecognizedWordUnit)" />
        <element api="M:System.Speech.Recognition.RecognitionResult.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Confidence" />
        <element api="M:System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Grammar" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Homophones" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Semantics" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Text" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_RecognitionResult" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.RecognitionResult">
      <topicdata name="RecognitionResult" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.RecognitionResult" />
      <apidata name="RecognitionResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.RecognitionResult.GetAudioForWordRange(System.Speech.Recognition.RecognizedWordUnit,System.Speech.Recognition.RecognizedWordUnit)" />
        <element api="M:System.Speech.Recognition.RecognitionResult.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_RecognitionResult" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.RecognitionResult">
      <topicdata name="RecognitionResult" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.RecognitionResult" />
      <apidata name="RecognitionResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognitionResult.Alternates" />
        <element api="P:System.Speech.Recognition.RecognitionResult.Audio" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Confidence" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Grammar" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Homophones" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Semantics" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Text" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_RecognitionResult" />
    </api>
    <api id="P:System.Speech.Recognition.RecognitionResult.Alternates">
      <topicdata group="api" />
      <apidata name="Alternates" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognitionResult_Alternates" />
    </api>
    <api id="P:System.Speech.Recognition.RecognitionResult.Audio">
      <topicdata group="api" />
      <apidata name="Audio" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognitionResult_Audio" />
    </api>
    <api id="M:System.Speech.Recognition.RecognitionResult.GetAudioForWordRange(System.Speech.Recognition.RecognizedWordUnit,System.Speech.Recognition.RecognizedWordUnit)">
      <topicdata group="api" />
      <apidata name="GetAudioForWordRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="firstWord">
          <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
        </parameter>
        <parameter name="lastWord">
          <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_RecognitionResult_GetAudioForWordRange_2_dc11572f" />
    </api>
    <api id="M:System.Speech.Recognition.RecognitionResult.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Speech_Recognition_RecognitionResult_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="T:System.Speech.Recognition.RecognizeCompletedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.RecognizeCompletedEventArgs" />
      <apidata name="RecognizeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_RecognizeCompletedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.RecognizeCompletedEventArgs">
      <topicdata name="RecognizeCompletedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.RecognizeCompletedEventArgs" />
      <apidata name="RecognizeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.BabbleTimeout" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.InitialSilenceTimeout" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.InputStreamEnded" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_RecognizeCompletedEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.RecognizeCompletedEventArgs">
      <topicdata name="RecognizeCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.RecognizeCompletedEventArgs" />
      <apidata name="RecognizeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.BabbleTimeout" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.InitialSilenceTimeout" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.InputStreamEnded" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_RecognizeCompletedEventArgs" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizeCompletedEventArgs.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizeCompletedEventArgs_AudioPosition" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizeCompletedEventArgs.BabbleTimeout">
      <topicdata group="api" />
      <apidata name="BabbleTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizeCompletedEventArgs_BabbleTimeout" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizeCompletedEventArgs.InitialSilenceTimeout">
      <topicdata group="api" />
      <apidata name="InitialSilenceTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizeCompletedEventArgs_InitialSilenceTimeout" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizeCompletedEventArgs.InputStreamEnded">
      <topicdata group="api" />
      <apidata name="InputStreamEnded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizeCompletedEventArgs_InputStreamEnded" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizeCompletedEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizeCompletedEventArgs_Result" />
    </api>
    <api id="T:System.Speech.Recognition.RecognizedAudio">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.RecognizedAudio" />
      <apidata name="RecognizedAudio" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_RecognizedAudio" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.RecognizedAudio">
      <topicdata name="RecognizedAudio" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.RecognizedAudio" />
      <apidata name="RecognizedAudio" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognizedAudio.AudioPosition" />
        <element api="P:System.Speech.Recognition.RecognizedAudio.Duration" />
        <element api="P:System.Speech.Recognition.RecognizedAudio.Format" />
        <element api="M:System.Speech.Recognition.RecognizedAudio.GetRange(System.TimeSpan,System.TimeSpan)" />
        <element api="P:System.Speech.Recognition.RecognizedAudio.StartTime" />
        <element api="M:System.Speech.Recognition.RecognizedAudio.WriteToAudioStream(System.IO.Stream)" />
        <element api="M:System.Speech.Recognition.RecognizedAudio.WriteToWaveStream(System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_RecognizedAudio" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.RecognizedAudio">
      <topicdata name="RecognizedAudio" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.RecognizedAudio" />
      <apidata name="RecognizedAudio" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.RecognizedAudio.GetRange(System.TimeSpan,System.TimeSpan)" />
        <element api="M:System.Speech.Recognition.RecognizedAudio.WriteToAudioStream(System.IO.Stream)" />
        <element api="M:System.Speech.Recognition.RecognizedAudio.WriteToWaveStream(System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_RecognizedAudio" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.RecognizedAudio">
      <topicdata name="RecognizedAudio" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.RecognizedAudio" />
      <apidata name="RecognizedAudio" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognizedAudio.AudioPosition" />
        <element api="P:System.Speech.Recognition.RecognizedAudio.Duration" />
        <element api="P:System.Speech.Recognition.RecognizedAudio.Format" />
        <element api="P:System.Speech.Recognition.RecognizedAudio.StartTime" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_RecognizedAudio" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedAudio.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedAudio_AudioPosition" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedAudio.Duration">
      <topicdata group="api" />
      <apidata name="Duration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedAudio_Duration" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedAudio.Format">
      <topicdata group="api" />
      <apidata name="Format" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedAudio_Format" />
    </api>
    <api id="M:System.Speech.Recognition.RecognizedAudio.GetRange(System.TimeSpan,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="GetRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="audioPosition">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="duration">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_RecognizedAudio_GetRange_2_170bebba" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedAudio.StartTime">
      <topicdata group="api" />
      <apidata name="StartTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedAudio_StartTime" />
    </api>
    <api id="M:System.Speech.Recognition.RecognizedAudio.WriteToAudioStream(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="WriteToAudioStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="outputStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_RecognizedAudio_WriteToAudioStream_1_6c2dff68" />
    </api>
    <api id="M:System.Speech.Recognition.RecognizedAudio.WriteToWaveStream(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="WriteToWaveStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="outputStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_RecognizedAudio_WriteToWaveStream_1_6c2dff68" />
    </api>
    <api id="T:System.Speech.Recognition.RecognizedPhrase">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.RecognizedPhrase" />
      <apidata name="RecognizedPhrase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_RecognizedPhrase" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.RecognizedPhrase">
      <topicdata name="RecognizedPhrase" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.RecognizedPhrase" />
      <apidata name="RecognizedPhrase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Confidence" />
        <element api="M:System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Grammar" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Homophones" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Semantics" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Text" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_RecognizedPhrase" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.RecognizedPhrase">
      <topicdata name="RecognizedPhrase" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.RecognizedPhrase" />
      <apidata name="RecognizedPhrase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_RecognizedPhrase" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.RecognizedPhrase">
      <topicdata name="RecognizedPhrase" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.RecognizedPhrase" />
      <apidata name="RecognizedPhrase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Confidence" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Grammar" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Homophones" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Semantics" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Text" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_RecognizedPhrase" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedPhrase.Confidence">
      <topicdata group="api" />
      <apidata name="Confidence" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedPhrase_Confidence" />
    </api>
    <api id="M:System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics">
      <topicdata group="api" />
      <apidata name="ConstructSmlFromSemantics" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Xml.XPath.IXPathNavigable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_RecognizedPhrase_ConstructSmlFromSemantics" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedPhrase.Grammar">
      <topicdata group="api" />
      <apidata name="Grammar" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedPhrase_Grammar" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId">
      <topicdata group="api" />
      <apidata name="HomophoneGroupId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedPhrase_HomophoneGroupId" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedPhrase.Homophones">
      <topicdata group="api" />
      <apidata name="Homophones" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedPhrase_Homophones" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits">
      <topicdata group="api" />
      <apidata name="ReplacementWordUnits" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.ReplacementText" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedPhrase_ReplacementWordUnits" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedPhrase.Semantics">
      <topicdata group="api" />
      <apidata name="Semantics" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedPhrase_Semantics" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedPhrase.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedPhrase_Text" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedPhrase.Words">
      <topicdata group="api" />
      <apidata name="Words" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedPhrase_Words" />
    </api>
    <api id="T:System.Speech.Recognition.RecognizedWordUnit">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.RecognizedWordUnit" />
      <apidata name="RecognizedWordUnit" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_RecognizedWordUnit" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.RecognizedWordUnit">
      <topicdata name="RecognizedWordUnit" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.RecognizedWordUnit" />
      <apidata name="RecognizedWordUnit" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.RecognizedWordUnit.#ctor(System.String,System.Single,System.String,System.String,System.Speech.Recognition.DisplayAttributes,System.TimeSpan,System.TimeSpan)" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.Confidence" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.LexicalForm" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.Pronunciation" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_RecognizedWordUnit" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.RecognizedWordUnit">
      <topicdata name="RecognizedWordUnit" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.RecognizedWordUnit" />
      <apidata name="RecognizedWordUnit" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.Confidence" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.LexicalForm" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.Pronunciation" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_RecognizedWordUnit" />
    </api>
    <api id="M:System.Speech.Recognition.RecognizedWordUnit.#ctor(System.String,System.Single,System.String,System.String,System.Speech.Recognition.DisplayAttributes,System.TimeSpan,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="confidence">
          <type api="T:System.Single" ref="false" />
        </parameter>
        <parameter name="pronunciation">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lexicalForm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="displayAttributes">
          <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
        </parameter>
        <parameter name="audioPosition">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="audioDuration">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_RecognizedWordUnit_ctor_7_65afbad9" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedWordUnit.Confidence">
      <topicdata group="api" />
      <apidata name="Confidence" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedWordUnit_Confidence" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes">
      <topicdata group="api" />
      <apidata name="DisplayAttributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedWordUnit_DisplayAttributes" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedWordUnit.LexicalForm">
      <topicdata group="api" />
      <apidata name="LexicalForm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedWordUnit_LexicalForm" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedWordUnit.Pronunciation">
      <topicdata group="api" />
      <apidata name="Pronunciation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedWordUnit_Pronunciation" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedWordUnit.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizedWordUnit_Text" />
    </api>
    <api id="T:System.Speech.Recognition.RecognizeMode">
      <topicdata group="api" />
      <apidata name="RecognizeMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Recognition.RecognizeMode.Single" />
        <element api="F:System.Speech.Recognition.RecognizeMode.Multiple" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_RecognizeMode" />
    </api>
    <api id="F:System.Speech.Recognition.RecognizeMode.Multiple">
      <topicdata group="api" notopic="" />
      <apidata name="Multiple" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizeMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeMode" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_RecognizeMode_Multiple" />
    </api>
    <api id="F:System.Speech.Recognition.RecognizeMode.Single">
      <topicdata group="api" notopic="" />
      <apidata name="Single" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizeMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeMode" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_RecognizeMode_Single" />
    </api>
    <api id="T:System.Speech.Recognition.RecognizerInfo">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.RecognizerInfo" />
      <apidata name="RecognizerInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_RecognizerInfo" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.RecognizerInfo">
      <topicdata name="RecognizerInfo" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.RecognizerInfo" />
      <apidata name="RecognizerInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.AdditionalInfo" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.Culture" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.Description" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.Id" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.Name" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_RecognizerInfo" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.RecognizerInfo">
      <topicdata name="RecognizerInfo" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.RecognizerInfo" />
      <apidata name="RecognizerInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognizerInfo.AdditionalInfo" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.Culture" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.Description" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.Id" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.Name" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_RecognizerInfo" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizerInfo.AdditionalInfo">
      <topicdata group="api" />
      <apidata name="AdditionalInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizerInfo_AdditionalInfo" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizerInfo.Culture">
      <topicdata group="api" />
      <apidata name="Culture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizerInfo_Culture" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizerInfo.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizerInfo_Description" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizerInfo.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizerInfo_Id" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizerInfo.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizerInfo_Name" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats">
      <topicdata group="api" />
      <apidata name="SupportedAudioFormats" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizerInfo_SupportedAudioFormats" />
    </api>
    <api id="T:System.Speech.Recognition.RecognizerState">
      <topicdata group="api" />
      <apidata name="RecognizerState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Recognition.RecognizerState.Stopped" />
        <element api="F:System.Speech.Recognition.RecognizerState.Listening" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_RecognizerState" />
    </api>
    <api id="F:System.Speech.Recognition.RecognizerState.Listening">
      <topicdata group="api" notopic="" />
      <apidata name="Listening" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizerState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerState" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_RecognizerState_Listening" />
    </api>
    <api id="F:System.Speech.Recognition.RecognizerState.Stopped">
      <topicdata group="api" notopic="" />
      <apidata name="Stopped" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizerState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerState" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_RecognizerState_Stopped" />
    </api>
    <api id="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" />
      <apidata name="RecognizerUpdateReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_RecognizerUpdateReachedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs">
      <topicdata name="RecognizerUpdateReachedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" />
      <apidata name="RecognizerUpdateReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognizerUpdateReachedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Recognition.RecognizerUpdateReachedEventArgs.UserToken" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_RecognizerUpdateReachedEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs">
      <topicdata name="RecognizerUpdateReachedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" />
      <apidata name="RecognizerUpdateReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognizerUpdateReachedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Recognition.RecognizerUpdateReachedEventArgs.UserToken" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_RecognizerUpdateReachedEventArgs" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizerUpdateReachedEventArgs.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizerUpdateReachedEventArgs_AudioPosition" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizerUpdateReachedEventArgs.UserToken">
      <topicdata group="api" />
      <apidata name="UserToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_RecognizerUpdateReachedEventArgs_UserToken" />
    </api>
    <api id="T:System.Speech.Recognition.ReplacementText">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.ReplacementText" />
      <apidata name="ReplacementText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="sequential" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_ReplacementText" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.ReplacementText">
      <topicdata name="ReplacementText" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.ReplacementText" />
      <apidata name="ReplacementText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.ReplacementText.CountOfWords" />
        <element api="P:System.Speech.Recognition.ReplacementText.DisplayAttributes" />
        <element api="P:System.Speech.Recognition.ReplacementText.FirstWordIndex" />
        <element api="P:System.Speech.Recognition.ReplacementText.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_ReplacementText" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.ReplacementText">
      <topicdata name="ReplacementText" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.ReplacementText" />
      <apidata name="ReplacementText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="sequential" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.ReplacementText.CountOfWords" />
        <element api="P:System.Speech.Recognition.ReplacementText.DisplayAttributes" />
        <element api="P:System.Speech.Recognition.ReplacementText.FirstWordIndex" />
        <element api="P:System.Speech.Recognition.ReplacementText.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_ReplacementText" />
    </api>
    <api id="P:System.Speech.Recognition.ReplacementText.CountOfWords">
      <topicdata group="api" />
      <apidata name="CountOfWords" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.ReplacementText" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_ReplacementText_CountOfWords" />
    </api>
    <api id="P:System.Speech.Recognition.ReplacementText.DisplayAttributes">
      <topicdata group="api" />
      <apidata name="DisplayAttributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.ReplacementText" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_ReplacementText_DisplayAttributes" />
    </api>
    <api id="P:System.Speech.Recognition.ReplacementText.FirstWordIndex">
      <topicdata group="api" />
      <apidata name="FirstWordIndex" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.ReplacementText" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_ReplacementText_FirstWordIndex" />
    </api>
    <api id="P:System.Speech.Recognition.ReplacementText.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.ReplacementText" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_ReplacementText_Text" />
    </api>
    <api id="T:System.Speech.Recognition.SemanticResultKey">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SemanticResultKey" />
      <apidata name="SemanticResultKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_SemanticResultKey" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SemanticResultKey">
      <topicdata name="SemanticResultKey" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SemanticResultKey" />
      <apidata name="SemanticResultKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SemanticResultKey.#ctor">
          <element api="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])" />
          <element api="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])" />
        </element>
        <element api="M:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SemanticResultKey" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SemanticResultKey">
      <topicdata name="SemanticResultKey" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SemanticResultKey" />
      <apidata name="SemanticResultKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_SemanticResultKey" />
    </api>
    <api id="Overload:System.Speech.Recognition.SemanticResultKey.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SemanticResultKey" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])" />
        <element api="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultKey" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SemanticResultKey_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SemanticResultKey.#ctor" />
      <parameters>
        <parameter name="semanticResultKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="builders">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultKey" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SemanticResultKey_ctor_2_0b74f388" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SemanticResultKey.#ctor" />
      <parameters>
        <parameter name="semanticResultKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="phrases">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultKey" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SemanticResultKey_ctor_2_655f2de5" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder">
      <topicdata group="api" />
      <apidata name="ToGrammarBuilder" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultKey" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SemanticResultKey_ToGrammarBuilder" />
    </api>
    <api id="T:System.Speech.Recognition.SemanticResultValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SemanticResultValue" />
      <apidata name="SemanticResultValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_SemanticResultValue" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SemanticResultValue">
      <topicdata name="SemanticResultValue" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SemanticResultValue" />
      <apidata name="SemanticResultValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SemanticResultValue.#ctor">
          <element api="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)" />
          <element api="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)" />
          <element api="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)" />
        </element>
        <element api="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SemanticResultValue" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SemanticResultValue">
      <topicdata name="SemanticResultValue" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SemanticResultValue" />
      <apidata name="SemanticResultValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_SemanticResultValue" />
    </api>
    <api id="Overload:System.Speech.Recognition.SemanticResultValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SemanticResultValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)" />
        <element api="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)" />
        <element api="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultValue" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SemanticResultValue_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SemanticResultValue.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultValue" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SemanticResultValue_ctor_1_286e8133" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SemanticResultValue.#ctor" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultValue" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SemanticResultValue_ctor_2_7c6b3c5b" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SemanticResultValue.#ctor" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultValue" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SemanticResultValue_ctor_2_89845c1b" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder">
      <topicdata group="api" />
      <apidata name="ToGrammarBuilder" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultValue" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SemanticResultValue_ToGrammarBuilder" />
    </api>
    <api id="T:System.Speech.Recognition.SemanticValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SemanticValue" />
      <apidata name="SemanticValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_SemanticValue" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SemanticValue">
      <topicdata name="SemanticValue" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SemanticValue" />
      <apidata name="SemanticValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SemanticValue.#ctor">
          <element api="M:System.Speech.Recognition.SemanticValue.#ctor(System.Object)" />
          <element api="M:System.Speech.Recognition.SemanticValue.#ctor(System.String,System.Object,System.Single)" />
        </element>
        <element api="P:System.Speech.Recognition.SemanticValue.Confidence" />
        <element api="M:System.Speech.Recognition.SemanticValue.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})" />
        <element api="M:System.Speech.Recognition.SemanticValue.ContainsKey(System.String)" />
        <element api="P:System.Speech.Recognition.SemanticValue.Count" />
        <element api="M:System.Speech.Recognition.SemanticValue.Equals(System.Object)" />
        <element api="M:System.Speech.Recognition.SemanticValue.GetHashCode" />
        <element api="P:System.Speech.Recognition.SemanticValue.Item(System.String)" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Clear" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}[],System.Int32)" />
        <element api="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#IsReadOnly" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Add(System.String,System.Speech.Recognition.SemanticValue)" />
        <element api="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Keys" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Remove(System.String)" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#TryGetValue(System.String,System.Speech.Recognition.SemanticValue@)" />
        <element api="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Values" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#GetEnumerator" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:System.Speech.Recognition.SemanticValue.Value" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SemanticValue" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SemanticValue">
      <topicdata name="SemanticValue" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SemanticValue" />
      <apidata name="SemanticValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SemanticValue.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})" />
        <element api="M:System.Speech.Recognition.SemanticValue.ContainsKey(System.String)" />
        <element api="M:System.Speech.Recognition.SemanticValue.Equals(System.Object)" />
        <element api="M:System.Speech.Recognition.SemanticValue.GetHashCode" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Clear" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}[],System.Int32)" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Add(System.String,System.Speech.Recognition.SemanticValue)" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Remove(System.String)" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#TryGetValue(System.String,System.Speech.Recognition.SemanticValue@)" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#GetEnumerator" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_SemanticValue" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SemanticValue">
      <topicdata name="SemanticValue" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SemanticValue" />
      <apidata name="SemanticValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.SemanticValue.Confidence" />
        <element api="P:System.Speech.Recognition.SemanticValue.Count" />
        <element api="P:System.Speech.Recognition.SemanticValue.Item(System.String)" />
        <element api="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#IsReadOnly" />
        <element api="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Keys" />
        <element api="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Values" />
        <element api="P:System.Speech.Recognition.SemanticValue.Value" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_SemanticValue" />
    </api>
    <api id="Overload:System.Speech.Recognition.SemanticValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SemanticValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SemanticValue.#ctor(System.Object)" />
        <element api="M:System.Speech.Recognition.SemanticValue.#ctor(System.String,System.Object,System.Single)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SemanticValue_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SemanticValue.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SemanticValue_ctor_1_286e8133" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.#ctor(System.String,System.Object,System.Single)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SemanticValue.#ctor" />
      <parameters>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="confidence">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SemanticValue_ctor_3_51c410ff" />
    </api>
    <api id="P:System.Speech.Recognition.SemanticValue.Confidence">
      <topicdata group="api" />
      <apidata name="Confidence" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SemanticValue_Confidence" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SemanticValue_Contains_2_7777cb3b" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.ContainsKey(System.String)">
      <topicdata group="api" />
      <apidata name="ContainsKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SemanticValue_ContainsKey_1_72eac341" />
    </api>
    <api id="P:System.Speech.Recognition.SemanticValue.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SemanticValue_Count" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SemanticValue_Equals_1_2572741a" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SemanticValue_GetHashCode" />
    </api>
    <api id="P:System.Speech.Recognition.SemanticValue.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SemanticValue_Item_1_72eac341" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SemanticValue_System_Collections_Generic_ICollection{System_Collections_Generic_KeyValuePair{System_String,System_Speech_Recognition_SemanticValue}}_Add_2_7777cb3b" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SemanticValue_System_Collections_Generic_ICollection{System_Collections_Generic_KeyValuePair{System_String,System_Speech_Recognition_SemanticValue}}_Clear" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SemanticValue_System_Collections_Generic_ICollection{System_Collections_Generic_KeyValuePair{System_String,System_Speech_Recognition_SemanticValue}}_CopyTo_3_1733ef2b" />
    </api>
    <api id="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SemanticValue_System_Collections_Generic_ICollection{System_Collections_Generic_KeyValuePair{System_String,System_Speech_Recognition_SemanticValue}}_IsReadOnly" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SemanticValue_System_Collections_Generic_ICollection{System_Collections_Generic_KeyValuePair{System_String,System_Speech_Recognition_SemanticValue}}_Remove_2_7777cb3b" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Add(System.String,System.Speech.Recognition.SemanticValue)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SemanticValue_System_Collections_Generic_IDictionary{System_String,System_Speech_Recognition_SemanticValue}_Add_2_81a90c3e" />
    </api>
    <api id="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Keys">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SemanticValue_System_Collections_Generic_IDictionary{System_String,System_Speech_Recognition_SemanticValue}_Keys" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SemanticValue_System_Collections_Generic_IDictionary{System_String,System_Speech_Recognition_SemanticValue}_Remove_1_72eac341" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#TryGetValue(System.String,System.Speech.Recognition.SemanticValue@)">
      <topicdata group="api" />
      <apidata name="TryGetValue" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value" out="true">
          <referenceTo>
            <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SemanticValue_System_Collections_Generic_IDictionary{System_String,System_Speech_Recognition_SemanticValue}_TryGetValue_2_3b4db911" />
    </api>
    <api id="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Values">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SemanticValue_System_Collections_Generic_IDictionary{System_String,System_Speech_Recognition_SemanticValue}_Values" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SemanticValue_System_Collections_Generic_IEnumerable{System_Collections_Generic_KeyValuePair{System_String,System_Speech_Recognition_SemanticValue}}_GetEnumerator" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SemanticValue_System_Collections_IEnumerable_GetEnumerator" />
    </api>
    <api id="P:System.Speech.Recognition.SemanticValue.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SemanticValue_Value" />
    </api>
    <api id="T:System.Speech.Recognition.SpeechDetectedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechDetectedEventArgs" />
      <apidata name="SpeechDetectedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_SpeechDetectedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SpeechDetectedEventArgs">
      <topicdata name="SpeechDetectedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SpeechDetectedEventArgs" />
      <apidata name="SpeechDetectedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SpeechDetectedEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SpeechDetectedEventArgs">
      <topicdata name="SpeechDetectedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SpeechDetectedEventArgs" />
      <apidata name="SpeechDetectedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_SpeechDetectedEventArgs" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechDetectedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechDetectedEventArgs_AudioPosition" />
    </api>
    <api id="T:System.Speech.Recognition.SpeechHypothesizedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechHypothesizedEventArgs" />
      <apidata name="SpeechHypothesizedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.RecognitionEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_SpeechHypothesizedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SpeechHypothesizedEventArgs">
      <topicdata name="SpeechHypothesizedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" />
      <apidata name="SpeechHypothesizedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognitionEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SpeechHypothesizedEventArgs" />
    </api>
    <api id="T:System.Speech.Recognition.SpeechRecognitionEngine">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="SpeechRecognitionEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_SpeechRecognitionEngine" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine">
      <topicdata name="SpeechRecognitionEngine" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="SpeechRecognitionEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.#ctor">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.Globalization.CultureInfo)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.Speech.Recognition.RecognizerInfo)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.String)" />
        </element>
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioFormat" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevel" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevelUpdated" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioPosition" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioSignalProblemOccurred" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioState" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioStateChanged" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.BabbleTimeout" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Dispose">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String,System.Globalization.CompareOptions)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)" />
        </element>
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.EndSilenceTimeout" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.EndSilenceTimeoutAmbiguous" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.Grammars" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.InitialSilenceTimeout" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.InstalledRecognizers" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammar(System.Speech.Recognition.Grammar)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammarAsync(System.Speech.Recognition.Grammar)" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammarCompleted" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.MaxAlternates" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.QueryRecognizerSetting(System.String)" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Recognize">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync(System.Speech.Recognition.RecognizeMode)" />
        </element>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsyncCancel" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsyncStop" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerAudioPosition" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerInfo" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerUpdateReached" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object,System.TimeSpan)" />
        </element>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToDefaultAudioDevice" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToWaveFile(System.String)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToWaveStream(System.IO.Stream)" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UnloadAllGrammars" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UnloadGrammar(System.Speech.Recognition.Grammar)" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.Int32)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SpeechRecognitionEngine" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SpeechRecognitionEngine">
      <topicdata name="SpeechRecognitionEngine" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="SpeechRecognitionEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Dispose">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String,System.Globalization.CompareOptions)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)" />
        </element>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.InstalledRecognizers" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammar(System.Speech.Recognition.Grammar)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammarAsync(System.Speech.Recognition.Grammar)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.QueryRecognizerSetting(System.String)" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Recognize">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync(System.Speech.Recognition.RecognizeMode)" />
        </element>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsyncCancel" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsyncStop" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object,System.TimeSpan)" />
        </element>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToDefaultAudioDevice" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToWaveFile(System.String)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToWaveStream(System.IO.Stream)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UnloadAllGrammars" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UnloadGrammar(System.Speech.Recognition.Grammar)" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.Int32)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_SpeechRecognitionEngine" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SpeechRecognitionEngine">
      <topicdata name="SpeechRecognitionEngine" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="SpeechRecognitionEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioFormat" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevel" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioPosition" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioState" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.BabbleTimeout" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.EndSilenceTimeout" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.EndSilenceTimeoutAmbiguous" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.Grammars" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.InitialSilenceTimeout" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.MaxAlternates" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerAudioPosition" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerInfo" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_SpeechRecognitionEngine" />
    </api>
    <api id="Events.T:System.Speech.Recognition.SpeechRecognitionEngine">
      <topicdata name="SpeechRecognitionEngine" group="list" subgroup="Events" typeTopicId="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="SpeechRecognitionEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevelUpdated" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioSignalProblemOccurred" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioStateChanged" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammarCompleted" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerUpdateReached" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Events_T_System_Speech_Recognition_SpeechRecognitionEngine" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognitionEngine.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.Globalization.CultureInfo)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.Speech.Recognition.RecognizerInfo)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SpeechRecognitionEngine_ctor" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SpeechRecognitionEngine_Dispose" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize">
      <topicdata name="EmulateRecognize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="EmulateRecognize" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String,System.Globalization.CompareOptions)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SpeechRecognitionEngine_EmulateRecognize" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync">
      <topicdata name="EmulateRecognizeAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="EmulateRecognizeAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SpeechRecognitionEngine_EmulateRecognizeAsync" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Recognize">
      <topicdata name="Recognize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="Recognize" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SpeechRecognitionEngine_Recognize" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync">
      <topicdata name="RecognizeAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="RecognizeAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync(System.Speech.Recognition.RecognizeMode)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SpeechRecognitionEngine_RecognizeAsync" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate">
      <topicdata name="RequestRecognizerUpdate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="RequestRecognizerUpdate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SpeechRecognitionEngine_RequestRecognizerUpdate" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting">
      <topicdata name="UpdateRecognizerSetting" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="UpdateRecognizerSetting" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.Int32)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SpeechRecognitionEngine_UpdateRecognizerSetting" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SpeechRecognitionEngine_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
      <parameters>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SpeechRecognitionEngine_ctor_1_a256a1c3" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.Speech.Recognition.RecognizerInfo)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
      <parameters>
        <parameter name="recognizerInfo">
          <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SpeechRecognitionEngine_ctor_1_526130d1" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
      <parameters>
        <parameter name="recognizerId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SpeechRecognitionEngine_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioFormat">
      <topicdata group="api" />
      <apidata name="AudioFormat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognitionEngine_AudioFormat" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevel">
      <topicdata group="api" />
      <apidata name="AudioLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognitionEngine_AudioLevel" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevelUpdated">
      <topicdata group="api" />
      <apidata name="AudioLevelUpdated" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognitionEngine_AudioLevelUpdated" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognitionEngine_AudioPosition" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioSignalProblemOccurred">
      <topicdata group="api" />
      <apidata name="AudioSignalProblemOccurred" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognitionEngine_AudioSignalProblemOccurred" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioState">
      <topicdata group="api" />
      <apidata name="AudioState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognitionEngine_AudioState" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioStateChanged">
      <topicdata group="api" />
      <apidata name="AudioStateChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.AudioStateChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.AudioStateChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognitionEngine_AudioStateChanged" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.BabbleTimeout">
      <topicdata group="api" />
      <apidata name="BabbleTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognitionEngine_BabbleTimeout" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_Dispose" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)">
      <topicdata group="api" />
      <apidata name="EmulateRecognize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="wordUnits">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="compareOptions">
          <type api="T:System.Globalization.CompareOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_EmulateRecognize_2_8e8137df" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String)">
      <topicdata group="api" />
      <apidata name="EmulateRecognize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_EmulateRecognize_1_72eac341" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String,System.Globalization.CompareOptions)">
      <topicdata group="api" />
      <apidata name="EmulateRecognize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="compareOptions">
          <type api="T:System.Globalization.CompareOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_EmulateRecognize_2_2e795c0a" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)">
      <topicdata group="api" />
      <apidata name="EmulateRecognizeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="wordUnits">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="compareOptions">
          <type api="T:System.Globalization.CompareOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_EmulateRecognizeAsync_2_8e8137df" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String)">
      <topicdata group="api" />
      <apidata name="EmulateRecognizeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_EmulateRecognizeAsync_1_72eac341" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)">
      <topicdata group="api" />
      <apidata name="EmulateRecognizeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="compareOptions">
          <type api="T:System.Globalization.CompareOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_EmulateRecognizeAsync_2_2e795c0a" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted">
      <topicdata group="api" />
      <apidata name="EmulateRecognizeCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognitionEngine_EmulateRecognizeCompleted" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.EndSilenceTimeout">
      <topicdata group="api" />
      <apidata name="EndSilenceTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognitionEngine_EndSilenceTimeout" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.EndSilenceTimeoutAmbiguous">
      <topicdata group="api" />
      <apidata name="EndSilenceTimeoutAmbiguous" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognitionEngine_EndSilenceTimeoutAmbiguous" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.Grammars">
      <topicdata group="api" />
      <apidata name="Grammars" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.Grammar" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognitionEngine_Grammars" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.InitialSilenceTimeout">
      <topicdata group="api" />
      <apidata name="InitialSilenceTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognitionEngine_InitialSilenceTimeout" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.InstalledRecognizers">
      <topicdata group="api" />
      <apidata name="InstalledRecognizers" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_InstalledRecognizers" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammar(System.Speech.Recognition.Grammar)">
      <topicdata group="api" />
      <apidata name="LoadGrammar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="grammar">
          <type api="T:System.Speech.Recognition.Grammar" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_LoadGrammar_1_2af02a14" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammarAsync(System.Speech.Recognition.Grammar)">
      <topicdata group="api" />
      <apidata name="LoadGrammarAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="grammar">
          <type api="T:System.Speech.Recognition.Grammar" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_LoadGrammarAsync_1_2af02a14" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammarCompleted">
      <topicdata group="api" />
      <apidata name="LoadGrammarCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognitionEngine_LoadGrammarCompleted" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.MaxAlternates">
      <topicdata group="api" />
      <apidata name="MaxAlternates" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognitionEngine_MaxAlternates" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.QueryRecognizerSetting(System.String)">
      <topicdata group="api" />
      <apidata name="QueryRecognizerSetting" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="settingName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_QueryRecognizerSetting_1_72eac341" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize">
      <topicdata group="api" />
      <apidata name="Recognize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Recognize" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_Recognize" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Recognize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Recognize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="initialSilenceTimeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_Recognize_1_dd1f561a" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync">
      <topicdata group="api" />
      <apidata name="RecognizeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_RecognizeAsync" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync(System.Speech.Recognition.RecognizeMode)">
      <topicdata group="api" />
      <apidata name="RecognizeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mode">
          <type api="T:System.Speech.Recognition.RecognizeMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_RecognizeAsync_1_67072107" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsyncCancel">
      <topicdata group="api" />
      <apidata name="RecognizeAsyncCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_RecognizeAsyncCancel" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsyncStop">
      <topicdata group="api" />
      <apidata name="RecognizeAsyncStop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_RecognizeAsyncStop" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted">
      <topicdata group="api" />
      <apidata name="RecognizeCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognitionEngine_RecognizeCompleted" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerAudioPosition">
      <topicdata group="api" />
      <apidata name="RecognizerAudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognitionEngine_RecognizerAudioPosition" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerInfo">
      <topicdata group="api" />
      <apidata name="RecognizerInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognitionEngine_RecognizerInfo" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerUpdateReached">
      <topicdata group="api" />
      <apidata name="RecognizerUpdateReached" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognitionEngine_RecognizerUpdateReached" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate">
      <topicdata group="api" />
      <apidata name="RequestRecognizerUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_RequestRecognizerUpdate" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object)">
      <topicdata group="api" />
      <apidata name="RequestRecognizerUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_RequestRecognizerUpdate_1_2572741a" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="RequestRecognizerUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="audioPositionAheadToRaiseUpdate">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_RequestRecognizerUpdate_2_ee1d7eed" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)">
      <topicdata group="api" />
      <apidata name="SetInputToAudioStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="audioSource">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="audioFormat">
          <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_SetInputToAudioStream_2_b0622c86" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToDefaultAudioDevice">
      <topicdata group="api" />
      <apidata name="SetInputToDefaultAudioDevice" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_SetInputToDefaultAudioDevice" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull">
      <topicdata group="api" />
      <apidata name="SetInputToNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_SetInputToNull" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToWaveFile(System.String)">
      <topicdata group="api" />
      <apidata name="SetInputToWaveFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_SetInputToWaveFile_1_72eac341" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToWaveStream(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="SetInputToWaveStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="audioSource">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_SetInputToWaveStream_1_6c2dff68" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected">
      <topicdata group="api" />
      <apidata name="SpeechDetected" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechDetectedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechDetectedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognitionEngine_SpeechDetected" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized">
      <topicdata group="api" />
      <apidata name="SpeechHypothesized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognitionEngine_SpeechHypothesized" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected">
      <topicdata group="api" />
      <apidata name="SpeechRecognitionRejected" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognitionEngine_SpeechRecognitionRejected" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized">
      <topicdata group="api" />
      <apidata name="SpeechRecognized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognitionEngine_SpeechRecognized" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.UnloadAllGrammars">
      <topicdata group="api" />
      <apidata name="UnloadAllGrammars" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_UnloadAllGrammars" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.UnloadGrammar(System.Speech.Recognition.Grammar)">
      <topicdata group="api" />
      <apidata name="UnloadGrammar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="grammar">
          <type api="T:System.Speech.Recognition.Grammar" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_UnloadGrammar_1_2af02a14" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="UpdateRecognizerSetting" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="settingName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="updatedValue">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_UpdateRecognizerSetting_2_01b939db" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateRecognizerSetting" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="settingName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="updatedValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognitionEngine_UpdateRecognizerSetting_2_52fce4af" />
    </api>
    <api id="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" />
      <apidata name="SpeechRecognitionRejectedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.RecognitionEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_SpeechRecognitionRejectedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs">
      <topicdata name="SpeechRecognitionRejectedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" />
      <apidata name="SpeechRecognitionRejectedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognitionEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SpeechRecognitionRejectedEventArgs" />
    </api>
    <api id="T:System.Speech.Recognition.SpeechRecognizedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognizedEventArgs" />
      <apidata name="SpeechRecognizedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.RecognitionEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_SpeechRecognizedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SpeechRecognizedEventArgs">
      <topicdata name="SpeechRecognizedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SpeechRecognizedEventArgs" />
      <apidata name="SpeechRecognizedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognitionEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SpeechRecognizedEventArgs" />
    </api>
    <api id="T:System.Speech.Recognition.SpeechRecognizer">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="SpeechRecognizer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_SpeechRecognizer" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SpeechRecognizer">
      <topicdata name="SpeechRecognizer" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="SpeechRecognizer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.#ctor" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.AudioFormat" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.AudioLevel" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.AudioLevelUpdated" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.AudioPosition" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.AudioSignalProblemOccurred" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.AudioState" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.AudioStateChanged" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognizer.Dispose">
          <element api="M:System.Speech.Recognition.SpeechRecognizer.Dispose" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize">
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String,System.Globalization.CompareOptions)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync">
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)" />
        </element>
        <element api="E:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeCompleted" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.Enabled" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.Grammars" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.LoadGrammar(System.Speech.Recognition.Grammar)" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.LoadGrammarAsync(System.Speech.Recognition.Grammar)" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.LoadGrammarCompleted" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.MaxAlternates" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.PauseRecognizerOnRecognition" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.RecognizerAudioPosition" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.RecognizerInfo" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.RecognizerUpdateReached" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate">
          <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object,System.TimeSpan)" />
        </element>
        <element api="E:System.Speech.Recognition.SpeechRecognizer.SpeechDetected" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.State" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.StateChanged" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.UnloadAllGrammars" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.UnloadGrammar(System.Speech.Recognition.Grammar)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SpeechRecognizer" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SpeechRecognizer">
      <topicdata name="SpeechRecognizer" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="SpeechRecognizer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognizer.Dispose">
          <element api="M:System.Speech.Recognition.SpeechRecognizer.Dispose" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize">
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String,System.Globalization.CompareOptions)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync">
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)" />
        </element>
        <element api="M:System.Speech.Recognition.SpeechRecognizer.LoadGrammar(System.Speech.Recognition.Grammar)" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.LoadGrammarAsync(System.Speech.Recognition.Grammar)" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate">
          <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object,System.TimeSpan)" />
        </element>
        <element api="M:System.Speech.Recognition.SpeechRecognizer.UnloadAllGrammars" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.UnloadGrammar(System.Speech.Recognition.Grammar)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_SpeechRecognizer" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SpeechRecognizer">
      <topicdata name="SpeechRecognizer" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="SpeechRecognizer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.SpeechRecognizer.AudioFormat" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.AudioLevel" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.AudioPosition" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.AudioState" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.Enabled" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.Grammars" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.MaxAlternates" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.PauseRecognizerOnRecognition" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.RecognizerAudioPosition" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.RecognizerInfo" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.State" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_SpeechRecognizer" />
    </api>
    <api id="Events.T:System.Speech.Recognition.SpeechRecognizer">
      <topicdata name="SpeechRecognizer" group="list" subgroup="Events" typeTopicId="T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="SpeechRecognizer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Speech.Recognition.SpeechRecognizer.AudioLevelUpdated" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.AudioSignalProblemOccurred" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.AudioStateChanged" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeCompleted" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.LoadGrammarCompleted" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.RecognizerUpdateReached" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.SpeechDetected" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.StateChanged" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Events_T_System_Speech_Recognition_SpeechRecognizer" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognizer.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognizer.Dispose" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SpeechRecognizer_Dispose" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize">
      <topicdata name="EmulateRecognize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="EmulateRecognize" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String)" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String,System.Globalization.CompareOptions)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SpeechRecognizer_EmulateRecognize" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync">
      <topicdata name="EmulateRecognizeAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="EmulateRecognizeAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String)" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SpeechRecognizer_EmulateRecognizeAsync" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate">
      <topicdata name="RequestRecognizerUpdate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="RequestRecognizerUpdate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object)" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SpeechRecognizer_RequestRecognizerUpdate" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SpeechRecognizer_ctor" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.AudioFormat">
      <topicdata group="api" />
      <apidata name="AudioFormat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognizer_AudioFormat" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.AudioLevel">
      <topicdata group="api" />
      <apidata name="AudioLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognizer_AudioLevel" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.AudioLevelUpdated">
      <topicdata group="api" />
      <apidata name="AudioLevelUpdated" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognizer_AudioLevelUpdated" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognizer_AudioPosition" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.AudioSignalProblemOccurred">
      <topicdata group="api" />
      <apidata name="AudioSignalProblemOccurred" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognizer_AudioSignalProblemOccurred" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.AudioState">
      <topicdata group="api" />
      <apidata name="AudioState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognizer_AudioState" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.AudioStateChanged">
      <topicdata group="api" />
      <apidata name="AudioStateChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.AudioStateChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.AudioStateChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognizer_AudioStateChanged" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognizer_Dispose" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Speech.Recognition.SpeechRecognizer.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognizer_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)">
      <topicdata group="api" />
      <apidata name="EmulateRecognize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="wordUnits">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="compareOptions">
          <type api="T:System.Globalization.CompareOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognizer_EmulateRecognize_2_8e8137df" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String)">
      <topicdata group="api" />
      <apidata name="EmulateRecognize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognizer_EmulateRecognize_1_72eac341" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String,System.Globalization.CompareOptions)">
      <topicdata group="api" />
      <apidata name="EmulateRecognize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="compareOptions">
          <type api="T:System.Globalization.CompareOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognizer_EmulateRecognize_2_2e795c0a" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)">
      <topicdata group="api" />
      <apidata name="EmulateRecognizeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="wordUnits">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="compareOptions">
          <type api="T:System.Globalization.CompareOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognizer_EmulateRecognizeAsync_2_8e8137df" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String)">
      <topicdata group="api" />
      <apidata name="EmulateRecognizeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognizer_EmulateRecognizeAsync_1_72eac341" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)">
      <topicdata group="api" />
      <apidata name="EmulateRecognizeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="compareOptions">
          <type api="T:System.Globalization.CompareOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognizer_EmulateRecognizeAsync_2_2e795c0a" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeCompleted">
      <topicdata group="api" />
      <apidata name="EmulateRecognizeCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognizer_EmulateRecognizeCompleted" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognizer_Enabled" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.Grammars">
      <topicdata group="api" />
      <apidata name="Grammars" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.Grammar" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognizer_Grammars" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.LoadGrammar(System.Speech.Recognition.Grammar)">
      <topicdata group="api" />
      <apidata name="LoadGrammar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="grammar">
          <type api="T:System.Speech.Recognition.Grammar" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognizer_LoadGrammar_1_2af02a14" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.LoadGrammarAsync(System.Speech.Recognition.Grammar)">
      <topicdata group="api" />
      <apidata name="LoadGrammarAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="grammar">
          <type api="T:System.Speech.Recognition.Grammar" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognizer_LoadGrammarAsync_1_2af02a14" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.LoadGrammarCompleted">
      <topicdata group="api" />
      <apidata name="LoadGrammarCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognizer_LoadGrammarCompleted" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.MaxAlternates">
      <topicdata group="api" />
      <apidata name="MaxAlternates" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognizer_MaxAlternates" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.PauseRecognizerOnRecognition">
      <topicdata group="api" />
      <apidata name="PauseRecognizerOnRecognition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognizer_PauseRecognizerOnRecognition" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.RecognizerAudioPosition">
      <topicdata group="api" />
      <apidata name="RecognizerAudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognizer_RecognizerAudioPosition" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.RecognizerInfo">
      <topicdata group="api" />
      <apidata name="RecognizerInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognizer_RecognizerInfo" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.RecognizerUpdateReached">
      <topicdata group="api" />
      <apidata name="RecognizerUpdateReached" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognizer_RecognizerUpdateReached" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate">
      <topicdata group="api" />
      <apidata name="RequestRecognizerUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognizer_RequestRecognizerUpdate" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object)">
      <topicdata group="api" />
      <apidata name="RequestRecognizerUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognizer_RequestRecognizerUpdate_1_2572741a" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="RequestRecognizerUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="audioPositionAheadToRaiseUpdate">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognizer_RequestRecognizerUpdate_2_ee1d7eed" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.SpeechDetected">
      <topicdata group="api" />
      <apidata name="SpeechDetected" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechDetectedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechDetectedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognizer_SpeechDetected" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized">
      <topicdata group="api" />
      <apidata name="SpeechHypothesized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognizer_SpeechHypothesized" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected">
      <topicdata group="api" />
      <apidata name="SpeechRecognitionRejected" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognizer_SpeechRecognitionRejected" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized">
      <topicdata group="api" />
      <apidata name="SpeechRecognized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognizer_SpeechRecognized" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizerState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SpeechRecognizer_State" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.StateChanged">
      <topicdata group="api" />
      <apidata name="StateChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.StateChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.StateChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Recognition_SpeechRecognizer_StateChanged" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.UnloadAllGrammars">
      <topicdata group="api" />
      <apidata name="UnloadAllGrammars" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognizer_UnloadAllGrammars" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.UnloadGrammar(System.Speech.Recognition.Grammar)">
      <topicdata group="api" />
      <apidata name="UnloadGrammar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="grammar">
          <type api="T:System.Speech.Recognition.Grammar" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechRecognizer_UnloadGrammar_1_2af02a14" />
    </api>
    <api id="T:System.Speech.Recognition.SpeechUI">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechUI" />
      <apidata name="SpeechUI" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_SpeechUI" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SpeechUI">
      <topicdata name="SpeechUI" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SpeechUI" />
      <apidata name="SpeechUI" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SpeechUI.SendTextFeedback(System.Speech.Recognition.RecognitionResult,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SpeechUI" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SpeechUI">
      <topicdata name="SpeechUI" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SpeechUI" />
      <apidata name="SpeechUI" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SpeechUI.SendTextFeedback(System.Speech.Recognition.RecognitionResult,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_SpeechUI" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechUI.SendTextFeedback(System.Speech.Recognition.RecognitionResult,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SendTextFeedback" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
        </parameter>
        <parameter name="feedback">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isSuccessfulAction">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechUI" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SpeechUI_SendTextFeedback_3_0a7a524b" />
    </api>
    <api id="T:System.Speech.Recognition.StateChangedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.StateChangedEventArgs" />
      <apidata name="StateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_StateChangedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.StateChangedEventArgs">
      <topicdata name="StateChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.StateChangedEventArgs" />
      <apidata name="StateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.StateChangedEventArgs.RecognizerState" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_StateChangedEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.StateChangedEventArgs">
      <topicdata name="StateChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.StateChangedEventArgs" />
      <apidata name="StateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.StateChangedEventArgs.RecognizerState" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_StateChangedEventArgs" />
    </api>
    <api id="P:System.Speech.Recognition.StateChangedEventArgs.RecognizerState">
      <topicdata group="api" />
      <apidata name="RecognizerState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizerState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.StateChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_StateChangedEventArgs_RecognizerState" />
    </api>
    <api id="T:System.Speech.Recognition.SubsetMatchingMode">
      <topicdata group="api" />
      <apidata name="SubsetMatchingMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Recognition.SubsetMatchingMode.Subsequence" />
        <element api="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubset" />
        <element api="F:System.Speech.Recognition.SubsetMatchingMode.SubsequenceContentRequired" />
        <element api="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubsetContentRequired" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="T_System_Speech_Recognition_SubsetMatchingMode" />
    </api>
    <api id="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubset">
      <topicdata group="api" notopic="" />
      <apidata name="OrderedSubset" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_SubsetMatchingMode_OrderedSubset" />
    </api>
    <api id="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubsetContentRequired">
      <topicdata group="api" notopic="" />
      <apidata name="OrderedSubsetContentRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_SubsetMatchingMode_OrderedSubsetContentRequired" />
    </api>
    <api id="F:System.Speech.Recognition.SubsetMatchingMode.Subsequence">
      <topicdata group="api" notopic="" />
      <apidata name="Subsequence" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_SubsetMatchingMode_Subsequence" />
    </api>
    <api id="F:System.Speech.Recognition.SubsetMatchingMode.SubsequenceContentRequired">
      <topicdata group="api" notopic="" />
      <apidata name="SubsequenceContentRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_SubsetMatchingMode_SubsequenceContentRequired" />
    </api>
    <api id="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
      <apidata name="SrgsDocument" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="T_System_Speech_Recognition_SrgsGrammar_SrgsDocument" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsDocument">
      <topicdata name="SrgsDocument" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
      <apidata name="SrgsDocument" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor">
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.String)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Xml.XmlReader)" />
        </element>
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs(System.Xml.XmlWriter)" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SrgsGrammar_SrgsDocument" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SrgsGrammar.SrgsDocument">
      <topicdata name="SrgsDocument" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
      <apidata name="SrgsDocument" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs(System.Xml.XmlWriter)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_SrgsGrammar_SrgsDocument" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SrgsGrammar.SrgsDocument">
      <topicdata name="SrgsDocument" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
      <apidata name="SrgsDocument" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_SrgsGrammar_SrgsDocument" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.GrammarBuilder)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.String)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsDocument_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsDocument_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsDocument_ctor_1_0fc4859d" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor" />
      <parameters>
        <parameter name="grammarRootRule">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsDocument_ctor_1_1a573ace" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsDocument_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor" />
      <parameters>
        <parameter name="srgsGrammar">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsDocument_ctor_1_11267429" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences">
      <topicdata group="api" />
      <apidata name="AssemblyReferences" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsDocument_AssemblyReferences" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind">
      <topicdata group="api" />
      <apidata name="CodeBehind" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsDocument_CodeBehind" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture">
      <topicdata group="api" />
      <apidata name="Culture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsDocument_Culture" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug">
      <topicdata group="api" />
      <apidata name="Debug" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsDocument_Debug" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces">
      <topicdata group="api" />
      <apidata name="ImportNamespaces" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsDocument_ImportNamespaces" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language">
      <topicdata group="api" />
      <apidata name="Language" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsDocument_Language" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsDocument_Mode" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsDocument_Namespace" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet">
      <topicdata group="api" />
      <apidata name="PhoneticAlphabet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsDocument_PhoneticAlphabet" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root">
      <topicdata group="api" />
      <apidata name="Root" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsDocument_Root" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules">
      <topicdata group="api" />
      <apidata name="Rules" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsDocument_Rules" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script">
      <topicdata group="api" />
      <apidata name="Script" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsDocument_Script" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteSrgs" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="srgsGrammar">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SrgsGrammar_SrgsDocument_WriteSrgs_1_6304620f" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase">
      <topicdata group="api" />
      <apidata name="XmlBase" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsDocument_XmlBase" />
    </api>
    <api id="T:System.Speech.Recognition.SrgsGrammar.SrgsElement">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsElement" />
      <apidata name="SrgsElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" ref="true" />
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" ref="true" />
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" ref="true" />
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" ref="true" />
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsText" ref="true" />
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="T_System_Speech_Recognition_SrgsGrammar_SrgsElement" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsElement">
      <topicdata name="SrgsElement" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" />
      <apidata name="SrgsElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsElement.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsElement.#ctor" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SrgsGrammar_SrgsElement" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsElement.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsElement" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsElement_MemberwiseClone" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsElement_ctor" />
    </api>
    <api id="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler" />
      <apidata name="SrgsGrammarCompiler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="T_System_Speech_Recognition_SrgsGrammar_SrgsGrammarCompiler" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler">
      <topicdata name="SrgsGrammarCompiler" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler" />
      <apidata name="SrgsGrammarCompiler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile">
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.IO.Stream)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.String,System.IO.Stream)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.Xml.XmlReader,System.IO.Stream)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary">
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.String[],System.String)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.String[],System.String,System.String[],System.String)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.Xml.XmlReader,System.String,System.String[],System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SrgsGrammar_SrgsGrammarCompiler" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler">
      <topicdata name="SrgsGrammarCompiler" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler" />
      <apidata name="SrgsGrammarCompiler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile">
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.IO.Stream)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.String,System.IO.Stream)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.Xml.XmlReader,System.IO.Stream)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary">
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.String[],System.String)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.String[],System.String,System.String[],System.String)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.Xml.XmlReader,System.String,System.String[],System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_SrgsGrammar_SrgsGrammarCompiler" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile">
      <topicdata name="Compile" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler" />
      <apidata name="Compile" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.IO.Stream)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.String,System.IO.Stream)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.Xml.XmlReader,System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsGrammarCompiler_Compile" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary">
      <topicdata name="CompileClassLibrary" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler" />
      <apidata name="CompileClassLibrary" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.String[],System.String)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.String[],System.String,System.String[],System.String)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.Xml.XmlReader,System.String,System.String[],System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsGrammarCompiler_CompileClassLibrary" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="Compile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="srgsGrammar">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
        </parameter>
        <parameter name="outputStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SrgsGrammar_SrgsGrammarCompiler_Compile_2_b6d6310e" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.String,System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="Compile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="outputStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SrgsGrammar_SrgsGrammarCompiler_Compile_2_384f2d3e" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.Xml.XmlReader,System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="Compile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="outputStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SrgsGrammar_SrgsGrammarCompiler_Compile_2_2785b15f" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.String[],System.String)">
      <topicdata group="api" />
      <apidata name="CompileClassLibrary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="srgsGrammar">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
        </parameter>
        <parameter name="outputPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="referencedAssemblies">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="keyFile">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SrgsGrammar_SrgsGrammarCompiler_CompileClassLibrary_4_2c103056" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.String[],System.String,System.String[],System.String)">
      <topicdata group="api" />
      <apidata name="CompileClassLibrary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputPaths">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="outputPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="referencedAssemblies">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="keyFile">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SrgsGrammar_SrgsGrammarCompiler_CompileClassLibrary_4_9fefcd2d" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.Xml.XmlReader,System.String,System.String[],System.String)">
      <topicdata group="api" />
      <apidata name="CompileClassLibrary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="outputPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="referencedAssemblies">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="keyFile">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SrgsGrammar_SrgsGrammarCompiler_CompileClassLibrary_4_b2b6d710" />
    </api>
    <api id="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode">
      <topicdata group="api" />
      <apidata name="SrgsGrammarMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode.Voice" />
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode.Dtmf" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="T_System_Speech_Recognition_SrgsGrammar_SrgsGrammarMode" />
    </api>
    <api id="F:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode.Dtmf">
      <topicdata group="api" notopic="" />
      <apidata name="Dtmf" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_SrgsGrammar_SrgsGrammarMode_Dtmf" />
    </api>
    <api id="F:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode.Voice">
      <topicdata group="api" notopic="" />
      <apidata name="Voice" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_SrgsGrammar_SrgsGrammarMode_Voice" />
    </api>
    <api id="T:System.Speech.Recognition.SrgsGrammar.SrgsItem">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsItem" />
      <apidata name="SrgsItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="T_System_Speech_Recognition_SrgsGrammar_SrgsItem" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsItem">
      <topicdata name="SrgsItem" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" />
      <apidata name="SrgsItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor">
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsElement[])" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.String)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32,System.Int32)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32,System.Int32,System.Speech.Recognition.SrgsGrammar.SrgsElement[])" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32,System.Int32,System.String)" />
        </element>
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.Elements" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.MaxRepeat" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.MinRepeat" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.RepeatProbability" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat">
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat(System.Int32)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat(System.Int32,System.Int32)" />
        </element>
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.Weight" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SrgsGrammar_SrgsItem" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SrgsGrammar.SrgsItem">
      <topicdata name="SrgsItem" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" />
      <apidata name="SrgsItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat">
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat(System.Int32)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat(System.Int32,System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_SrgsGrammar_SrgsItem" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SrgsGrammar.SrgsItem">
      <topicdata name="SrgsItem" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" />
      <apidata name="SrgsItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.Elements" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.MaxRepeat" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.MinRepeat" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.RepeatProbability" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.Weight" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_SrgsGrammar_SrgsItem" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsItem" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsItem_MemberwiseClone" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsItem" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsElement[])" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.String)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32,System.Int32)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32,System.Int32,System.Speech.Recognition.SrgsGrammar.SrgsElement[])" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsItem_ctor" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat">
      <topicdata name="SetRepeat" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsItem" />
      <apidata name="SetRepeat" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat(System.Int32)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat(System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsItem_SetRepeat" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsItem_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor" />
      <parameters>
        <parameter name="repeatCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsItem_ctor_1_f9cace8a" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor" />
      <parameters>
        <parameter name="min">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="max">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsItem_ctor_2_9118f966" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32,System.Int32,System.Speech.Recognition.SrgsGrammar.SrgsElement[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor" />
      <parameters>
        <parameter name="min">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="max">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="elements">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsItem_ctor_3_cf78226a" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor" />
      <parameters>
        <parameter name="min">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="max">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsItem_ctor_3_5986bc55" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsElement[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor" />
      <parameters>
        <parameter name="elements">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsItem_ctor_1_899146b4" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsItem_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SrgsGrammar_SrgsItem_Add_1_12d9b2b0" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.Elements">
      <topicdata group="api" />
      <apidata name="Elements" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsItem_Elements" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.MaxRepeat">
      <topicdata group="api" />
      <apidata name="MaxRepeat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsItem_MaxRepeat" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.MinRepeat">
      <topicdata group="api" />
      <apidata name="MinRepeat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsItem_MinRepeat" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.RepeatProbability">
      <topicdata group="api" />
      <apidata name="RepeatProbability" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsItem_RepeatProbability" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat(System.Int32)">
      <topicdata group="api" />
      <apidata name="SetRepeat" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SrgsGrammar_SrgsItem_SetRepeat_1_cd2d7ec9" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="SetRepeat" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="minRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SrgsGrammar_SrgsItem_SetRepeat_2_4ac95b2b" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.Weight">
      <topicdata group="api" />
      <apidata name="Weight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsItem_Weight" />
    </api>
    <api id="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" />
      <apidata name="SrgsNameValueTag" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="T_System_Speech_Recognition_SrgsGrammar_SrgsNameValueTag" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag">
      <topicdata name="SrgsNameValueTag" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" />
      <apidata name="SrgsNameValueTag" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor">
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor(System.Object)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor(System.String,System.Object)" />
        </element>
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Name" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SrgsGrammar_SrgsNameValueTag" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag">
      <topicdata name="SrgsNameValueTag" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" />
      <apidata name="SrgsNameValueTag" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Name" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_SrgsGrammar_SrgsNameValueTag" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsNameValueTag_MemberwiseClone" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor(System.Object)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsNameValueTag_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsNameValueTag_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsNameValueTag_ctor_1_286e8133" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsNameValueTag_ctor_2_89845c1b" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsNameValueTag_Name" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsNameValueTag_Value" />
    </api>
    <api id="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" />
      <apidata name="SrgsOneOf" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="T_System_Speech_Recognition_SrgsGrammar_SrgsOneOf" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf">
      <topicdata name="SrgsOneOf" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" />
      <apidata name="SrgsOneOf" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor">
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsItem[])" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.String[])" />
        </element>
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Add(System.Speech.Recognition.SrgsGrammar.SrgsItem)" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SrgsGrammar_SrgsOneOf" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf">
      <topicdata name="SrgsOneOf" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" />
      <apidata name="SrgsOneOf" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Add(System.Speech.Recognition.SrgsGrammar.SrgsItem)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_SrgsGrammar_SrgsOneOf" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf">
      <topicdata name="SrgsOneOf" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" />
      <apidata name="SrgsOneOf" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_SrgsGrammar_SrgsOneOf" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsOneOf_MemberwiseClone" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsItem[])" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsOneOf_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsOneOf_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsItem[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor" />
      <parameters>
        <parameter name="items">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsOneOf_ctor_1_27f81e56" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor" />
      <parameters>
        <parameter name="items">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsOneOf_ctor_1_f84e6fb6" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Add(System.Speech.Recognition.SrgsGrammar.SrgsItem)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SrgsGrammar_SrgsOneOf_Add_1_b6e9c7dd" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items">
      <topicdata group="api" />
      <apidata name="Items" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsOneOf_Items" />
    </api>
    <api id="T:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet">
      <topicdata group="api" />
      <apidata name="SrgsPhoneticAlphabet" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet.Sapi" />
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet.Ipa" />
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet.Ups" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="T_System_Speech_Recognition_SrgsGrammar_SrgsPhoneticAlphabet" />
    </api>
    <api id="F:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet.Ipa">
      <topicdata group="api" notopic="" />
      <apidata name="Ipa" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_SrgsGrammar_SrgsPhoneticAlphabet_Ipa" />
    </api>
    <api id="F:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet.Sapi">
      <topicdata group="api" notopic="" />
      <apidata name="Sapi" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_SrgsGrammar_SrgsPhoneticAlphabet_Sapi" />
    </api>
    <api id="F:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet.Ups">
      <topicdata group="api" notopic="" />
      <apidata name="Ups" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_SrgsGrammar_SrgsPhoneticAlphabet_Ups" />
    </api>
    <api id="T:System.Speech.Recognition.SrgsGrammar.SrgsRule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />
      <apidata name="SrgsRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="T_System_Speech_Recognition_SrgsGrammar_SrgsRule" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsRule">
      <topicdata name="SrgsRule" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />
      <apidata name="SrgsRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor">
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])" />
        </element>
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Script" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SrgsGrammar_SrgsRule" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SrgsGrammar.SrgsRule">
      <topicdata name="SrgsRule" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />
      <apidata name="SrgsRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_SrgsGrammar_SrgsRule" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SrgsGrammar.SrgsRule">
      <topicdata name="SrgsRule" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />
      <apidata name="SrgsRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Script" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_SrgsGrammar_SrgsRule" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsRule_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsRule_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="elements">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsRule_ctor_2_920450f4" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SrgsGrammar_SrgsRule_Add_1_12d9b2b0" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass">
      <topicdata group="api" />
      <apidata name="BaseClass" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsRule_BaseClass" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements">
      <topicdata group="api" />
      <apidata name="Elements" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsRule_Elements" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsRule_Id" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError">
      <topicdata group="api" />
      <apidata name="OnError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsRule_OnError" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit">
      <topicdata group="api" />
      <apidata name="OnInit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsRule_OnInit" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse">
      <topicdata group="api" />
      <apidata name="OnParse" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsRule_OnParse" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition">
      <topicdata group="api" />
      <apidata name="OnRecognition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsRule_OnRecognition" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope">
      <topicdata group="api" />
      <apidata name="Scope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsRule_Scope" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Script">
      <topicdata group="api" />
      <apidata name="Script" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsRule_Script" />
    </api>
    <api id="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />
      <apidata name="SrgsRuleRef" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="T_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef">
      <topicdata name="SrgsRuleRef" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />
      <apidata name="SrgsRuleRef" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor">
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String,System.String)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String,System.String)" />
        </element>
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Dictation" />
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Garbage" />
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.MnemonicSpelling" />
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Null" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Params" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SemanticKey" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Uri" />
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Void" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef">
      <topicdata name="SrgsRuleRef" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />
      <apidata name="SrgsRuleRef" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Params" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SemanticKey" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Uri" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef" />
    </api>
    <api id="Fields.T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef">
      <topicdata name="SrgsRuleRef" group="list" subgroup="Fields" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />
      <apidata name="SrgsRuleRef" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Dictation" />
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Garbage" />
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.MnemonicSpelling" />
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Null" />
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Void" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Fields_T_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_MemberwiseClone" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String,System.String)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_ctor_1_1a573ace" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
        </parameter>
        <parameter name="semanticKey">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_ctor_2_e65750b5" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
        </parameter>
        <parameter name="semanticKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_ctor_3_1a448ddc" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_ctor_1_c40c5aea" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="rule">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_ctor_2_6885a4a6" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="rule">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="semanticKey">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_ctor_3_6b74c163" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="rule">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="semanticKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_ctor_4_c2257b80" />
    </api>
    <api id="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Dictation">
      <topicdata group="api" />
      <apidata name="Dictation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </containers>
      <file name="F_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_Dictation" />
    </api>
    <api id="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Garbage">
      <topicdata group="api" />
      <apidata name="Garbage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </containers>
      <file name="F_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_Garbage" />
    </api>
    <api id="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.MnemonicSpelling">
      <topicdata group="api" />
      <apidata name="MnemonicSpelling" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </containers>
      <file name="F_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_MnemonicSpelling" />
    </api>
    <api id="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Null">
      <topicdata group="api" />
      <apidata name="Null" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </containers>
      <file name="F_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_Null" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Params">
      <topicdata group="api" />
      <apidata name="Params" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_Params" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SemanticKey">
      <topicdata group="api" />
      <apidata name="SemanticKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_SemanticKey" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Uri">
      <topicdata group="api" />
      <apidata name="Uri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_Uri" />
    </api>
    <api id="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Void">
      <topicdata group="api" />
      <apidata name="Void" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" ref="true" />
      </containers>
      <file name="F_System_Speech_Recognition_SrgsGrammar_SrgsRuleRef_Void" />
    </api>
    <api id="T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" />
      <apidata name="SrgsRulesCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.KeyedCollection`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="T_System_Speech_Recognition_SrgsGrammar_SrgsRulesCollection" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection">
      <topicdata name="SrgsRulesCollection" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" />
      <apidata name="SrgsRulesCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add">
          <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add(System.Speech.Recognition.SrgsGrammar.SrgsRule[])" />
        </element>
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element signatureset="" api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Item">
          <element api="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
          <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        </element>
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element signatureset="" api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{`0}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
        <element api="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer" />
        <element api="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.#ctor" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SrgsGrammar_SrgsRulesCollection" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection">
      <topicdata name="SrgsRulesCollection" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" />
      <apidata name="SrgsRulesCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add">
          <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add(System.Speech.Recognition.SrgsGrammar.SrgsRule[])" />
        </element>
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element signatureset="" api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element signatureset="" api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Methods_T_System_Speech_Recognition_SrgsGrammar_SrgsRulesCollection" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add(System.Speech.Recognition.SrgsGrammar.SrgsRule[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsRulesCollection_Add" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" allInherited="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsRulesCollection_Item" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsRulesCollection_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add(System.Speech.Recognition.SrgsGrammar.SrgsRule[])">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rules">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" ref="true" />
      </containers>
      <file name="M_System_Speech_Recognition_SrgsGrammar_SrgsRulesCollection_Add_1_6e87e068" />
    </api>
    <api id="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope">
      <topicdata group="api" />
      <apidata name="SrgsRuleScope" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope.Public" />
        <element api="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope.Private" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="T_System_Speech_Recognition_SrgsGrammar_SrgsRuleScope" />
    </api>
    <api id="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope.Private">
      <topicdata group="api" notopic="" />
      <apidata name="Private" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_SrgsGrammar_SrgsRuleScope_Private" />
    </api>
    <api id="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope.Public">
      <topicdata group="api" notopic="" />
      <apidata name="Public" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope" ref="false" />
      </containers>
      <file name="F_System_Speech_Recognition_SrgsGrammar_SrgsRuleScope_Public" />
    </api>
    <api id="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" />
      <apidata name="SrgsSemanticInterpretationTag" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="T_System_Speech_Recognition_SrgsGrammar_SrgsSemanticInterpretationTag" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag">
      <topicdata name="SrgsSemanticInterpretationTag" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" />
      <apidata name="SrgsSemanticInterpretationTag" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor">
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor(System.String)" />
        </element>
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SrgsGrammar_SrgsSemanticInterpretationTag" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag">
      <topicdata name="SrgsSemanticInterpretationTag" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" />
      <apidata name="SrgsSemanticInterpretationTag" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_SrgsGrammar_SrgsSemanticInterpretationTag" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsSemanticInterpretationTag_MemberwiseClone" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsSemanticInterpretationTag_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsSemanticInterpretationTag_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor" />
      <parameters>
        <parameter name="script">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsSemanticInterpretationTag_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script">
      <topicdata group="api" />
      <apidata name="Script" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsSemanticInterpretationTag_Script" />
    </api>
    <api id="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" />
      <apidata name="SrgsSubset" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="T_System_Speech_Recognition_SrgsGrammar_SrgsSubset" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsSubset">
      <topicdata name="SrgsSubset" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" />
      <apidata name="SrgsSubset" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsSubset.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsSubset.#ctor">
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsSubset.#ctor(System.String)" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsSubset.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
        </element>
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsSubset.MatchingMode" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsSubset.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SrgsGrammar_SrgsSubset" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SrgsGrammar.SrgsSubset">
      <topicdata name="SrgsSubset" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" />
      <apidata name="SrgsSubset" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsSubset.MatchingMode" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsSubset.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_SrgsGrammar_SrgsSubset" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsSubset.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsSubset_MemberwiseClone" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsSubset.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsSubset.#ctor(System.String)" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsSubset.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsSubset_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsSubset.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsSubset.#ctor" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsSubset_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsSubset.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsSubset.#ctor" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="matchingMode">
          <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsSubset_ctor_2_3236082e" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsSubset.MatchingMode">
      <topicdata group="api" />
      <apidata name="MatchingMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsSubset_MatchingMode" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsSubset.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsSubset_Text" />
    </api>
    <api id="T:System.Speech.Recognition.SrgsGrammar.SrgsText">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsText" />
      <apidata name="SrgsText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="T_System_Speech_Recognition_SrgsGrammar_SrgsText" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsText">
      <topicdata name="SrgsText" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsText" />
      <apidata name="SrgsText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsText.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsText.#ctor">
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsText.#ctor" />
          <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsText.#ctor(System.String)" />
        </element>
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsText.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SrgsGrammar_SrgsText" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SrgsGrammar.SrgsText">
      <topicdata name="SrgsText" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsText" />
      <apidata name="SrgsText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsText.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_SrgsGrammar_SrgsText" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsText.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsText" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsText" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsText_MemberwiseClone" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsText.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsText" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsText.#ctor" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsText.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsText" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsText_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsText.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsText.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsText" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsText_ctor" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsText.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SrgsGrammar.SrgsText.#ctor" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsText" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsText_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsText.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsText" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsText_Text" />
    </api>
    <api id="T:System.Speech.Recognition.SrgsGrammar.SrgsToken">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />
      <apidata name="SrgsToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="T_System_Speech_Recognition_SrgsGrammar_SrgsToken" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsToken">
      <topicdata name="SrgsToken" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />
      <apidata name="SrgsToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Speech.Recognition.SrgsGrammar.SrgsToken.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="AllMembers_T_System_Speech_Recognition_SrgsGrammar_SrgsToken" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SrgsGrammar.SrgsToken">
      <topicdata name="SrgsToken" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />
      <apidata name="SrgsToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" />
        <element api="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
      </containers>
      <file name="Properties_T_System_Speech_Recognition_SrgsGrammar_SrgsToken" />
    </api>
    <api id="Overload:System.Speech.Recognition.SrgsGrammar.SrgsToken.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SrgsGrammar.SrgsToken" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />
      </containers>
      <file name="O_T_System_Speech_Recognition_SrgsGrammar_SrgsToken_MemberwiseClone" />
    </api>
    <api id="M:System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" ref="true" />
      </containers>
      <file name="C_System_Speech_Recognition_SrgsGrammar_SrgsToken_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display">
      <topicdata group="api" />
      <apidata name="Display" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsToken_Display" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation">
      <topicdata group="api" />
      <apidata name="Pronunciation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsToken_Pronunciation" />
    </api>
    <api id="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition.SrgsGrammar" />
        <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" ref="true" />
      </containers>
      <file name="P_System_Speech_Recognition_SrgsGrammar_SrgsToken_Text" />
    </api>
    <api id="T:System.Speech.Synthesis.BookmarkReachedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.BookmarkReachedEventArgs" />
      <apidata name="BookmarkReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_BookmarkReachedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.BookmarkReachedEventArgs">
      <topicdata name="BookmarkReachedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.BookmarkReachedEventArgs" />
      <apidata name="BookmarkReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.BookmarkReachedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Synthesis.BookmarkReachedEventArgs.Bookmark" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_BookmarkReachedEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.BookmarkReachedEventArgs">
      <topicdata name="BookmarkReachedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.BookmarkReachedEventArgs" />
      <apidata name="BookmarkReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.BookmarkReachedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Synthesis.BookmarkReachedEventArgs.Bookmark" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_BookmarkReachedEventArgs" />
    </api>
    <api id="P:System.Speech.Synthesis.BookmarkReachedEventArgs.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.BookmarkReachedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_BookmarkReachedEventArgs_AudioPosition" />
    </api>
    <api id="P:System.Speech.Synthesis.BookmarkReachedEventArgs.Bookmark">
      <topicdata group="api" />
      <apidata name="Bookmark" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.BookmarkReachedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_BookmarkReachedEventArgs_Bookmark" />
    </api>
    <api id="T:System.Speech.Synthesis.FilePrompt">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.FilePrompt" />
      <apidata name="FilePrompt" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_FilePrompt" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.FilePrompt">
      <topicdata name="FilePrompt" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.FilePrompt" />
      <apidata name="FilePrompt" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Synthesis.FilePrompt.#ctor">
          <element api="M:System.Speech.Synthesis.FilePrompt.#ctor(System.String,System.Speech.Synthesis.SynthesisMediaType)" />
          <element api="M:System.Speech.Synthesis.FilePrompt.#ctor(System.Uri,System.Speech.Synthesis.SynthesisMediaType)" />
        </element>
        <element api="P:System.Speech.Synthesis.Prompt.IsCompleted" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_FilePrompt" />
    </api>
    <api id="Overload:System.Speech.Synthesis.FilePrompt.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.FilePrompt" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Synthesis.FilePrompt.#ctor(System.String,System.Speech.Synthesis.SynthesisMediaType)" />
        <element api="M:System.Speech.Synthesis.FilePrompt.#ctor(System.Uri,System.Speech.Synthesis.SynthesisMediaType)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.FilePrompt" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_FilePrompt_ctor" />
    </api>
    <api id="M:System.Speech.Synthesis.FilePrompt.#ctor(System.String,System.Speech.Synthesis.SynthesisMediaType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.FilePrompt.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="media">
          <type api="T:System.Speech.Synthesis.SynthesisMediaType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.FilePrompt" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_FilePrompt_ctor_2_4da89daa" />
    </api>
    <api id="M:System.Speech.Synthesis.FilePrompt.#ctor(System.Uri,System.Speech.Synthesis.SynthesisMediaType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.FilePrompt.#ctor" />
      <parameters>
        <parameter name="promptFile">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="media">
          <type api="T:System.Speech.Synthesis.SynthesisMediaType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.FilePrompt" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_FilePrompt_ctor_2_97f1dac4" />
    </api>
    <api id="T:System.Speech.Synthesis.InstalledVoice">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.InstalledVoice" />
      <apidata name="InstalledVoice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_InstalledVoice" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.InstalledVoice">
      <topicdata name="InstalledVoice" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.InstalledVoice" />
      <apidata name="InstalledVoice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Synthesis.InstalledVoice.Enabled" />
        <element api="M:System.Speech.Synthesis.InstalledVoice.Equals(System.Object)" />
        <element api="M:System.Speech.Synthesis.InstalledVoice.GetHashCode" />
        <element api="P:System.Speech.Synthesis.InstalledVoice.VoiceInfo" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_InstalledVoice" />
    </api>
    <api id="Methods.T:System.Speech.Synthesis.InstalledVoice">
      <topicdata name="InstalledVoice" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.InstalledVoice" />
      <apidata name="InstalledVoice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.InstalledVoice.Equals(System.Object)" />
        <element api="M:System.Speech.Synthesis.InstalledVoice.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Methods_T_System_Speech_Synthesis_InstalledVoice" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.InstalledVoice">
      <topicdata name="InstalledVoice" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.InstalledVoice" />
      <apidata name="InstalledVoice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.InstalledVoice.Enabled" />
        <element api="P:System.Speech.Synthesis.InstalledVoice.VoiceInfo" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_InstalledVoice" />
    </api>
    <api id="P:System.Speech.Synthesis.InstalledVoice.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.InstalledVoice" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_InstalledVoice_Enabled" />
    </api>
    <api id="M:System.Speech.Synthesis.InstalledVoice.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.InstalledVoice" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_InstalledVoice_Equals_1_2572741a" />
    </api>
    <api id="M:System.Speech.Synthesis.InstalledVoice.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.InstalledVoice" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_InstalledVoice_GetHashCode" />
    </api>
    <api id="P:System.Speech.Synthesis.InstalledVoice.VoiceInfo">
      <topicdata group="api" />
      <apidata name="VoiceInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.InstalledVoice" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_InstalledVoice_VoiceInfo" />
    </api>
    <api id="T:System.Speech.Synthesis.PhonemeReachedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.PhonemeReachedEventArgs" />
      <apidata name="PhonemeReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_PhonemeReachedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.PhonemeReachedEventArgs">
      <topicdata name="PhonemeReachedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.PhonemeReachedEventArgs" />
      <apidata name="PhonemeReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Duration" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Emphasis" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.NextPhoneme" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Phoneme" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_PhonemeReachedEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.PhonemeReachedEventArgs">
      <topicdata name="PhonemeReachedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.PhonemeReachedEventArgs" />
      <apidata name="PhonemeReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Duration" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Emphasis" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.NextPhoneme" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Phoneme" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_PhonemeReachedEventArgs" />
    </api>
    <api id="P:System.Speech.Synthesis.PhonemeReachedEventArgs.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_PhonemeReachedEventArgs_AudioPosition" />
    </api>
    <api id="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Duration">
      <topicdata group="api" />
      <apidata name="Duration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_PhonemeReachedEventArgs_Duration" />
    </api>
    <api id="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Emphasis">
      <topicdata group="api" />
      <apidata name="Emphasis" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerEmphasis" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_PhonemeReachedEventArgs_Emphasis" />
    </api>
    <api id="P:System.Speech.Synthesis.PhonemeReachedEventArgs.NextPhoneme">
      <topicdata group="api" />
      <apidata name="NextPhoneme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_PhonemeReachedEventArgs_NextPhoneme" />
    </api>
    <api id="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Phoneme">
      <topicdata group="api" />
      <apidata name="Phoneme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_PhonemeReachedEventArgs_Phoneme" />
    </api>
    <api id="T:System.Speech.Synthesis.Prompt">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.Prompt" />
      <apidata name="Prompt" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Speech.Synthesis.FilePrompt" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_Prompt" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.Prompt">
      <topicdata name="Prompt" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.Prompt" />
      <apidata name="Prompt" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Synthesis.Prompt.#ctor">
          <element api="M:System.Speech.Synthesis.Prompt.#ctor(System.Speech.Synthesis.PromptBuilder)" />
          <element api="M:System.Speech.Synthesis.Prompt.#ctor(System.String)" />
          <element api="M:System.Speech.Synthesis.Prompt.#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)" />
        </element>
        <element api="P:System.Speech.Synthesis.Prompt.IsCompleted" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_Prompt" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.Prompt">
      <topicdata name="Prompt" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.Prompt" />
      <apidata name="Prompt" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.Prompt.IsCompleted" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_Prompt" />
    </api>
    <api id="Overload:System.Speech.Synthesis.Prompt.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.Prompt" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Synthesis.Prompt.#ctor(System.Speech.Synthesis.PromptBuilder)" />
        <element api="M:System.Speech.Synthesis.Prompt.#ctor(System.String)" />
        <element api="M:System.Speech.Synthesis.Prompt.#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_Prompt_ctor" />
    </api>
    <api id="M:System.Speech.Synthesis.Prompt.#ctor(System.Speech.Synthesis.PromptBuilder)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.Prompt.#ctor" />
      <parameters>
        <parameter name="promptBuilder">
          <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_Prompt_ctor_1_7308c5c8" />
    </api>
    <api id="M:System.Speech.Synthesis.Prompt.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.Prompt.#ctor" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_Prompt_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Speech.Synthesis.Prompt.#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.Prompt.#ctor" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="media">
          <type api="T:System.Speech.Synthesis.SynthesisTextFormat" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_Prompt_ctor_2_8a3c0334" />
    </api>
    <api id="P:System.Speech.Synthesis.Prompt.IsCompleted">
      <topicdata group="api" />
      <apidata name="IsCompleted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_Prompt_IsCompleted" />
    </api>
    <api id="T:System.Speech.Synthesis.PromptBreak">
      <topicdata group="api" />
      <apidata name="PromptBreak" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.PromptBreak.None" />
        <element api="F:System.Speech.Synthesis.PromptBreak.ExtraSmall" />
        <element api="F:System.Speech.Synthesis.PromptBreak.Small" />
        <element api="F:System.Speech.Synthesis.PromptBreak.Medium" />
        <element api="F:System.Speech.Synthesis.PromptBreak.Large" />
        <element api="F:System.Speech.Synthesis.PromptBreak.ExtraLarge" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_PromptBreak" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptBreak.ExtraLarge">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraLarge" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptBreak_ExtraLarge" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptBreak.ExtraSmall">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraSmall" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptBreak_ExtraSmall" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptBreak.Large">
      <topicdata group="api" notopic="" />
      <apidata name="Large" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptBreak_Large" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptBreak.Medium">
      <topicdata group="api" notopic="" />
      <apidata name="Medium" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptBreak_Medium" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptBreak.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptBreak_None" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptBreak.Small">
      <topicdata group="api" notopic="" />
      <apidata name="Small" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptBreak_Small" />
    </api>
    <api id="T:System.Speech.Synthesis.PromptBuilder">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.PromptBuilder" />
      <apidata name="PromptBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_PromptBuilder" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.PromptBuilder">
      <topicdata name="PromptBuilder" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.PromptBuilder" />
      <apidata name="PromptBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.#ctor">
          <element api="M:System.Speech.Synthesis.PromptBuilder.#ctor" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.#ctor(System.Globalization.CultureInfo)" />
        </element>
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendAudio">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.String)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri,System.String)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBookmark(System.String)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendBreak">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.Speech.Synthesis.PromptBreak)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.TimeSpan)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendPromptBuilder(System.Speech.Synthesis.PromptBuilder)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendSsml">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.String)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Uri)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup(System.String)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendText">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptEmphasis)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptRate)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptVolume)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias(System.String,System.String)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.Speech.Synthesis.SayAs)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.String)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation(System.String,System.String)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.ClearContent" />
        <element api="P:System.Speech.Synthesis.PromptBuilder.Culture" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.EndParagraph" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.EndSentence" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.EndStyle" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.EndVoice" />
        <element api="P:System.Speech.Synthesis.PromptBuilder.IsEmpty" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.StartParagraph">
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartParagraph" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartParagraph(System.Globalization.CultureInfo)" />
        </element>
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.StartSentence">
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartSentence" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartSentence(System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartStyle(System.Speech.Synthesis.PromptStyle)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice">
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Globalization.CultureInfo)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.String)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceInfo)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.ToXml" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_PromptBuilder" />
    </api>
    <api id="Methods.T:System.Speech.Synthesis.PromptBuilder">
      <topicdata name="PromptBuilder" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.PromptBuilder" />
      <apidata name="PromptBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendAudio">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.String)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri,System.String)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBookmark(System.String)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendBreak">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.Speech.Synthesis.PromptBreak)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.TimeSpan)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendPromptBuilder(System.Speech.Synthesis.PromptBuilder)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendSsml">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.String)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Uri)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup(System.String)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendText">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptEmphasis)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptRate)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptVolume)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias(System.String,System.String)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.Speech.Synthesis.SayAs)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.String)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation(System.String,System.String)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.ClearContent" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.EndParagraph" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.EndSentence" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.EndStyle" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.EndVoice" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.StartParagraph">
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartParagraph" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartParagraph(System.Globalization.CultureInfo)" />
        </element>
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.StartSentence">
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartSentence" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartSentence(System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartStyle(System.Speech.Synthesis.PromptStyle)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice">
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Globalization.CultureInfo)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.String)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceInfo)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.ToXml" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Methods_T_System_Speech_Synthesis_PromptBuilder" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.PromptBuilder">
      <topicdata name="PromptBuilder" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.PromptBuilder" />
      <apidata name="PromptBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.PromptBuilder.Culture" />
        <element api="P:System.Speech.Synthesis.PromptBuilder.IsEmpty" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_PromptBuilder" />
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.PromptBuilder" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.#ctor" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.#ctor(System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_PromptBuilder_ctor" />
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.AppendAudio">
      <topicdata name="AppendAudio" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.PromptBuilder" />
      <apidata name="AppendAudio" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.String)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_PromptBuilder_AppendAudio" />
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.AppendBreak">
      <topicdata name="AppendBreak" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.PromptBuilder" />
      <apidata name="AppendBreak" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.Speech.Synthesis.PromptBreak)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_PromptBuilder_AppendBreak" />
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.AppendSsml">
      <topicdata name="AppendSsml" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.PromptBuilder" />
      <apidata name="AppendSsml" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.String)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Uri)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_PromptBuilder_AppendSsml" />
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.AppendText">
      <topicdata name="AppendText" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.PromptBuilder" />
      <apidata name="AppendText" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptEmphasis)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptRate)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptVolume)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_PromptBuilder_AppendText" />
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint">
      <topicdata name="AppendTextWithHint" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.PromptBuilder" />
      <apidata name="AppendTextWithHint" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.Speech.Synthesis.SayAs)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_PromptBuilder_AppendTextWithHint" />
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.StartParagraph">
      <topicdata name="StartParagraph" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.PromptBuilder" />
      <apidata name="StartParagraph" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartParagraph" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartParagraph(System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_PromptBuilder_StartParagraph" />
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.StartSentence">
      <topicdata name="StartSentence" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.PromptBuilder" />
      <apidata name="StartSentence" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartSentence" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartSentence(System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_PromptBuilder_StartSentence" />
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice">
      <topicdata name="StartVoice" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.PromptBuilder" />
      <apidata name="StartVoice" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Globalization.CultureInfo)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.String)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceInfo)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_PromptBuilder_StartVoice" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.PromptBuilder.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_PromptBuilder_ctor" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.#ctor(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.PromptBuilder.#ctor" />
      <parameters>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_PromptBuilder_ctor_1_a256a1c3" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.String)">
      <topicdata group="api" />
      <apidata name="AppendAudio" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendAudio" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendAudio_1_72eac341" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri)">
      <topicdata group="api" />
      <apidata name="AppendAudio" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendAudio" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="audioFile">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendAudio_1_c8269730" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="AppendAudio" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendAudio" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="audioFile">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="alternateText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendAudio_2_d5663b1c" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendBookmark(System.String)">
      <topicdata group="api" />
      <apidata name="AppendBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bookmarkName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendBookmark_1_72eac341" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendBreak">
      <topicdata group="api" />
      <apidata name="AppendBreak" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendBreak" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.Speech.Synthesis.PromptBreak)">
      <topicdata group="api" />
      <apidata name="AppendBreak" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="strength">
          <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendBreak_1_4ec4e815" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="AppendBreak" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="duration">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendBreak_1_dd1f561a" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendPromptBuilder(System.Speech.Synthesis.PromptBuilder)">
      <topicdata group="api" />
      <apidata name="AppendPromptBuilder" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="promptBuilder">
          <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendPromptBuilder_1_29bf1b2f" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.String)">
      <topicdata group="api" />
      <apidata name="AppendSsml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendSsml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendSsml_1_72eac341" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Uri)">
      <topicdata group="api" />
      <apidata name="AppendSsml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendSsml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ssmlFile">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendSsml_1_c8269730" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="AppendSsml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendSsml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ssmlFile">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendSsml_1_3282adce" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup(System.String)">
      <topicdata group="api" />
      <apidata name="AppendSsmlMarkup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ssmlMarkup">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendSsmlMarkup_1_72eac341" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String)">
      <topicdata group="api" />
      <apidata name="AppendText" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendText" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendText_1_72eac341" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptEmphasis)">
      <topicdata group="api" />
      <apidata name="AppendText" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendText" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="emphasis">
          <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendText_2_418e13d4" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptRate)">
      <topicdata group="api" />
      <apidata name="AppendText" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendText" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rate">
          <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendText_2_46f5db6b" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptVolume)">
      <topicdata group="api" />
      <apidata name="AppendText" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendText" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="volume">
          <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendText_2_8ee8044d" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AppendTextWithAlias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="substitute">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendTextWithAlias_2_52fce4af" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.Speech.Synthesis.SayAs)">
      <topicdata group="api" />
      <apidata name="AppendTextWithHint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sayAs">
          <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendTextWithHint_2_3269e6ba" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AppendTextWithHint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sayAs">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendTextWithHint_2_52fce4af" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AppendTextWithPronunciation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pronunciation">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_AppendTextWithPronunciation_2_52fce4af" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.ClearContent">
      <topicdata group="api" />
      <apidata name="ClearContent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_ClearContent" />
    </api>
    <api id="P:System.Speech.Synthesis.PromptBuilder.Culture">
      <topicdata group="api" />
      <apidata name="Culture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_PromptBuilder_Culture" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.EndParagraph">
      <topicdata group="api" />
      <apidata name="EndParagraph" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_EndParagraph" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.EndSentence">
      <topicdata group="api" />
      <apidata name="EndSentence" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_EndSentence" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.EndStyle">
      <topicdata group="api" />
      <apidata name="EndStyle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_EndStyle" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.EndVoice">
      <topicdata group="api" />
      <apidata name="EndVoice" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_EndVoice" />
    </api>
    <api id="P:System.Speech.Synthesis.PromptBuilder.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_PromptBuilder_IsEmpty" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartParagraph">
      <topicdata group="api" />
      <apidata name="StartParagraph" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartParagraph" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_StartParagraph" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartParagraph(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="StartParagraph" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartParagraph" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_StartParagraph_1_aad51702" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartSentence">
      <topicdata group="api" />
      <apidata name="StartSentence" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartSentence" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_StartSentence" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartSentence(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="StartSentence" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartSentence" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_StartSentence_1_aad51702" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartStyle(System.Speech.Synthesis.PromptStyle)">
      <topicdata group="api" />
      <apidata name="StartStyle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="style">
          <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_StartStyle_1_991be53a" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="StartVoice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_StartVoice_1_aad51702" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender)">
      <topicdata group="api" />
      <apidata name="StartVoice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gender">
          <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_StartVoice_1_9b59478d" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)">
      <topicdata group="api" />
      <apidata name="StartVoice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gender">
          <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
        </parameter>
        <parameter name="age">
          <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_StartVoice_2_1f87739b" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)">
      <topicdata group="api" />
      <apidata name="StartVoice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gender">
          <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
        </parameter>
        <parameter name="age">
          <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
        </parameter>
        <parameter name="voiceAlternate">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_StartVoice_3_be1d1ba3" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceInfo)">
      <topicdata group="api" />
      <apidata name="StartVoice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="voice">
          <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_StartVoice_1_40250bf8" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.String)">
      <topicdata group="api" />
      <apidata name="StartVoice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_StartVoice_1_72eac341" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.ToXml">
      <topicdata group="api" />
      <apidata name="ToXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_PromptBuilder_ToXml" />
    </api>
    <api id="T:System.Speech.Synthesis.PromptEmphasis">
      <topicdata group="api" />
      <apidata name="PromptEmphasis" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.PromptEmphasis.NotSet" />
        <element api="F:System.Speech.Synthesis.PromptEmphasis.Strong" />
        <element api="F:System.Speech.Synthesis.PromptEmphasis.Moderate" />
        <element api="F:System.Speech.Synthesis.PromptEmphasis.None" />
        <element api="F:System.Speech.Synthesis.PromptEmphasis.Reduced" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_PromptEmphasis" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptEmphasis.Moderate">
      <topicdata group="api" notopic="" />
      <apidata name="Moderate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptEmphasis_Moderate" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptEmphasis.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptEmphasis_None" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptEmphasis.NotSet">
      <topicdata group="api" notopic="" />
      <apidata name="NotSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptEmphasis_NotSet" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptEmphasis.Reduced">
      <topicdata group="api" notopic="" />
      <apidata name="Reduced" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptEmphasis_Reduced" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptEmphasis.Strong">
      <topicdata group="api" notopic="" />
      <apidata name="Strong" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptEmphasis_Strong" />
    </api>
    <api id="T:System.Speech.Synthesis.PromptEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.PromptEventArgs" />
      <apidata name="PromptEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Speech.Synthesis.BookmarkReachedEventArgs" ref="true" />
          <type api="T:System.Speech.Synthesis.SpeakStartedEventArgs" ref="true" />
          <type api="T:System.Speech.Synthesis.SpeakCompletedEventArgs" ref="true" />
          <type api="T:System.Speech.Synthesis.SpeakProgressEventArgs" ref="true" />
          <type api="T:System.Speech.Synthesis.VoiceChangeEventArgs" ref="true" />
          <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" ref="true" />
          <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_PromptEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.PromptEventArgs">
      <topicdata name="PromptEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.PromptEventArgs" />
      <apidata name="PromptEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_PromptEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.PromptEventArgs">
      <topicdata name="PromptEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.PromptEventArgs" />
      <apidata name="PromptEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_PromptEventArgs" />
    </api>
    <api id="P:System.Speech.Synthesis.PromptEventArgs.Prompt">
      <topicdata group="api" />
      <apidata name="Prompt" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_PromptEventArgs_Prompt" />
    </api>
    <api id="T:System.Speech.Synthesis.PromptRate">
      <topicdata group="api" />
      <apidata name="PromptRate" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.PromptRate.NotSet" />
        <element api="F:System.Speech.Synthesis.PromptRate.ExtraFast" />
        <element api="F:System.Speech.Synthesis.PromptRate.Fast" />
        <element api="F:System.Speech.Synthesis.PromptRate.Medium" />
        <element api="F:System.Speech.Synthesis.PromptRate.Slow" />
        <element api="F:System.Speech.Synthesis.PromptRate.ExtraSlow" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_PromptRate" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptRate.ExtraFast">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraFast" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptRate_ExtraFast" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptRate.ExtraSlow">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraSlow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptRate_ExtraSlow" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptRate.Fast">
      <topicdata group="api" notopic="" />
      <apidata name="Fast" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptRate_Fast" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptRate.Medium">
      <topicdata group="api" notopic="" />
      <apidata name="Medium" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptRate_Medium" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptRate.NotSet">
      <topicdata group="api" notopic="" />
      <apidata name="NotSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptRate_NotSet" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptRate.Slow">
      <topicdata group="api" notopic="" />
      <apidata name="Slow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptRate_Slow" />
    </api>
    <api id="T:System.Speech.Synthesis.PromptStyle">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.PromptStyle" />
      <apidata name="PromptStyle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_PromptStyle" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.PromptStyle">
      <topicdata name="PromptStyle" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.PromptStyle" />
      <apidata name="PromptStyle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Synthesis.PromptStyle.#ctor">
          <element api="M:System.Speech.Synthesis.PromptStyle.#ctor" />
          <element api="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptEmphasis)" />
          <element api="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptRate)" />
          <element api="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptVolume)" />
        </element>
        <element api="P:System.Speech.Synthesis.PromptStyle.Emphasis" />
        <element api="P:System.Speech.Synthesis.PromptStyle.Rate" />
        <element api="P:System.Speech.Synthesis.PromptStyle.Volume" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_PromptStyle" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.PromptStyle">
      <topicdata name="PromptStyle" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.PromptStyle" />
      <apidata name="PromptStyle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.PromptStyle.Emphasis" />
        <element api="P:System.Speech.Synthesis.PromptStyle.Rate" />
        <element api="P:System.Speech.Synthesis.PromptStyle.Volume" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_PromptStyle" />
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptStyle.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.PromptStyle" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptStyle.#ctor" />
        <element api="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptEmphasis)" />
        <element api="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptRate)" />
        <element api="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptVolume)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_PromptStyle_ctor" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptStyle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.PromptStyle.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_PromptStyle_ctor" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptEmphasis)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.PromptStyle.#ctor" />
      <parameters>
        <parameter name="emphasis">
          <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_PromptStyle_ctor_1_d80424ca" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptRate)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.PromptStyle.#ctor" />
      <parameters>
        <parameter name="rate">
          <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_PromptStyle_ctor_1_49c6366a" />
    </api>
    <api id="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptVolume)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.PromptStyle.#ctor" />
      <parameters>
        <parameter name="volume">
          <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_PromptStyle_ctor_1_ad1f4797" />
    </api>
    <api id="P:System.Speech.Synthesis.PromptStyle.Emphasis">
      <topicdata group="api" />
      <apidata name="Emphasis" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_PromptStyle_Emphasis" />
    </api>
    <api id="P:System.Speech.Synthesis.PromptStyle.Rate">
      <topicdata group="api" />
      <apidata name="Rate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_PromptStyle_Rate" />
    </api>
    <api id="P:System.Speech.Synthesis.PromptStyle.Volume">
      <topicdata group="api" />
      <apidata name="Volume" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_PromptStyle_Volume" />
    </api>
    <api id="T:System.Speech.Synthesis.PromptVolume">
      <topicdata group="api" />
      <apidata name="PromptVolume" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.PromptVolume.NotSet" />
        <element api="F:System.Speech.Synthesis.PromptVolume.Silent" />
        <element api="F:System.Speech.Synthesis.PromptVolume.ExtraSoft" />
        <element api="F:System.Speech.Synthesis.PromptVolume.Soft" />
        <element api="F:System.Speech.Synthesis.PromptVolume.Medium" />
        <element api="F:System.Speech.Synthesis.PromptVolume.Loud" />
        <element api="F:System.Speech.Synthesis.PromptVolume.ExtraLoud" />
        <element api="F:System.Speech.Synthesis.PromptVolume.Default" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_PromptVolume" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptVolume.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptVolume_Default" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptVolume.ExtraLoud">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraLoud" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptVolume_ExtraLoud" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptVolume.ExtraSoft">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraSoft" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptVolume_ExtraSoft" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptVolume.Loud">
      <topicdata group="api" notopic="" />
      <apidata name="Loud" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptVolume_Loud" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptVolume.Medium">
      <topicdata group="api" notopic="" />
      <apidata name="Medium" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptVolume_Medium" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptVolume.NotSet">
      <topicdata group="api" notopic="" />
      <apidata name="NotSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptVolume_NotSet" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptVolume.Silent">
      <topicdata group="api" notopic="" />
      <apidata name="Silent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptVolume_Silent" />
    </api>
    <api id="F:System.Speech.Synthesis.PromptVolume.Soft">
      <topicdata group="api" notopic="" />
      <apidata name="Soft" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_PromptVolume_Soft" />
    </api>
    <api id="T:System.Speech.Synthesis.SayAs">
      <topicdata group="api" />
      <apidata name="SayAs" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.SayAs.SpellOut" />
        <element api="F:System.Speech.Synthesis.SayAs.NumberOrdinal" />
        <element api="F:System.Speech.Synthesis.SayAs.NumberCardinal" />
        <element api="F:System.Speech.Synthesis.SayAs.Date" />
        <element api="F:System.Speech.Synthesis.SayAs.DayMonthYear" />
        <element api="F:System.Speech.Synthesis.SayAs.MonthDayYear" />
        <element api="F:System.Speech.Synthesis.SayAs.YearMonthDay" />
        <element api="F:System.Speech.Synthesis.SayAs.YearMonth" />
        <element api="F:System.Speech.Synthesis.SayAs.MonthYear" />
        <element api="F:System.Speech.Synthesis.SayAs.MonthDay" />
        <element api="F:System.Speech.Synthesis.SayAs.DayMonth" />
        <element api="F:System.Speech.Synthesis.SayAs.Year" />
        <element api="F:System.Speech.Synthesis.SayAs.Month" />
        <element api="F:System.Speech.Synthesis.SayAs.Day" />
        <element api="F:System.Speech.Synthesis.SayAs.Time" />
        <element api="F:System.Speech.Synthesis.SayAs.Time24" />
        <element api="F:System.Speech.Synthesis.SayAs.Time12" />
        <element api="F:System.Speech.Synthesis.SayAs.Telephone" />
        <element api="F:System.Speech.Synthesis.SayAs.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_SayAs" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Date">
      <topicdata group="api" notopic="" />
      <apidata name="Date" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_Date" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Day">
      <topicdata group="api" notopic="" />
      <apidata name="Day" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_Day" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.DayMonth">
      <topicdata group="api" notopic="" />
      <apidata name="DayMonth" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_DayMonth" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.DayMonthYear">
      <topicdata group="api" notopic="" />
      <apidata name="DayMonthYear" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_DayMonthYear" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Month">
      <topicdata group="api" notopic="" />
      <apidata name="Month" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_Month" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.MonthDay">
      <topicdata group="api" notopic="" />
      <apidata name="MonthDay" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_MonthDay" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.MonthDayYear">
      <topicdata group="api" notopic="" />
      <apidata name="MonthDayYear" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_MonthDayYear" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.MonthYear">
      <topicdata group="api" notopic="" />
      <apidata name="MonthYear" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_MonthYear" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.NumberCardinal">
      <topicdata group="api" notopic="" />
      <apidata name="NumberCardinal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_NumberCardinal" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.NumberOrdinal">
      <topicdata group="api" notopic="" />
      <apidata name="NumberOrdinal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_NumberOrdinal" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.SpellOut">
      <topicdata group="api" notopic="" />
      <apidata name="SpellOut" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_SpellOut" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Telephone">
      <topicdata group="api" notopic="" />
      <apidata name="Telephone" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_Telephone" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Text">
      <topicdata group="api" notopic="" />
      <apidata name="Text" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_Text" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Time">
      <topicdata group="api" notopic="" />
      <apidata name="Time" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_Time" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Time12">
      <topicdata group="api" notopic="" />
      <apidata name="Time12" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_Time12" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Time24">
      <topicdata group="api" notopic="" />
      <apidata name="Time24" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_Time24" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Year">
      <topicdata group="api" notopic="" />
      <apidata name="Year" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_Year" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.YearMonth">
      <topicdata group="api" notopic="" />
      <apidata name="YearMonth" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_YearMonth" />
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.YearMonthDay">
      <topicdata group="api" notopic="" />
      <apidata name="YearMonthDay" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SayAs_YearMonthDay" />
    </api>
    <api id="T:System.Speech.Synthesis.SpeakCompletedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      <apidata name="SpeakCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_SpeakCompletedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.SpeakCompletedEventArgs">
      <topicdata name="SpeakCompletedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      <apidata name="SpeakCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_SpeakCompletedEventArgs" />
    </api>
    <api id="T:System.Speech.Synthesis.SpeakProgressEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.SpeakProgressEventArgs" />
      <apidata name="SpeakProgressEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_SpeakProgressEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.SpeakProgressEventArgs">
      <topicdata name="SpeakProgressEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.SpeakProgressEventArgs" />
      <apidata name="SpeakProgressEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
        <element api="P:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition" />
        <element api="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount" />
        <element api="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition" />
        <element api="P:System.Speech.Synthesis.SpeakProgressEventArgs.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_SpeakProgressEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.SpeakProgressEventArgs">
      <topicdata name="SpeakProgressEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.SpeakProgressEventArgs" />
      <apidata name="SpeakProgressEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
        <element api="P:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition" />
        <element api="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount" />
        <element api="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition" />
        <element api="P:System.Speech.Synthesis.SpeakProgressEventArgs.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_SpeakProgressEventArgs" />
    </api>
    <api id="P:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeakProgressEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_SpeakProgressEventArgs_AudioPosition" />
    </api>
    <api id="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount">
      <topicdata group="api" />
      <apidata name="CharacterCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeakProgressEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_SpeakProgressEventArgs_CharacterCount" />
    </api>
    <api id="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition">
      <topicdata group="api" />
      <apidata name="CharacterPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeakProgressEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_SpeakProgressEventArgs_CharacterPosition" />
    </api>
    <api id="P:System.Speech.Synthesis.SpeakProgressEventArgs.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeakProgressEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_SpeakProgressEventArgs_Text" />
    </api>
    <api id="T:System.Speech.Synthesis.SpeakStartedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.SpeakStartedEventArgs" />
      <apidata name="SpeakStartedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_SpeakStartedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.SpeakStartedEventArgs">
      <topicdata name="SpeakStartedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.SpeakStartedEventArgs" />
      <apidata name="SpeakStartedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_SpeakStartedEventArgs" />
    </api>
    <api id="T:System.Speech.Synthesis.SpeechSynthesizer">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.SpeechSynthesizer" />
      <apidata name="SpeechSynthesizer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_SpeechSynthesizer" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.SpeechSynthesizer">
      <topicdata name="SpeechSynthesizer" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.SpeechSynthesizer" />
      <apidata name="SpeechSynthesizer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <element api="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
        </element>
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
        </element>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <element api="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <element api="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
        <element api="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_SpeechSynthesizer" />
    </api>
    <api id="Methods.T:System.Speech.Synthesis.SpeechSynthesizer">
      <topicdata name="SpeechSynthesizer" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.SpeechSynthesizer" />
      <apidata name="SpeechSynthesizer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
        </element>
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
        </element>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Methods_T_System_Speech_Synthesis_SpeechSynthesizer" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.SpeechSynthesizer">
      <topicdata name="SpeechSynthesizer" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.SpeechSynthesizer" />
      <apidata name="SpeechSynthesizer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
        <element api="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <element api="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
        <element api="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_SpeechSynthesizer" />
    </api>
    <api id="Events.T:System.Speech.Synthesis.SpeechSynthesizer">
      <topicdata name="SpeechSynthesizer" group="list" subgroup="Events" typeTopicId="T:System.Speech.Synthesis.SpeechSynthesizer" />
      <apidata name="SpeechSynthesizer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Events_T_System_Speech_Synthesis_SpeechSynthesizer" />
    </api>
    <api id="Overload:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices">
      <topicdata name="GetInstalledVoices" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.SpeechSynthesizer" />
      <apidata name="GetInstalledVoices" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices" />
    </api>
    <api id="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints">
      <topicdata name="SelectVoiceByHints" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.SpeechSynthesizer" />
      <apidata name="SelectVoiceByHints" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints" />
    </api>
    <api id="Overload:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile">
      <topicdata name="SetOutputToWaveFile" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.SpeechSynthesizer" />
      <apidata name="SetOutputToWaveFile" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveFile" />
    </api>
    <api id="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak">
      <topicdata name="Speak" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.SpeechSynthesizer" />
      <apidata name="Speak" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_SpeechSynthesizer_Speak" />
    </api>
    <api id="Overload:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync">
      <topicdata name="SpeakAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.SpeechSynthesizer" />
      <apidata name="SpeakAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_SpeechSynthesizer_ctor" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="AddLexicon" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="mediaType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_AddLexicon_2_d5663b1c" />
    </api>
    <api id="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached">
      <topicdata group="api" />
      <apidata name="BookmarkReached" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.BookmarkReachedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Synthesis.BookmarkReachedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Synthesis_SpeechSynthesizer_BookmarkReached" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_Dispose" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt">
      <topicdata group="api" />
      <apidata name="GetCurrentlySpokenPrompt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_GetCurrentlySpokenPrompt" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices">
      <topicdata group="api" />
      <apidata name="GetInstalledVoices" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.InstalledVoice" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="GetInstalledVoices" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.InstalledVoice" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_1_aad51702" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.Pause">
      <topicdata group="api" />
      <apidata name="Pause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_Pause" />
    </api>
    <api id="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached">
      <topicdata group="api" />
      <apidata name="PhonemeReached" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Synthesis_SpeechSynthesizer_PhonemeReached" />
    </api>
    <api id="P:System.Speech.Synthesis.SpeechSynthesizer.Rate">
      <topicdata group="api" />
      <apidata name="Rate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_SpeechSynthesizer_Rate" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)">
      <topicdata group="api" />
      <apidata name="RemoveLexicon" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_RemoveLexicon_1_c8269730" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.Resume">
      <topicdata group="api" />
      <apidata name="Resume" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_Resume" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)">
      <topicdata group="api" />
      <apidata name="SelectVoice" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SelectVoice_1_72eac341" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)">
      <topicdata group="api" />
      <apidata name="SelectVoiceByHints" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gender">
          <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_1_9b59478d" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)">
      <topicdata group="api" />
      <apidata name="SelectVoiceByHints" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gender">
          <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
        </parameter>
        <parameter name="age">
          <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_2_1f87739b" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)">
      <topicdata group="api" />
      <apidata name="SelectVoiceByHints" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gender">
          <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
        </parameter>
        <parameter name="age">
          <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
        </parameter>
        <parameter name="voiceAlternate">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_3_be1d1ba3" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="SelectVoiceByHints" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gender">
          <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
        </parameter>
        <parameter name="age">
          <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
        </parameter>
        <parameter name="voiceAlternate">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_4_b355db94" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)">
      <topicdata group="api" />
      <apidata name="SetOutputToAudioStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="audioDestination">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="formatInfo">
          <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SetOutputToAudioStream_2_b0622c86" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice">
      <topicdata group="api" />
      <apidata name="SetOutputToDefaultAudioDevice" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SetOutputToDefaultAudioDevice" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull">
      <topicdata group="api" />
      <apidata name="SetOutputToNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SetOutputToNull" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)">
      <topicdata group="api" />
      <apidata name="SetOutputToWaveFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveFile_1_72eac341" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)">
      <topicdata group="api" />
      <apidata name="SetOutputToWaveFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="formatInfo">
          <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveFile_2_cdb587bd" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="SetOutputToWaveStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="audioDestination">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveStream_1_6c2dff68" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)">
      <topicdata group="api" />
      <apidata name="Speak" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prompt">
          <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_Speak_1_e758a79a" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)">
      <topicdata group="api" />
      <apidata name="Speak" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="promptBuilder">
          <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_Speak_1_29bf1b2f" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)">
      <topicdata group="api" />
      <apidata name="Speak" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_Speak_1_72eac341" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)">
      <topicdata group="api" />
      <apidata name="SpeakAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prompt">
          <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_1_e758a79a" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)">
      <topicdata group="api" />
      <apidata name="SpeakAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="promptBuilder">
          <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_1_29bf1b2f" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)">
      <topicdata group="api" />
      <apidata name="SpeakAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_1_72eac341" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)">
      <topicdata group="api" />
      <apidata name="SpeakAsyncCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prompt">
          <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SpeakAsyncCancel_1_e758a79a" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll">
      <topicdata group="api" />
      <apidata name="SpeakAsyncCancelAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SpeakAsyncCancelAll" />
    </api>
    <api id="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted">
      <topicdata group="api" />
      <apidata name="SpeakCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.SpeakCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Synthesis.SpeakCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Synthesis_SpeechSynthesizer_SpeakCompleted" />
    </api>
    <api id="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress">
      <topicdata group="api" />
      <apidata name="SpeakProgress" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.SpeakProgressEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Synthesis.SpeakProgressEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Synthesis_SpeechSynthesizer_SpeakProgress" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)">
      <topicdata group="api" />
      <apidata name="SpeakSsml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SpeakSsml_1_72eac341" />
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)">
      <topicdata group="api" />
      <apidata name="SpeakSsmlAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_SpeechSynthesizer_SpeakSsmlAsync_1_72eac341" />
    </api>
    <api id="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted">
      <topicdata group="api" />
      <apidata name="SpeakStarted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.SpeakStartedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Synthesis.SpeakStartedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Synthesis_SpeechSynthesizer_SpeakStarted" />
    </api>
    <api id="P:System.Speech.Synthesis.SpeechSynthesizer.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_SpeechSynthesizer_State" />
    </api>
    <api id="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged">
      <topicdata group="api" />
      <apidata name="StateChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.StateChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Synthesis.StateChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Synthesis_SpeechSynthesizer_StateChanged" />
    </api>
    <api id="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached">
      <topicdata group="api" />
      <apidata name="VisemeReached" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Synthesis_SpeechSynthesizer_VisemeReached" />
    </api>
    <api id="P:System.Speech.Synthesis.SpeechSynthesizer.Voice">
      <topicdata group="api" />
      <apidata name="Voice" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_SpeechSynthesizer_Voice" />
    </api>
    <api id="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange">
      <topicdata group="api" />
      <apidata name="VoiceChange" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.VoiceChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Synthesis.VoiceChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="E_System_Speech_Synthesis_SpeechSynthesizer_VoiceChange" />
    </api>
    <api id="P:System.Speech.Synthesis.SpeechSynthesizer.Volume">
      <topicdata group="api" />
      <apidata name="Volume" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_SpeechSynthesizer_Volume" />
    </api>
    <api id="T:System.Speech.Synthesis.StateChangedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.StateChangedEventArgs" />
      <apidata name="StateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_StateChangedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.StateChangedEventArgs">
      <topicdata name="StateChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.StateChangedEventArgs" />
      <apidata name="StateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Synthesis.StateChangedEventArgs.PreviousState" />
        <element api="P:System.Speech.Synthesis.StateChangedEventArgs.State" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_StateChangedEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.StateChangedEventArgs">
      <topicdata name="StateChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.StateChangedEventArgs" />
      <apidata name="StateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.StateChangedEventArgs.PreviousState" />
        <element api="P:System.Speech.Synthesis.StateChangedEventArgs.State" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_StateChangedEventArgs" />
    </api>
    <api id="P:System.Speech.Synthesis.StateChangedEventArgs.PreviousState">
      <topicdata group="api" />
      <apidata name="PreviousState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.StateChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_StateChangedEventArgs_PreviousState" />
    </api>
    <api id="P:System.Speech.Synthesis.StateChangedEventArgs.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.StateChangedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_StateChangedEventArgs_State" />
    </api>
    <api id="T:System.Speech.Synthesis.SynthesisMediaType">
      <topicdata group="api" />
      <apidata name="SynthesisMediaType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.SynthesisMediaType.Text" />
        <element api="F:System.Speech.Synthesis.SynthesisMediaType.Ssml" />
        <element api="F:System.Speech.Synthesis.SynthesisMediaType.WaveAudio" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_SynthesisMediaType" />
    </api>
    <api id="F:System.Speech.Synthesis.SynthesisMediaType.Ssml">
      <topicdata group="api" notopic="" />
      <apidata name="Ssml" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesisMediaType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesisMediaType" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SynthesisMediaType_Ssml" />
    </api>
    <api id="F:System.Speech.Synthesis.SynthesisMediaType.Text">
      <topicdata group="api" notopic="" />
      <apidata name="Text" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesisMediaType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesisMediaType" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SynthesisMediaType_Text" />
    </api>
    <api id="F:System.Speech.Synthesis.SynthesisMediaType.WaveAudio">
      <topicdata group="api" notopic="" />
      <apidata name="WaveAudio" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesisMediaType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesisMediaType" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SynthesisMediaType_WaveAudio" />
    </api>
    <api id="T:System.Speech.Synthesis.SynthesisTextFormat">
      <topicdata group="api" />
      <apidata name="SynthesisTextFormat" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.SynthesisTextFormat.Text" />
        <element api="F:System.Speech.Synthesis.SynthesisTextFormat.Ssml" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_SynthesisTextFormat" />
    </api>
    <api id="F:System.Speech.Synthesis.SynthesisTextFormat.Ssml">
      <topicdata group="api" notopic="" />
      <apidata name="Ssml" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesisTextFormat" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesisTextFormat" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SynthesisTextFormat_Ssml" />
    </api>
    <api id="F:System.Speech.Synthesis.SynthesisTextFormat.Text">
      <topicdata group="api" notopic="" />
      <apidata name="Text" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesisTextFormat" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesisTextFormat" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SynthesisTextFormat_Text" />
    </api>
    <api id="T:System.Speech.Synthesis.SynthesizerEmphasis">
      <topicdata group="api" />
      <apidata name="SynthesizerEmphasis" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.SynthesizerEmphasis.Stressed" />
        <element api="F:System.Speech.Synthesis.SynthesizerEmphasis.Emphasized" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_System_Speech_Synthesis_SynthesizerEmphasis" />
    </api>
    <api id="F:System.Speech.Synthesis.SynthesizerEmphasis.Emphasized">
      <topicdata group="api" notopic="" />
      <apidata name="Emphasized" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerEmphasis" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesizerEmphasis" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SynthesizerEmphasis_Emphasized" />
    </api>
    <api id="F:System.Speech.Synthesis.SynthesizerEmphasis.Stressed">
      <topicdata group="api" notopic="" />
      <apidata name="Stressed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerEmphasis" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesizerEmphasis" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SynthesizerEmphasis_Stressed" />
    </api>
    <api id="T:System.Speech.Synthesis.SynthesizerState">
      <topicdata group="api" />
      <apidata name="SynthesizerState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.SynthesizerState.Ready" />
        <element api="F:System.Speech.Synthesis.SynthesizerState.Speaking" />
        <element api="F:System.Speech.Synthesis.SynthesizerState.Paused" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_SynthesizerState" />
    </api>
    <api id="F:System.Speech.Synthesis.SynthesizerState.Paused">
      <topicdata group="api" notopic="" />
      <apidata name="Paused" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SynthesizerState_Paused" />
    </api>
    <api id="F:System.Speech.Synthesis.SynthesizerState.Ready">
      <topicdata group="api" notopic="" />
      <apidata name="Ready" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SynthesizerState_Ready" />
    </api>
    <api id="F:System.Speech.Synthesis.SynthesizerState.Speaking">
      <topicdata group="api" notopic="" />
      <apidata name="Speaking" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_SynthesizerState_Speaking" />
    </api>
    <api id="T:System.Speech.Synthesis.VisemeReachedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.VisemeReachedEventArgs" />
      <apidata name="VisemeReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_VisemeReachedEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.VisemeReachedEventArgs">
      <topicdata name="VisemeReachedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.VisemeReachedEventArgs" />
      <apidata name="VisemeReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.Duration" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.Emphasis" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.NextViseme" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.Viseme" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_VisemeReachedEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.VisemeReachedEventArgs">
      <topicdata name="VisemeReachedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.VisemeReachedEventArgs" />
      <apidata name="VisemeReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.Duration" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.Emphasis" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.NextViseme" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.Viseme" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_VisemeReachedEventArgs" />
    </api>
    <api id="P:System.Speech.Synthesis.VisemeReachedEventArgs.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_VisemeReachedEventArgs_AudioPosition" />
    </api>
    <api id="P:System.Speech.Synthesis.VisemeReachedEventArgs.Duration">
      <topicdata group="api" />
      <apidata name="Duration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_VisemeReachedEventArgs_Duration" />
    </api>
    <api id="P:System.Speech.Synthesis.VisemeReachedEventArgs.Emphasis">
      <topicdata group="api" />
      <apidata name="Emphasis" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerEmphasis" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_VisemeReachedEventArgs_Emphasis" />
    </api>
    <api id="P:System.Speech.Synthesis.VisemeReachedEventArgs.NextViseme">
      <topicdata group="api" />
      <apidata name="NextViseme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_VisemeReachedEventArgs_NextViseme" />
    </api>
    <api id="P:System.Speech.Synthesis.VisemeReachedEventArgs.Viseme">
      <topicdata group="api" />
      <apidata name="Viseme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_VisemeReachedEventArgs_Viseme" />
    </api>
    <api id="T:System.Speech.Synthesis.VoiceAge">
      <topicdata group="api" />
      <apidata name="VoiceAge" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.VoiceAge.NotSet" />
        <element api="F:System.Speech.Synthesis.VoiceAge.Child" />
        <element api="F:System.Speech.Synthesis.VoiceAge.Teen" />
        <element api="F:System.Speech.Synthesis.VoiceAge.Adult" />
        <element api="F:System.Speech.Synthesis.VoiceAge.Senior" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_VoiceAge" />
    </api>
    <api id="F:System.Speech.Synthesis.VoiceAge.Adult">
      <topicdata group="api" notopic="" />
      <apidata name="Adult" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </returns>
      <value>30</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_VoiceAge_Adult" />
    </api>
    <api id="F:System.Speech.Synthesis.VoiceAge.Child">
      <topicdata group="api" notopic="" />
      <apidata name="Child" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_VoiceAge_Child" />
    </api>
    <api id="F:System.Speech.Synthesis.VoiceAge.NotSet">
      <topicdata group="api" notopic="" />
      <apidata name="NotSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_VoiceAge_NotSet" />
    </api>
    <api id="F:System.Speech.Synthesis.VoiceAge.Senior">
      <topicdata group="api" notopic="" />
      <apidata name="Senior" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </returns>
      <value>65</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_VoiceAge_Senior" />
    </api>
    <api id="F:System.Speech.Synthesis.VoiceAge.Teen">
      <topicdata group="api" notopic="" />
      <apidata name="Teen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_VoiceAge_Teen" />
    </api>
    <api id="T:System.Speech.Synthesis.VoiceChangeEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.VoiceChangeEventArgs" />
      <apidata name="VoiceChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_VoiceChangeEventArgs" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.VoiceChangeEventArgs">
      <topicdata name="VoiceChangeEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.VoiceChangeEventArgs" />
      <apidata name="VoiceChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
        <element api="P:System.Speech.Synthesis.VoiceChangeEventArgs.Voice" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_VoiceChangeEventArgs" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.VoiceChangeEventArgs">
      <topicdata name="VoiceChangeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.VoiceChangeEventArgs" />
      <apidata name="VoiceChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
        <element api="P:System.Speech.Synthesis.VoiceChangeEventArgs.Voice" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_VoiceChangeEventArgs" />
    </api>
    <api id="P:System.Speech.Synthesis.VoiceChangeEventArgs.Voice">
      <topicdata group="api" />
      <apidata name="Voice" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceChangeEventArgs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_VoiceChangeEventArgs_Voice" />
    </api>
    <api id="T:System.Speech.Synthesis.VoiceGender">
      <topicdata group="api" />
      <apidata name="VoiceGender" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.VoiceGender.NotSet" />
        <element api="F:System.Speech.Synthesis.VoiceGender.Male" />
        <element api="F:System.Speech.Synthesis.VoiceGender.Female" />
        <element api="F:System.Speech.Synthesis.VoiceGender.Neutral" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_VoiceGender" />
    </api>
    <api id="F:System.Speech.Synthesis.VoiceGender.Female">
      <topicdata group="api" notopic="" />
      <apidata name="Female" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_VoiceGender_Female" />
    </api>
    <api id="F:System.Speech.Synthesis.VoiceGender.Male">
      <topicdata group="api" notopic="" />
      <apidata name="Male" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_VoiceGender_Male" />
    </api>
    <api id="F:System.Speech.Synthesis.VoiceGender.Neutral">
      <topicdata group="api" notopic="" />
      <apidata name="Neutral" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_VoiceGender_Neutral" />
    </api>
    <api id="F:System.Speech.Synthesis.VoiceGender.NotSet">
      <topicdata group="api" notopic="" />
      <apidata name="NotSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_VoiceGender_NotSet" />
    </api>
    <api id="T:System.Speech.Synthesis.VoiceInfo">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.VoiceInfo" />
      <apidata name="VoiceInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="T_System_Speech_Synthesis_VoiceInfo" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.VoiceInfo">
      <topicdata name="VoiceInfo" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.VoiceInfo" />
      <apidata name="VoiceInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.AdditionalInfo" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Age" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Culture" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Description" />
        <element api="M:System.Speech.Synthesis.VoiceInfo.Equals(System.Object)" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Gender" />
        <element api="M:System.Speech.Synthesis.VoiceInfo.GetHashCode" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Id" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Name" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.SupportedAudioFormats" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_VoiceInfo" />
    </api>
    <api id="Methods.T:System.Speech.Synthesis.VoiceInfo">
      <topicdata name="VoiceInfo" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.VoiceInfo" />
      <apidata name="VoiceInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.VoiceInfo.Equals(System.Object)" />
        <element api="M:System.Speech.Synthesis.VoiceInfo.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Methods_T_System_Speech_Synthesis_VoiceInfo" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.VoiceInfo">
      <topicdata name="VoiceInfo" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.VoiceInfo" />
      <apidata name="VoiceInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.VoiceInfo.AdditionalInfo" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Age" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Culture" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Description" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Gender" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Id" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Name" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.SupportedAudioFormats" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_VoiceInfo" />
    </api>
    <api id="P:System.Speech.Synthesis.VoiceInfo.AdditionalInfo">
      <topicdata group="api" />
      <apidata name="AdditionalInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_VoiceInfo_AdditionalInfo" />
    </api>
    <api id="P:System.Speech.Synthesis.VoiceInfo.Age">
      <topicdata group="api" />
      <apidata name="Age" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_VoiceInfo_Age" />
    </api>
    <api id="P:System.Speech.Synthesis.VoiceInfo.Culture">
      <topicdata group="api" />
      <apidata name="Culture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_VoiceInfo_Culture" />
    </api>
    <api id="P:System.Speech.Synthesis.VoiceInfo.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_VoiceInfo_Description" />
    </api>
    <api id="M:System.Speech.Synthesis.VoiceInfo.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_VoiceInfo_Equals_1_2572741a" />
    </api>
    <api id="P:System.Speech.Synthesis.VoiceInfo.Gender">
      <topicdata group="api" />
      <apidata name="Gender" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_VoiceInfo_Gender" />
    </api>
    <api id="M:System.Speech.Synthesis.VoiceInfo.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_VoiceInfo_GetHashCode" />
    </api>
    <api id="P:System.Speech.Synthesis.VoiceInfo.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_VoiceInfo_Id" />
    </api>
    <api id="P:System.Speech.Synthesis.VoiceInfo.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_VoiceInfo_Name" />
    </api>
    <api id="P:System.Speech.Synthesis.VoiceInfo.SupportedAudioFormats">
      <topicdata group="api" />
      <apidata name="SupportedAudioFormats" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_VoiceInfo_SupportedAudioFormats" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.ContourPoint">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.TtsEngine.ContourPoint" />
      <apidata name="ContourPoint" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_ContourPoint" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.TtsEngine.ContourPoint">
      <topicdata name="ContourPoint" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.TtsEngine.ContourPoint" />
      <apidata name="ContourPoint" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ContourPoint.#ctor(System.Single,System.Single,System.Speech.Synthesis.TtsEngine.ContourPointChangeType)" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ContourPoint.Change" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ContourPoint.ChangeType" />
        <element api="Overload:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals">
          <element api="M:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals(System.Speech.Synthesis.TtsEngine.ContourPoint)" />
          <element api="M:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals(System.Object)" />
        </element>
        <element api="M:System.Speech.Synthesis.TtsEngine.ContourPoint.GetHashCode" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ContourPoint.op_Equality(System.Speech.Synthesis.TtsEngine.ContourPoint,System.Speech.Synthesis.TtsEngine.ContourPoint)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ContourPoint.op_Inequality(System.Speech.Synthesis.TtsEngine.ContourPoint,System.Speech.Synthesis.TtsEngine.ContourPoint)" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ContourPoint.Start" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_TtsEngine_ContourPoint" />
    </api>
    <api id="Methods.T:System.Speech.Synthesis.TtsEngine.ContourPoint">
      <topicdata name="ContourPoint" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.TtsEngine.ContourPoint" />
      <apidata name="ContourPoint" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ValueType.ToString" />
        <element api="Overload:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals">
          <element api="M:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals(System.Speech.Synthesis.TtsEngine.ContourPoint)" />
          <element api="M:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals(System.Object)" />
        </element>
        <element api="M:System.Speech.Synthesis.TtsEngine.ContourPoint.GetHashCode" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ContourPoint.op_Equality(System.Speech.Synthesis.TtsEngine.ContourPoint,System.Speech.Synthesis.TtsEngine.ContourPoint)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ContourPoint.op_Inequality(System.Speech.Synthesis.TtsEngine.ContourPoint,System.Speech.Synthesis.TtsEngine.ContourPoint)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Methods_T_System_Speech_Synthesis_TtsEngine_ContourPoint" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.TtsEngine.ContourPoint">
      <topicdata name="ContourPoint" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.TtsEngine.ContourPoint" />
      <apidata name="ContourPoint" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.TtsEngine.ContourPoint.Change" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ContourPoint.ChangeType" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ContourPoint.Start" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_TtsEngine_ContourPoint" />
    </api>
    <api id="Overload:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.TtsEngine.ContourPoint" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals(System.Speech.Synthesis.TtsEngine.ContourPoint)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_TtsEngine_ContourPoint_Equals" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ContourPoint.#ctor(System.Single,System.Single,System.Speech.Synthesis.TtsEngine.ContourPointChangeType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="start">
          <type api="T:System.Single" ref="false" />
        </parameter>
        <parameter name="change">
          <type api="T:System.Single" ref="false" />
        </parameter>
        <parameter name="changeType">
          <type api="T:System.Speech.Synthesis.TtsEngine.ContourPointChangeType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
      </containers>
      <file name="C_System_Speech_Synthesis_TtsEngine_ContourPoint_ctor_3_6cb0f2a2" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.ContourPoint.Change">
      <topicdata group="api" />
      <apidata name="Change" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_ContourPoint_Change" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.ContourPoint.ChangeType">
      <topicdata group="api" />
      <apidata name="ChangeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ContourPointChangeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_ContourPoint_ChangeType" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_ContourPoint_Equals_1_2572741a" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals(System.Speech.Synthesis.TtsEngine.ContourPoint)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_ContourPoint_Equals_1_ff40428f" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ContourPoint.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_ContourPoint_GetHashCode" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ContourPoint.op_Equality(System.Speech.Synthesis.TtsEngine.ContourPoint,System.Speech.Synthesis.TtsEngine.ContourPoint)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="point1">
          <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
        </parameter>
        <parameter name="point2">
          <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_ContourPoint_op_Equality_2_189b52ed" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ContourPoint.op_Inequality(System.Speech.Synthesis.TtsEngine.ContourPoint,System.Speech.Synthesis.TtsEngine.ContourPoint)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="point1">
          <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
        </parameter>
        <parameter name="point2">
          <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_ContourPoint_op_Inequality_2_189b52ed" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.ContourPoint.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_ContourPoint_Start" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.ContourPointChangeType">
      <topicdata group="api" />
      <apidata name="ContourPointChangeType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.TtsEngine.ContourPointChangeType.Hz" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ContourPointChangeType.Percentage" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_ContourPointChangeType" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ContourPointChangeType.Hz">
      <topicdata group="api" notopic="" />
      <apidata name="Hz" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ContourPointChangeType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ContourPointChangeType" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ContourPointChangeType_Hz" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ContourPointChangeType.Percentage">
      <topicdata group="api" notopic="" />
      <apidata name="Percentage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ContourPointChangeType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ContourPointChangeType" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ContourPointChangeType_Percentage" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak">
      <topicdata group="api" />
      <apidata name="EmphasisBreak" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.None" />
        <element api="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.ExtraWeak" />
        <element api="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.Weak" />
        <element api="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.Medium" />
        <element api="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.Strong" />
        <element api="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.ExtraStrong" />
        <element api="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.Default" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_EmphasisBreak" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak" ref="false" />
      </returns>
      <value>-7</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EmphasisBreak_Default" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.ExtraStrong">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraStrong" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak" ref="false" />
      </returns>
      <value>-6</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EmphasisBreak_ExtraStrong" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.ExtraWeak">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraWeak" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak" ref="false" />
      </returns>
      <value>-2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EmphasisBreak_ExtraWeak" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.Medium">
      <topicdata group="api" notopic="" />
      <apidata name="Medium" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak" ref="false" />
      </returns>
      <value>-4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EmphasisBreak_Medium" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EmphasisBreak_None" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.Strong">
      <topicdata group="api" notopic="" />
      <apidata name="Strong" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak" ref="false" />
      </returns>
      <value>-5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EmphasisBreak_Strong" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.Weak">
      <topicdata group="api" notopic="" />
      <apidata name="Weak" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak" ref="false" />
      </returns>
      <value>-3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EmphasisBreak_Weak" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.EmphasisWord">
      <topicdata group="api" />
      <apidata name="EmphasisWord" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.Default" />
        <element api="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.Strong" />
        <element api="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.Moderate" />
        <element api="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.None" />
        <element api="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.Reduced" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_EmphasisWord" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisWord" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisWord" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EmphasisWord_Default" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.Moderate">
      <topicdata group="api" notopic="" />
      <apidata name="Moderate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisWord" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisWord" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EmphasisWord_Moderate" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisWord" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisWord" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EmphasisWord_None" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.Reduced">
      <topicdata group="api" notopic="" />
      <apidata name="Reduced" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisWord" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisWord" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EmphasisWord_Reduced" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.Strong">
      <topicdata group="api" notopic="" />
      <apidata name="Strong" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisWord" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EmphasisWord" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EmphasisWord_Strong" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.EventParameterType">
      <topicdata group="api" />
      <apidata name="EventParameterType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined" />
        <element api="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Token" />
        <element api="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Object" />
        <element api="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer" />
        <element api="F:System.Speech.Synthesis.TtsEngine.EventParameterType.String" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_EventParameterType" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Object">
      <topicdata group="api" notopic="" />
      <apidata name="Object" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EventParameterType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EventParameterType" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EventParameterType_Object" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer">
      <topicdata group="api" notopic="" />
      <apidata name="Pointer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EventParameterType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EventParameterType" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EventParameterType_Pointer" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EventParameterType.String">
      <topicdata group="api" notopic="" />
      <apidata name="String" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EventParameterType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EventParameterType" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EventParameterType_String" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Token">
      <topicdata group="api" notopic="" />
      <apidata name="Token" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EventParameterType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EventParameterType" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EventParameterType_Token" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined">
      <topicdata group="api" notopic="" />
      <apidata name="Undefined" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.EventParameterType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.EventParameterType" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_EventParameterType_Undefined" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.FragmentState">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.TtsEngine.FragmentState" />
      <apidata name="FragmentState" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_FragmentState" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.TtsEngine.FragmentState">
      <topicdata name="FragmentState" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.TtsEngine.FragmentState" />
      <apidata name="FragmentState" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])" />
        <element api="P:System.Speech.Synthesis.TtsEngine.FragmentState.Action" />
        <element api="P:System.Speech.Synthesis.TtsEngine.FragmentState.Duration" />
        <element api="P:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis" />
        <element api="Overload:System.Speech.Synthesis.TtsEngine.FragmentState.Equals">
          <element api="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)" />
          <element api="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)" />
        </element>
        <element api="M:System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode" />
        <element api="P:System.Speech.Synthesis.TtsEngine.FragmentState.LangId" />
        <element api="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)" />
        <element api="P:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme" />
        <element api="P:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody" />
        <element api="P:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_TtsEngine_FragmentState" />
    </api>
    <api id="Methods.T:System.Speech.Synthesis.TtsEngine.FragmentState">
      <topicdata name="FragmentState" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.TtsEngine.FragmentState" />
      <apidata name="FragmentState" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ValueType.ToString" />
        <element api="Overload:System.Speech.Synthesis.TtsEngine.FragmentState.Equals">
          <element api="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)" />
          <element api="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)" />
        </element>
        <element api="M:System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode" />
        <element api="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Methods_T_System_Speech_Synthesis_TtsEngine_FragmentState" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.TtsEngine.FragmentState">
      <topicdata name="FragmentState" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.TtsEngine.FragmentState" />
      <apidata name="FragmentState" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.TtsEngine.FragmentState.Action" />
        <element api="P:System.Speech.Synthesis.TtsEngine.FragmentState.Duration" />
        <element api="P:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis" />
        <element api="P:System.Speech.Synthesis.TtsEngine.FragmentState.LangId" />
        <element api="P:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme" />
        <element api="P:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody" />
        <element api="P:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_TtsEngine_FragmentState" />
    </api>
    <api id="Overload:System.Speech.Synthesis.TtsEngine.FragmentState.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.TtsEngine.FragmentState" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_TtsEngine_FragmentState_Equals" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
        </parameter>
        <parameter name="langId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="emphasis">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="duration">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sayAs">
          <type api="T:System.Speech.Synthesis.TtsEngine.SayAs" ref="true" />
        </parameter>
        <parameter name="prosody">
          <type api="T:System.Speech.Synthesis.TtsEngine.Prosody" ref="true" />
        </parameter>
        <parameter name="phonemes">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
      </containers>
      <file name="C_System_Speech_Synthesis_TtsEngine_FragmentState_ctor_7_f3ce9574" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.FragmentState.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_FragmentState_Action" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.FragmentState.Duration">
      <topicdata group="api" />
      <apidata name="Duration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_FragmentState_Duration" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis">
      <topicdata group="api" />
      <apidata name="Emphasis" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_FragmentState_Emphasis" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.TtsEngine.FragmentState.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_FragmentState_Equals_1_2572741a" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.TtsEngine.FragmentState.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_FragmentState_Equals_1_a82bd4c2" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_FragmentState_GetHashCode" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.FragmentState.LangId">
      <topicdata group="api" />
      <apidata name="LangId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_FragmentState_LangId" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="state1">
          <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
        </parameter>
        <parameter name="state2">
          <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_FragmentState_op_Equality_2_46aa0e51" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="state1">
          <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
        </parameter>
        <parameter name="state2">
          <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_FragmentState_op_Inequality_2_46aa0e51" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme">
      <topicdata group="api" />
      <apidata name="Phoneme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Char" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_FragmentState_Phoneme" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody">
      <topicdata group="api" />
      <apidata name="Prosody" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.Prosody" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_FragmentState_Prosody" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs">
      <topicdata group="api" />
      <apidata name="SayAs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.SayAs" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_FragmentState_SayAs" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      <apidata name="ITtsEngineSite" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_ITtsEngineSite" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite">
      <topicdata name="ITtsEngineSite" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      <apidata name="ITtsEngineSite" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Actions" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents(System.Speech.Synthesis.TtsEngine.SpeechEventInfo[],System.Int32)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.CompleteSkip(System.Int32)" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.GetSkipInfo" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.LoadResource(System.Uri,System.String)" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Rate" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Volume" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Write(System.IntPtr,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_TtsEngine_ITtsEngineSite" />
    </api>
    <api id="Methods.T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite">
      <topicdata name="ITtsEngineSite" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      <apidata name="ITtsEngineSite" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents(System.Speech.Synthesis.TtsEngine.SpeechEventInfo[],System.Int32)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.CompleteSkip(System.Int32)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.GetSkipInfo" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.LoadResource(System.Uri,System.String)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Write(System.IntPtr,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Methods_T_System_Speech_Synthesis_TtsEngine_ITtsEngineSite" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite">
      <topicdata name="ITtsEngineSite" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      <apidata name="ITtsEngineSite" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Actions" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Rate" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Volume" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_TtsEngine_ITtsEngineSite" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Actions">
      <topicdata group="api" />
      <apidata name="Actions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_ITtsEngineSite_Actions" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents(System.Speech.Synthesis.TtsEngine.SpeechEventInfo[],System.Int32)">
      <topicdata group="api" />
      <apidata name="AddEvents" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="events">
          <arrayOf rank="1">
            <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_ITtsEngineSite_AddEvents_2_244399d1" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.CompleteSkip(System.Int32)">
      <topicdata group="api" />
      <apidata name="CompleteSkip" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="skipped">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_ITtsEngineSite_CompleteSkip_1_cd2d7ec9" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest">
      <topicdata group="api" />
      <apidata name="EventInterest" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_ITtsEngineSite_EventInterest" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.GetSkipInfo">
      <topicdata group="api" />
      <apidata name="GetSkipInfo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.SkipInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_ITtsEngineSite_GetSkipInfo" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.LoadResource(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="LoadResource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="mediaType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_ITtsEngineSite_LoadResource_2_d5663b1c" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Rate">
      <topicdata group="api" />
      <apidata name="Rate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_ITtsEngineSite_Rate" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Volume">
      <topicdata group="api" />
      <apidata name="Volume" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_ITtsEngineSite_Volume" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Write(System.IntPtr,System.Int32)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_ITtsEngineSite_Write_2_280dfb34" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.Prosody">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.TtsEngine.Prosody" />
      <apidata name="Prosody" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="sequential" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_Prosody" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.TtsEngine.Prosody">
      <topicdata name="Prosody" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.TtsEngine.Prosody" />
      <apidata name="Prosody" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.TtsEngine.Prosody.#ctor" />
        <element api="P:System.Speech.Synthesis.TtsEngine.Prosody.Duration" />
        <element api="M:System.Speech.Synthesis.TtsEngine.Prosody.GetContourPoints" />
        <element api="P:System.Speech.Synthesis.TtsEngine.Prosody.Pitch" />
        <element api="P:System.Speech.Synthesis.TtsEngine.Prosody.Range" />
        <element api="P:System.Speech.Synthesis.TtsEngine.Prosody.Rate" />
        <element api="M:System.Speech.Synthesis.TtsEngine.Prosody.SetContourPoints(System.Speech.Synthesis.TtsEngine.ContourPoint[])" />
        <element api="P:System.Speech.Synthesis.TtsEngine.Prosody.Volume" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_TtsEngine_Prosody" />
    </api>
    <api id="Methods.T:System.Speech.Synthesis.TtsEngine.Prosody">
      <topicdata name="Prosody" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.TtsEngine.Prosody" />
      <apidata name="Prosody" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.TtsEngine.Prosody.GetContourPoints" />
        <element api="M:System.Speech.Synthesis.TtsEngine.Prosody.SetContourPoints(System.Speech.Synthesis.TtsEngine.ContourPoint[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Methods_T_System_Speech_Synthesis_TtsEngine_Prosody" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.TtsEngine.Prosody">
      <topicdata name="Prosody" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.TtsEngine.Prosody" />
      <apidata name="Prosody" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.TtsEngine.Prosody.Duration" />
        <element api="P:System.Speech.Synthesis.TtsEngine.Prosody.Pitch" />
        <element api="P:System.Speech.Synthesis.TtsEngine.Prosody.Range" />
        <element api="P:System.Speech.Synthesis.TtsEngine.Prosody.Rate" />
        <element api="P:System.Speech.Synthesis.TtsEngine.Prosody.Volume" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_TtsEngine_Prosody" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.Prosody.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.Prosody" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_TtsEngine_Prosody_ctor" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.Prosody.Duration">
      <topicdata group="api" />
      <apidata name="Duration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.Prosody" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_Prosody_Duration" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.Prosody.GetContourPoints">
      <topicdata group="api" />
      <apidata name="GetContourPoints" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.Prosody" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_Prosody_GetContourPoints" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.Prosody.Pitch">
      <topicdata group="api" />
      <apidata name="Pitch" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.Prosody" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_Prosody_Pitch" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.Prosody.Range">
      <topicdata group="api" />
      <apidata name="Range" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.Prosody" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_Prosody_Range" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.Prosody.Rate">
      <topicdata group="api" />
      <apidata name="Rate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.Prosody" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_Prosody_Rate" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.Prosody.SetContourPoints(System.Speech.Synthesis.TtsEngine.ContourPoint[])">
      <topicdata group="api" />
      <apidata name="SetContourPoints" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="points">
          <arrayOf rank="1">
            <type api="T:System.Speech.Synthesis.TtsEngine.ContourPoint" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.Prosody" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_Prosody_SetContourPoints_1_68e26ba7" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.Prosody.Volume">
      <topicdata group="api" />
      <apidata name="Volume" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.Prosody" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_Prosody_Volume" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" />
      <apidata name="ProsodyNumber" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_ProsodyNumber" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.TtsEngine.ProsodyNumber">
      <topicdata name="ProsodyNumber" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" />
      <apidata name="ProsodyNumber" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ValueType.ToString" />
        <element api="Overload:System.Speech.Synthesis.TtsEngine.ProsodyNumber.#ctor">
          <element api="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.#ctor(System.Int32)" />
          <element api="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.#ctor(System.Single)" />
        </element>
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyNumber.AbsoluteNumber" />
        <element api="Overload:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals">
          <element api="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals(System.Object)" />
          <element api="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals(System.Speech.Synthesis.TtsEngine.ProsodyNumber)" />
        </element>
        <element api="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.GetHashCode" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.IsNumberPercent" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Number" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.op_Equality(System.Speech.Synthesis.TtsEngine.ProsodyNumber,System.Speech.Synthesis.TtsEngine.ProsodyNumber)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.op_Inequality(System.Speech.Synthesis.TtsEngine.ProsodyNumber,System.Speech.Synthesis.TtsEngine.ProsodyNumber)" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.SsmlAttributeId" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Unit" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_TtsEngine_ProsodyNumber" />
    </api>
    <api id="Methods.T:System.Speech.Synthesis.TtsEngine.ProsodyNumber">
      <topicdata name="ProsodyNumber" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" />
      <apidata name="ProsodyNumber" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ValueType.ToString" />
        <element api="Overload:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals">
          <element api="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals(System.Object)" />
          <element api="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals(System.Speech.Synthesis.TtsEngine.ProsodyNumber)" />
        </element>
        <element api="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.GetHashCode" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.op_Equality(System.Speech.Synthesis.TtsEngine.ProsodyNumber,System.Speech.Synthesis.TtsEngine.ProsodyNumber)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.op_Inequality(System.Speech.Synthesis.TtsEngine.ProsodyNumber,System.Speech.Synthesis.TtsEngine.ProsodyNumber)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Methods_T_System_Speech_Synthesis_TtsEngine_ProsodyNumber" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.TtsEngine.ProsodyNumber">
      <topicdata name="ProsodyNumber" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" />
      <apidata name="ProsodyNumber" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.IsNumberPercent" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Number" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.SsmlAttributeId" />
        <element api="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Unit" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_TtsEngine_ProsodyNumber" />
    </api>
    <api id="Fields.T:System.Speech.Synthesis.TtsEngine.ProsodyNumber">
      <topicdata name="ProsodyNumber" group="list" subgroup="Fields" typeTopicId="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" />
      <apidata name="ProsodyNumber" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyNumber.AbsoluteNumber" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Fields_T_System_Speech_Synthesis_TtsEngine_ProsodyNumber" />
    </api>
    <api id="Overload:System.Speech.Synthesis.TtsEngine.ProsodyNumber.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.#ctor(System.Int32)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.#ctor(System.Single)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_TtsEngine_ProsodyNumber_ctor" />
    </api>
    <api id="Overload:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals(System.Object)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals(System.Speech.Synthesis.TtsEngine.ProsodyNumber)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_TtsEngine_ProsodyNumber_Equals" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.TtsEngine.ProsodyNumber.#ctor" />
      <parameters>
        <parameter name="ssmlAttributeId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </containers>
      <file name="C_System_Speech_Synthesis_TtsEngine_ProsodyNumber_ctor_1_f9cace8a" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.#ctor(System.Single)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.TtsEngine.ProsodyNumber.#ctor" />
      <parameters>
        <parameter name="number">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </containers>
      <file name="C_System_Speech_Synthesis_TtsEngine_ProsodyNumber_ctor_1_08c8eacd" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyNumber.AbsoluteNumber">
      <topicdata group="api" />
      <apidata name="AbsoluteNumber" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyNumber_AbsoluteNumber" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_ProsodyNumber_Equals_1_2572741a" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals(System.Speech.Synthesis.TtsEngine.ProsodyNumber)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_ProsodyNumber_Equals_1_e5ab08dd" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_ProsodyNumber_GetHashCode" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.IsNumberPercent">
      <topicdata group="api" />
      <apidata name="IsNumberPercent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_ProsodyNumber_IsNumberPercent" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Number">
      <topicdata group="api" />
      <apidata name="Number" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_ProsodyNumber_Number" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.op_Equality(System.Speech.Synthesis.TtsEngine.ProsodyNumber,System.Speech.Synthesis.TtsEngine.ProsodyNumber)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prosodyNumber1">
          <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
        </parameter>
        <parameter name="prosodyNumber2">
          <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_ProsodyNumber_op_Equality_2_53e6cfda" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.op_Inequality(System.Speech.Synthesis.TtsEngine.ProsodyNumber,System.Speech.Synthesis.TtsEngine.ProsodyNumber)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prosodyNumber1">
          <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
        </parameter>
        <parameter name="prosodyNumber2">
          <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_ProsodyNumber_op_Inequality_2_53e6cfda" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.SsmlAttributeId">
      <topicdata group="api" />
      <apidata name="SsmlAttributeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_ProsodyNumber_SsmlAttributeId" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Unit">
      <topicdata group="api" />
      <apidata name="Unit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyUnit" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_ProsodyNumber_Unit" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.ProsodyPitch">
      <topicdata group="api" />
      <apidata name="ProsodyPitch" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.Default" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.ExtraLow" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.Low" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.Medium" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.High" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.ExtraHigh" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_ProsodyPitch" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyPitch" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyPitch" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyPitch_Default" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.ExtraHigh">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraHigh" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyPitch" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyPitch" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyPitch_ExtraHigh" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.ExtraLow">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraLow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyPitch" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyPitch" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyPitch_ExtraLow" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.High">
      <topicdata group="api" notopic="" />
      <apidata name="High" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyPitch" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyPitch" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyPitch_High" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.Low">
      <topicdata group="api" notopic="" />
      <apidata name="Low" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyPitch" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyPitch" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyPitch_Low" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.Medium">
      <topicdata group="api" notopic="" />
      <apidata name="Medium" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyPitch" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyPitch" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyPitch_Medium" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.ProsodyRange">
      <topicdata group="api" />
      <apidata name="ProsodyRange" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.Default" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.ExtraLow" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.Low" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.Medium" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.High" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.ExtraHigh" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_ProsodyRange" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRange" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRange" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyRange_Default" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.ExtraHigh">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraHigh" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRange" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRange" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyRange_ExtraHigh" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.ExtraLow">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraLow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRange" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRange" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyRange_ExtraLow" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.High">
      <topicdata group="api" notopic="" />
      <apidata name="High" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRange" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRange" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyRange_High" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.Low">
      <topicdata group="api" notopic="" />
      <apidata name="Low" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRange" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRange" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyRange_Low" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.Medium">
      <topicdata group="api" notopic="" />
      <apidata name="Medium" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRange" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRange" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyRange_Medium" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.ProsodyRate">
      <topicdata group="api" />
      <apidata name="ProsodyRate" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.Default" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.ExtraSlow" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.Slow" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.Medium" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.Fast" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.ExtraFast" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_ProsodyRate" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRate" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRate" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyRate_Default" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.ExtraFast">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraFast" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRate" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRate" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyRate_ExtraFast" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.ExtraSlow">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraSlow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRate" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRate" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyRate_ExtraSlow" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.Fast">
      <topicdata group="api" notopic="" />
      <apidata name="Fast" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRate" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRate" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyRate_Fast" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.Medium">
      <topicdata group="api" notopic="" />
      <apidata name="Medium" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRate" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRate" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyRate_Medium" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.Slow">
      <topicdata group="api" notopic="" />
      <apidata name="Slow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRate" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyRate" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyRate_Slow" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.ProsodyUnit">
      <topicdata group="api" />
      <apidata name="ProsodyUnit" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyUnit.Default" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyUnit.Hz" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyUnit.Semitone" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_ProsodyUnit" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyUnit.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyUnit" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyUnit" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyUnit_Default" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyUnit.Hz">
      <topicdata group="api" notopic="" />
      <apidata name="Hz" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyUnit" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyUnit" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyUnit_Hz" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyUnit.Semitone">
      <topicdata group="api" notopic="" />
      <apidata name="Semitone" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyUnit" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyUnit" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyUnit_Semitone" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume">
      <topicdata group="api" />
      <apidata name="ProsodyVolume" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Default" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Silent" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.ExtraSoft" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Soft" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Medium" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Loud" />
        <element api="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.ExtraLoud" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_ProsodyVolume" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyVolume_Default" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.ExtraLoud">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraLoud" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume" ref="false" />
      </returns>
      <value>-7</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyVolume_ExtraLoud" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.ExtraSoft">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraSoft" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume" ref="false" />
      </returns>
      <value>-3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyVolume_ExtraSoft" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Loud">
      <topicdata group="api" notopic="" />
      <apidata name="Loud" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume" ref="false" />
      </returns>
      <value>-6</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyVolume_Loud" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Medium">
      <topicdata group="api" notopic="" />
      <apidata name="Medium" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume" ref="false" />
      </returns>
      <value>-5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyVolume_Medium" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Silent">
      <topicdata group="api" notopic="" />
      <apidata name="Silent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume" ref="false" />
      </returns>
      <value>-2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyVolume_Silent" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Soft">
      <topicdata group="api" notopic="" />
      <apidata name="Soft" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume" ref="false" />
      </returns>
      <value>-4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_ProsodyVolume_Soft" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.SayAs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.TtsEngine.SayAs" />
      <apidata name="SayAs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="sequential" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_SayAs" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.TtsEngine.SayAs">
      <topicdata name="SayAs" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.TtsEngine.SayAs" />
      <apidata name="SayAs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.TtsEngine.SayAs.#ctor" />
        <element api="P:System.Speech.Synthesis.TtsEngine.SayAs.Detail" />
        <element api="P:System.Speech.Synthesis.TtsEngine.SayAs.Format" />
        <element api="P:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_TtsEngine_SayAs" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.TtsEngine.SayAs">
      <topicdata name="SayAs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.TtsEngine.SayAs" />
      <apidata name="SayAs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.TtsEngine.SayAs.Detail" />
        <element api="P:System.Speech.Synthesis.TtsEngine.SayAs.Format" />
        <element api="P:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_TtsEngine_SayAs" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.SayAs.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SayAs" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_TtsEngine_SayAs_ctor" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.SayAs.Detail">
      <topicdata group="api" />
      <apidata name="Detail" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SayAs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_SayAs_Detail" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.SayAs.Format">
      <topicdata group="api" />
      <apidata name="Format" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SayAs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_SayAs_Format" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs">
      <topicdata group="api" />
      <apidata name="InterpretAs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SayAs" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_SayAs_InterpretAs" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.SkipInfo">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.TtsEngine.SkipInfo" />
      <apidata name="SkipInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_SkipInfo" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.TtsEngine.SkipInfo">
      <topicdata name="SkipInfo" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.TtsEngine.SkipInfo" />
      <apidata name="SkipInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.TtsEngine.SkipInfo.#ctor" />
        <element api="P:System.Speech.Synthesis.TtsEngine.SkipInfo.Count" />
        <element api="P:System.Speech.Synthesis.TtsEngine.SkipInfo.Type" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_TtsEngine_SkipInfo" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.TtsEngine.SkipInfo">
      <topicdata name="SkipInfo" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.TtsEngine.SkipInfo" />
      <apidata name="SkipInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.TtsEngine.SkipInfo.Count" />
        <element api="P:System.Speech.Synthesis.TtsEngine.SkipInfo.Type" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_TtsEngine_SkipInfo" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.SkipInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SkipInfo" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_TtsEngine_SkipInfo_ctor" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.SkipInfo.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SkipInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_SkipInfo_Count" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.SkipInfo.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SkipInfo" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_SkipInfo_Type" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat">
      <topicdata group="api" />
      <apidata name="SpeakOutputFormat" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat.WaveFormat" />
        <element api="F:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_SpeakOutputFormat" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat.Text">
      <topicdata group="api" notopic="" />
      <apidata name="Text" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_SpeakOutputFormat_Text" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat.WaveFormat">
      <topicdata group="api" notopic="" />
      <apidata name="WaveFormat" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_SpeakOutputFormat_WaveFormat" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      <apidata name="SpeechEventInfo" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_SpeechEventInfo" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo">
      <topicdata name="SpeechEventInfo" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      <apidata name="SpeechEventInfo" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)" />
        <element api="Overload:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals">
          <element api="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)" />
          <element api="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
        </element>
        <element api="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId" />
        <element api="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode" />
        <element api="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
        <element api="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1" />
        <element api="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" />
        <element api="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_TtsEngine_SpeechEventInfo" />
    </api>
    <api id="Methods.T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo">
      <topicdata name="SpeechEventInfo" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      <apidata name="SpeechEventInfo" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ValueType.ToString" />
        <element api="Overload:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals">
          <element api="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)" />
          <element api="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode" />
        <element api="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Methods_T_System_Speech_Synthesis_TtsEngine_SpeechEventInfo" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo">
      <topicdata name="SpeechEventInfo" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      <apidata name="SpeechEventInfo" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId" />
        <element api="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1" />
        <element api="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" />
        <element api="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_TtsEngine_SpeechEventInfo" />
    </api>
    <api id="Overload:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
      </containers>
      <file name="O_T_System_Speech_Synthesis_TtsEngine_SpeechEventInfo_Equals" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="eventId">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="parameterType">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="param1">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="param2">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
      </containers>
      <file name="C_System_Speech_Synthesis_TtsEngine_SpeechEventInfo_ctor_4_95f2b749" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_SpeechEventInfo_Equals_1_2572741a" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_SpeechEventInfo_Equals_1_45921125" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId">
      <topicdata group="api" />
      <apidata name="EventId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_SpeechEventInfo_EventId" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_SpeechEventInfo_GetHashCode" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="event1">
          <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
        </parameter>
        <parameter name="event2">
          <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_SpeechEventInfo_op_Equality_2_88a18aca" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="event1">
          <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
        </parameter>
        <parameter name="event2">
          <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_SpeechEventInfo_op_Inequality_2_88a18aca" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1">
      <topicdata group="api" />
      <apidata name="Param1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_SpeechEventInfo_Param1" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2">
      <topicdata group="api" />
      <apidata name="Param2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_SpeechEventInfo_Param2" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType">
      <topicdata group="api" />
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" ref="false" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_SpeechEventInfo_ParameterType" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.TextFragment">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.TtsEngine.TextFragment" />
      <apidata name="TextFragment" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="sequential" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_TextFragment" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.TtsEngine.TextFragment">
      <topicdata name="TextFragment" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.TtsEngine.TextFragment" />
      <apidata name="TextFragment" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.TtsEngine.TextFragment.#ctor" />
        <element api="P:System.Speech.Synthesis.TtsEngine.TextFragment.State" />
        <element api="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength" />
        <element api="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset" />
        <element api="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_TtsEngine_TextFragment" />
    </api>
    <api id="Properties.T:System.Speech.Synthesis.TtsEngine.TextFragment">
      <topicdata name="TextFragment" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.TtsEngine.TextFragment" />
      <apidata name="TextFragment" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="P:System.Speech.Synthesis.TtsEngine.TextFragment.State" />
        <element api="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength" />
        <element api="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset" />
        <element api="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Properties_T_System_Speech_Synthesis_TtsEngine_TextFragment" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.TextFragment.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TextFragment" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_TtsEngine_TextFragment_ctor" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.TextFragment.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.FragmentState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TextFragment" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_TextFragment_State" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength">
      <topicdata group="api" />
      <apidata name="TextLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TextFragment" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_TextFragment_TextLength" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset">
      <topicdata group="api" />
      <apidata name="TextOffset" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TextFragment" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_TextFragment_TextOffset" />
    </api>
    <api id="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak">
      <topicdata group="api" />
      <apidata name="TextToSpeak" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TextFragment" ref="true" />
      </containers>
      <file name="P_System_Speech_Synthesis_TtsEngine_TextFragment_TextToSpeak" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction">
      <topicdata group="api" />
      <apidata name="TtsEngineAction" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak" />
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence" />
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Pronounce" />
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Bookmark" />
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.SpellOut" />
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.StartSentence" />
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.StartParagraph" />
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.ParseUnknownTag" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_TtsEngineAction" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Bookmark">
      <topicdata group="api" notopic="" />
      <apidata name="Bookmark" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEngineAction_Bookmark" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.ParseUnknownTag">
      <topicdata group="api" notopic="" />
      <apidata name="ParseUnknownTag" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEngineAction_ParseUnknownTag" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Pronounce">
      <topicdata group="api" notopic="" />
      <apidata name="Pronounce" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEngineAction_Pronounce" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence">
      <topicdata group="api" notopic="" />
      <apidata name="Silence" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEngineAction_Silence" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak">
      <topicdata group="api" notopic="" />
      <apidata name="Speak" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEngineAction_Speak" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.SpellOut">
      <topicdata group="api" notopic="" />
      <apidata name="SpellOut" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEngineAction_SpellOut" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.StartParagraph">
      <topicdata group="api" notopic="" />
      <apidata name="StartParagraph" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEngineAction_StartParagraph" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.StartSentence">
      <topicdata group="api" notopic="" />
      <apidata name="StartSentence" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEngineAction_StartSentence" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />
      <apidata name="TtsEngineSsml" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_TtsEngineSsml" />
    </api>
    <api id="AllMembers.T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml">
      <topicdata name="TtsEngineSsml" group="list" subgroup="members" typeTopicId="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />
      <apidata name="TtsEngineSsml" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="AllMembers_T_System_Speech_Synthesis_TtsEngine_TtsEngineSsml" />
    </api>
    <api id="Methods.T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml">
      <topicdata name="TtsEngineSsml" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />
      <apidata name="TtsEngineSsml" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
        <element api="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="Methods_T_System_Speech_Synthesis_TtsEngine_TtsEngineSsml" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="registryKey">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" ref="true" />
      </containers>
      <file name="C_System_Speech_Synthesis_TtsEngine_TtsEngineSsml_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)">
      <topicdata group="api" />
      <apidata name="AddLexicon" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="mediaType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="site">
          <type api="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_TtsEngineSsml_AddLexicon_3_daf6d8fc" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)">
      <topicdata group="api" />
      <apidata name="GetOutputFormat" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="speakOutputFormat">
          <type api="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" ref="false" />
        </parameter>
        <parameter name="targetWaveFormat">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_TtsEngineSsml_GetOutputFormat_2_ed73c4f5" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)">
      <topicdata group="api" />
      <apidata name="RemoveLexicon" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="site">
          <type api="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_TtsEngineSsml_RemoveLexicon_2_6f200b08" />
    </api>
    <api id="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)">
      <topicdata group="api" />
      <apidata name="Speak" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="fragment">
          <arrayOf rank="1">
            <type api="T:System.Speech.Synthesis.TtsEngine.TextFragment" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="waveHeader">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="site">
          <type api="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" ref="true" />
      </containers>
      <file name="M_System_Speech_Synthesis_TtsEngine_TtsEngineSsml_Speak_3_e8ae56a1" />
    </api>
    <api id="T:System.Speech.Synthesis.TtsEngine.TtsEventId">
      <topicdata group="api" />
      <apidata name="TtsEventId" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEventId.StartInputStream" />
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEventId.EndInputStream" />
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEventId.VoiceChange" />
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEventId.Bookmark" />
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary" />
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEventId.Phoneme" />
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEventId.SentenceBoundary" />
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEventId.Viseme" />
        <element api="F:System.Speech.Synthesis.TtsEngine.TtsEventId.AudioLevel" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" />
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
      </containers>
      <file name="T_System_Speech_Synthesis_TtsEngine_TtsEventId" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEventId.AudioLevel">
      <topicdata group="api" notopic="" />
      <apidata name="AudioLevel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEventId_AudioLevel" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEventId.Bookmark">
      <topicdata group="api" notopic="" />
      <apidata name="Bookmark" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEventId_Bookmark" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEventId.EndInputStream">
      <topicdata group="api" notopic="" />
      <apidata name="EndInputStream" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEventId_EndInputStream" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEventId.Phoneme">
      <topicdata group="api" notopic="" />
      <apidata name="Phoneme" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEventId_Phoneme" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEventId.SentenceBoundary">
      <topicdata group="api" notopic="" />
      <apidata name="SentenceBoundary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEventId_SentenceBoundary" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEventId.StartInputStream">
      <topicdata group="api" notopic="" />
      <apidata name="StartInputStream" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEventId_StartInputStream" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEventId.Viseme">
      <topicdata group="api" notopic="" />
      <apidata name="Viseme" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEventId_Viseme" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEventId.VoiceChange">
      <topicdata group="api" notopic="" />
      <apidata name="VoiceChange" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEventId_VoiceChange" />
    </api>
    <api id="F:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary">
      <topicdata group="api" notopic="" />
      <apidata name="WordBoundary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech">
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis.TtsEngine" />
        <type api="T:System.Speech.Synthesis.TtsEngine.TtsEventId" ref="false" />
      </containers>
      <file name="F_System_Speech_Synthesis_TtsEngine_TtsEventId_WordBoundary" />
    </api>
  </apis>
</reflection>